%(
	****************************************************************

		Copyright (c) 1992, Carnegie Mellon University

		All Rights Reserved

	Permission  is  hereby  granted   to  use,  copy,  modify,  and
	distribute  this software  provided  that the  above  copyright
	notice appears in  all copies and that  any distribution be for
	noncommercial purposes.

	Carnegie Mellon University disclaims all warranties with regard
	to this software.  In no event shall Carnegie Mellon University
	be liable for  any special, indirect,  or consequential damages
	or any damages whatsoever  resulting from loss of use, data, or
	profits  arising  out of  or in  connection  with  the  use  or
	performance of this software.

	****************************************************************
)%
%SBTTL	'TELNET.R32'
!++
! Telnet.R32	Copyright (c) 1986	Carnegie Mellon University
!
! Description:
!
!	Information about well known telnet connection.
!
! Written_By:
!
!	Dale Moore	09-APR-1986	CMU-CS/RI
!
! Modifications:
!
!	Henry W. Miller	13-Aug-1990	USBR
!	Added Telnet$_EOL_Type_CRLF and Telnet$_EOL_Type_CRNULL.
!
!	Pete Neergaard	20-JUL-1986	CMU-CS/RI
!	Add constant for terminal location options
!--

LIBRARY 'SYS$LIBRARY:STARLET';

MACRO
    version_string	= %ASCID'04.1'%;


LITERAL
    TELNET$K_Debug	= 0;

!++
! Constants from RFC855
!--

LITERAL
    Telnet$K_SE		= 240,	! End of subnegotiation parameters
    Telnet$K_NOP	= 241,	! No operation
    Telnet$K_Data_Mark	= 242,	! The data stream portion of a Synch
			 	! This should always be accompanied
				! by a TCP Urgent notification.
    Telnet$K_Brk	= 243, 	! NVT character BRK
    Telnet$K_IP		= 244,	! The function IP Interrupt Process
    Telnet$K_AO		= 245,	! The function AO Abort output
    Telnet$K_AYT	= 246,	! The function AYT Are You There
    Telnet$K_EC		= 247,	! The function EC Erase character
    Telnet$K_EL		= 248,	! The function EL Erase Line
    Telnet$K_GA		= 249,	! The function GA Go Ahead
    Telnet$K_SB		= 250,	! Indicates that what follows is
				! subnegotiation of the indicated
				! option
    Telnet$K_WILL	= 251,	! Indicates the desire to begin
				! performing, or confirmation that
				! you are now performing, the
				! indicated option
    Telnet$K_WONT	= 252,	! Indicates the refusal to perform,
			 	! or continue performing, the
			 	! indicated option.
    Telnet$K_DO		= 253,	! Indicates the request that the
			 	! other party perform, or
			 	! confirmation that you are expecting
			 	! the other party to perform, the
			 	! indicated option.
    Telnet$K_DONT	= 254,	! Indicates the demand that the
			 	! other party stop performing,
			 	! or confirmation that you are no
			 	! longer expecting the other party
			 	! to perform, the indicated option.
    Telnet$K_IAC	= 255,	! Data Byte 255.

!++
!   Constants from RFC946.
!--

    Telnet$K_TTLFMT	= 0;


!++
!   The Telnet TCP connection is established between the user's port U
!   and the server's port L.  The server listens on its well known port L
!   for such connections.  Since a TCP connection is full duplex and
!   identified by the pair of ports, the server can engage in many
!   simultaneous connections involving it's port L and different user
!   ports U.
!
!   Port Assignment
!
!      When used for remote user access to service hosts (i.e., remote
!      terminal access) this protocol is assigned server port 23 (27
!      octal).  That is L=23.
!--
LITERAL
    Telnet$K_SERVER_PORT	= 23;



EXTERNAL LITERAL
!++
! Description:
!
!	These literals come from Telnet_MSG.MSG.
!
!--
	Telnet$_Facility,

!.SEVERITY	FATAL
	Telnet$_GET_INET,
	Telnet$_NOT_TERM,
	Telnet$_HOST_NOT_FOUND,
	Telnet$_KEY_SYNTAX,
	Telnet$_ESC_SYNTAX,
	Telnet$_PORT_SYNTAX,
	Telnet$_TCP_RECV,
	Telnet$_TCP_Send,

!.SEVERITY	WARNING
	Telnet$_NO_OPEN,
	Telnet$_PROTOCOL,
	Telnet$_WRITEFAILED,

!.SEVERITY	ERROR
	Telnet$_No_Switch,
	Telnet$_Control_C,
	Telnet$_Error,

!.SEVERITY	INFO
	Telnet$_Autoflush_ON,
	Telnet$_Autoflush_OFF,
	Telnet$_BINARY_ON,
	Telnet$_BINARY_OFF,
	Telnet$_Blocking_ON,
	Telnet$_Blocking_OFF,
	Telnet$_Connect_ON,
	Telnet$_Connect_OFF,
	Telnet$_DEBUG_ON,
	Telnet$_DEBUG_OFF,
	Telnet$_ECHO_ON,
	Telnet$_ECHO_OFF,
	Telnet$_Rem_ECHO_ON,
	Telnet$_Rem_ECHO_OFF,
	Telnet$_EIGHTBIT_ON,
	Telnet$_EIGHTBIT_OFF,
	Telnet$_EOL_Type_CRLF,
	Telnet$_EOL_Type_CRNULL,
	Telnet$_Extended_ON,
	Telnet$_Extended_OFF,
	Telnet$_NO_BINARY_ON,
	Telnet$_XOFF,
	Telnet$_NO_XOFF,
	Telnet$_Linemode_ON,
	Telnet$_Linemode_OFF,
	Telnet$_Linemode_NEG,
	Telnet$_Local_Synch,
	Telnet$_No_Local_Synch,
	Telnet$_LOCALCHARS_ON,
	Telnet$_LOCALCHARS_OFF,
	Telnet$_LOG_ON,
	Telnet$_LOG_OFF,
	Telnet$_Negotiate,
	Telnet$_NO_LOG,
	Telnet$_Rem_Synch_ON,
	Telnet$_Rem_Synch_OFF,
	Telnet$_Synch_ON,
	Telnet$_Synch_OFF,
	Telnet$_TRY_BINARY_ON,
	Telnet$_TRY_BINARY_OFF,
	Telnet$_Quiet_ON,
	Telnet$_Quiet_OFF,
	Telnet$_Urgent_ON,
	Telnet$_Urgent_OFF,
	Telnet$_X_ON,
	Telnet$_X_OFF,

!.SEVERITY	INFO
	Telnet$_Duplicate_keys,
	Telnet$_TRYING,
	Telnet$_NOT_ATTACHED,
	Telnet$_Attach_to,
	Telnet$_NOT_CONNECTED,
	Telnet$_OPTION_OOR,
	Telnet$_R_WILL,
	Telnet$_R_WONT,
	Telnet$_R_DO,
	Telnet$_R_DONT,
	Telnet$_R_TTYLOC,
	Telnet$_R_TTYTYPE_SEND,
	Telnet$_R_WINDOW_SIZE,
	Telnet$_R_TTYSPEED_SEND,
	Telnet$_R_TOG_FLOW_CNTL_OFF,
	Telnet$_R_TOG_FLOW_CNTL_ON,
	Telnet$_R_LINEMODE_OFF,
	Telnet$_R_LINEMODE_ON,
	Telnet$_S_COMM,
	Telnet$_S_COMM_UNKNOWN,
	Telnet$_S_WILL,
	Telnet$_S_WONT,
	Telnet$_S_DO,
	Telnet$_S_DONT,
	Telnet$_S_TTYLOC,
	Telnet$_S_NOP,
	Telnet$_S_TTYTYPE,
	Telnet$_S_LOCATION,
	Telnet$_S_WINDOW_SIZE,
	Telnet$_S_TTYSPEED,
	Telnet$_S_LINE_WIDTH,
	Telnet$_S_PAGE_SIZE,
	Telnet$_S_USER_ID,

!.SEVERITY	SUCCESS
        Telnet$_S_SEND_AO,
        Telnet$_S_SEND_AYT,
        Telnet$_S_SEND_BRK,
        Telnet$_S_SEND_IP,

!.SEVERITY	SUCCESS
	Telnet$_CLOSED,
	Telnet$_CONN_CLOSED,
	Telnet$_ABORT,
	Telnet$_CONNECTED ,
	Telnet$_OPEN,
	Telnet$_NO_OPTIONS,
	Telnet$_PAUSE,
	Telnet$_RETURNING,
	Telnet$_RESUME;



MACRO
    TTIOSB$W_STATUS	= 0, 0, 16, 0%,
    TTIOSB$W_OFFSET	= 2, 0, 16, 0%,
    TTIOSB$W_TERMINATOR	= 4, 0, 16, 0%,
    TTIOSB$W_TERM_SIZE	= 6, 0, 16, 0%;

!++
! These macros describe the characteristics of the input terminal
!--
MACRO
    QCB$B_CLASS		= 0, 0,  8, 0%,
    QCB$B_TYPE		= 1, 0,  8, 0%,
    QCB$W_BUFFER_SIZE	= 2, 0, 16, 0%,
    QCB$L_CHARISTICS	= 4, 0, 32, 0%,
    QCB$B_PAGE_LENGTH	= 7, 0,  8, 0%,
    QCB$L_EXTEND_CHAR	= 8, 0, 32, 0%;
LITERAL
    QCB$K_Size	= 12;


	%SBTTL 'Macro for exit handler descriptor block definition'

MACRO
    EXH$L_Flink		=  0, 0, 32, 0%,
    EXH$L_Handler	=  4, 0, 32, 0%,
    EXH$L_NumArgs	=  8, 0, 32, 0%,
    EXH$B_NumArgs	=  8, 0,  8, 0%,
    EXH$L_MBZ		=  9, 0, 24, 0%,
    EXH$L_Status_A	= 12, 0, 32, 0%,
    EXH$L_First_Arg	= 16, 0, 32, 0%;

LITERAL
    EXH$K_Size	= (255 * %upval) + $BYTEOFFSET(EXH$L_First_Arg);

!++
! This macro describes the terminal translation table entries.
!--
MACRO
    TTab$L_NAME		= 0, 0, 32, 0%,
    TTab$W_TYPE		= 4, 0, 16, 0%,
    TTab$W_NEXT		= 6, 0, 16, 1%;
LITERAL
    TTab$K_Size	= 8;
!!!    TTab$K_Table_Size	= 43;

!++
! This macro describes the local character definition table.
!--
MACRO
    SLC$A_BEGINING	= 0, 0, 0, 0%,
    SLC$B_DEFAULT	= 0, 0, 8, 0%,
    SLC$B_DESIRED	= 1, 0, 8, 0%,
    SLC$B_CURRENT	= 2, 0, 8, 0%,
    SLC$B_STATUS	= 3, 0, 8, 0%,
    SLC$F_LEVEL		= 3, 6, 2, 0%;

LITERAL
    SLC$K_Size	= 4;

!++
! This macro describes the telnet job structure
!--
!STRUCTURE - More to come when I have the time.
!  DEC/CMS REPLACEMENT HISTORY, Element TELNET.R32
!  *2    13-MAR-1991 22:07:26 SYNFUL "Added Telnet$_WRITEFAILED error code"
!  *1     5-MAR-1991 19:03:14 SYNFUL "Information about well known Telnet connection"
!  DEC/CMS REPLACEMENT HISTORY, Element TELNET.R32

