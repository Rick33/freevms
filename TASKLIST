FreeVMS tasklist

1. High priority:
	CPU/PAL
	RMS/ODS-2/Ext2 write support

2. Medium priority:
	GRUB with ODS-2, ODS-2 execute etc
	VMS image and linker
	General bugfix, extensions, compliance to ordinary functionality

3. Low priority:
	Locks
	Cluster
	LIBRTL
	CLI, LBR, CDU, MSG (can live without, but DCL gets ugly without)

4. Yet unknown priority:
	System service dispatching
	Condition handling
	Mutexes
	CRTL
	64-bit LE (have to go through the code to handle int, long etc)

5. No priority:
	SMP
	Volume shadowing
	Non-intel
	64-bit BE
	See SElinux link

***************************************

Detailed descriptions:

  Basic/foundation stuff:

    CPU/PAL
	We will need someone with keen eye for and high knowledge of CPU 
	semantics to finish IPLs etc, because we need to get synchronization
	correct on the instruction level, or we will never get it stable.

	Important concepts are atomicity/noninterruption, interlocking, stacks.
	(See VARM, eventually AARM.) 

	Also needed is implementing and finishing the following instructions:

		INSQUE, REMQUE
		ADAWI, INSQHI, INSQTI, REMQHI, REMQTI
		PROBE
		CHMx
		REI
		SWASTEN
		SWPCTX, LDPCTX

	Interrupt/trap/stack functionality

  Data Structure Definitions

  Kernel:	

    Control Mechanisms:
	ASTs

    Synchronization:
	Lock management (DLM)

    Memory management

    Process and time management

    I/O Subsystem

    Logicals

  ODS-2

  DCL
  Suggested order:
	CLI, LBR
	CDU, MSG
	DCL itself, with Internal Procedures
	CLI Command Language Interface routines No kernel stuff
		See
		$ help cli
		http://www.openvms.compaq.com:8000/73final/4493/
		4493pro_003.html#cli_chap
	LBR librarian   No kernel stuff (I think)
		See 
		$ help lbr
		http://www.openvms.compaq.com:8000/73final/6100/
		6100pro_005.html#lib_chap
		http://www.openvms.compaq.com:8000/73final/4493/
		4493pro_019.html#23_structureoflibraries
	CDU Command Definition Utility  No kernel stuff (I think)
		See
		$ help set command
		http://www.openvms.compaq.com:8000/73final/6100/
		6100pro.html#cd_chap
	MSG message     No kernel stuff (I think)
		See
		$ help rtl lib lib$signal
		$ help message 
		http://www.openvms.compaq.com:8000/73final/6100/
		6100pro_008.html#msg_chap
	Internal procedures possible now, some can be developed independently
		=, assign, call, create/name_table, deassign, define,
		delete/symbol, eod, exit, gosub, goto, if/then/else/endif,
		inquire, on, read, recall, return, set control, set prompt,
		set symbol, set [no]verify, show symbol, show time,
		show translation, stop, write

	Internal procedures for later (kernel dependent)
		allocate, attach, cancel, close, connect, continue, 
		deallocate, debug, deck, define/key, delete/key, deposit,
		disconnect, eoj, examine, open, set default, set key,
		set [no]on, set output_rate, set protection, set uic,
		show default, show key, show protection, show quota,
		show status, spawn, wait

	Also see: 
		Look up DCL in the Internals book. 
		Mainly Process Dynamics chapter.

  Basic libraries:
    LBR

  Other libraries:
    LIBRTL

  "SRM"

  RMS, barely started, need more people.
  "SRM" handling ODS-2
  Utilities COPY DIRECTORY etc
  VMS image support, linker+compiler support for images
  Kernel:
    Control Mechanisms:
	Condition handling
	System service dispatching
    Synchronization:
	Spinlocks, the Linux ones are probably usable.
	Mutexes
    SMP support

  Clustering, SCA, MSCP etc
  Ordinary security stuff.
  	Start with aiming at
	http://www.nsa.gov/selinux/doc/inevitability/inevitability.html (not?)

  Non-i386 support.
  64-bit support.

  CRTL, we will continue to try to use libc etc? 
  Editors, got edt from Ozone
  Volume shadowing

***************************************

CURRENT/ACTIVE PEOPLE:

Andrew Allison: librtl
Bertrand Joël: srm
Roar Thronæs: CPU/PAL, Kernel, Cluster, the rest practically and everywhere
Zakaria Yassine: init
