diff -ruN grub-0.95-orig/configure grub-0.95/configure
--- grub-0.95-orig/configure	2004-06-13 19:42:59.000000000 +0200
+++ grub-0.95/configure	2004-11-13 13:56:04.000000000 +0100
@@ -858,6 +858,7 @@
   --disable-dependency-tracking  speeds up one-time build
   --enable-dependency-tracking   do not reject slow dependency extractors
   --disable-ext2fs        disable ext2fs support in Stage 2
+  --disable-ods2          disable ods2 support in Stage 2
   --disable-fat           disable FAT support in Stage 2
   --disable-ffs           disable FFS support in Stage 2
   --disable-ufs2          disable UFS2 support in Stage 2
@@ -5413,10 +5414,19 @@
 
 fi;
 
+if test "${enable_ods2+set}" = set; then
+  enableval="$enable_ods2"
+
+fi;
+
 if test x"$enable_ext2fs" != xno; then
   FSYS_CFLAGS="$FSYS_CFLAGS -DFSYS_EXT2FS=1"
 fi
 
+if test x"$enable_ods2" != xno; then
+  FSYS_CFLAGS="$FSYS_CFLAGS -DFSYS_ODS2=1"
+fi
+
 # Check whether --enable-fat or --disable-fat was given.
 if test "${enable_fat+set}" = set; then
   enableval="$enable_fat"
diff -ruN grub-0.95-orig/configure.ac grub-0.95/configure.ac
--- grub-0.95-orig/configure.ac	2004-06-13 19:38:17.000000000 +0200
+++ grub-0.95/configure.ac	2004-11-13 10:31:59.000000000 +0100
@@ -228,6 +228,13 @@
   FSYS_CFLAGS="$FSYS_CFLAGS -DFSYS_EXT2FS=1"
 fi
 
+AC_ARG_ENABLE(ods2,
+  [  --disable-ods2        disable ods2 support in Stage 2])
+
+if test x"$enable_ods2" != xno; then
+  FSYS_CFLAGS="$FSYS_CFLAGS -DFSYS_ODS2=1"
+fi
+
 AC_ARG_ENABLE(fat,
   [  --disable-fat           disable FAT support in Stage 2])
 
diff -ruN grub-0.95-orig/grub/Makefile.in grub-0.95/grub/Makefile.in
--- grub-0.95-orig/grub/Makefile.in	2004-06-13 19:43:46.000000000 +0200
+++ grub-0.95/grub/Makefile.in	2004-11-13 13:32:25.000000000 +0100
@@ -180,7 +180,7 @@
 @SERIAL_SPEED_SIMULATION_TRUE@SERIAL_FLAGS = -DSUPPORT_SERIAL=1 -DSIMULATE_SLOWNESS_OF_SERIAL=1
 AM_CPPFLAGS = -DGRUB_UTIL=1 -DFSYS_EXT2FS=1 -DFSYS_FAT=1 -DFSYS_FFS=1 \
 	-DFSYS_ISO9660=1 -DFSYS_JFS=1 -DFSYS_MINIX=1 -DFSYS_REISERFS=1 \
-	-DFSYS_UFS2=1 -DFSYS_VSTAFS=1 -DFSYS_XFS=1 \
+	-DFSYS_UFS2=1 -DFSYS_VSTAFS=1 -DFSYS_XFS=1 -DFSYS_ODS2=1 \
 	-DUSE_MD5_PASSWORDS=1 -DSUPPORT_HERCULES=1 \
 	$(SERIAL_FLAGS) -I$(top_srcdir)/stage2 \
 	-I$(top_srcdir)/stage1 -I$(top_srcdir)/lib
diff -ruN grub-0.95-orig/mytypes.h grub-0.95/mytypes.h
--- grub-0.95-orig/mytypes.h	1970-01-01 01:00:00.000000000 +0100
+++ grub-0.95/mytypes.h	2003-10-09 08:31:50.000000000 +0200
@@ -0,0 +1,37 @@
+#ifndef mytypes_h
+#define mytypes_h
+
+
+/* Access.h v1.3    Definitions for file access routines */
+
+/*
+        This is part of ODS2 written by Paul Nankervis,
+        email address:  Paulnank@au1.ibm.com
+
+        ODS2 is distributed freely for all members of the
+        VMS community to use. However all derived works
+        must maintain comments in their source to acknowledge
+        the contibution of the original author.
+
+	Originally a part of access.h
+*/
+
+#define NO_DOLLAR
+#include "vmstime.h"
+
+#ifdef FREEVMS_BIG_ENDIAN
+#define VMSLONG(l) ((l & 0xff) << 24 | (l & 0xff00) << 8 | (l & 0xff0000) >> 8 | l >> 24)
+#define VMSWORD(w) ((w & 0xff) << 8 | w >> 8)
+#define VMSSWAP(l) ((l & 0xff0000) << 8 | (l & 0xff000000) >> 8 |(l & 0xff) << 8 | (l & 0xff00) >> 8)
+#else
+#define VMSLONG(l) l
+#define VMSWORD(w) w
+#define VMSSWAP(l) ((l & 0xffff) << 16 | l >> 16)
+#endif
+
+typedef unsigned char vmsbyte;
+typedef unsigned short vmsword;
+typedef unsigned int vmsswap;
+typedef unsigned int vmslong;
+
+#endif
diff -ruN grub-0.95-orig/stage2/Makefile.in grub-0.95/stage2/Makefile.in
--- grub-0.95-orig/stage2/Makefile.in	2004-06-13 19:57:37.000000000 +0200
+++ grub-0.95/stage2/Makefile.in	2004-11-13 13:34:09.000000000 +0100
@@ -18,7 +18,7 @@
 
 
 
-SOURCES = $(libgrub_a_SOURCES) $(diskless_exec_SOURCES) $(e2fs_stage1_5_exec_SOURCES) $(fat_stage1_5_exec_SOURCES) $(ffs_stage1_5_exec_SOURCES) $(iso9660_stage1_5_exec_SOURCES) $(jfs_stage1_5_exec_SOURCES) $(minix_stage1_5_exec_SOURCES) $(nbloader_exec_SOURCES) $(pre_stage2_exec_SOURCES) $(pxeloader_exec_SOURCES) $(reiserfs_stage1_5_exec_SOURCES) $(start_exec_SOURCES) $(start_eltorito_exec_SOURCES) $(ufs2_stage1_5_exec_SOURCES) $(vstafs_stage1_5_exec_SOURCES) $(xfs_stage1_5_exec_SOURCES)
+SOURCES = $(libgrub_a_SOURCES) $(diskless_exec_SOURCES) $(e2fs_stage1_5_exec_SOURCES) $(o2fs_stage1_5_exec_SOURCES) $(fat_stage1_5_exec_SOURCES) $(ffs_stage1_5_exec_SOURCES) $(iso9660_stage1_5_exec_SOURCES) $(jfs_stage1_5_exec_SOURCES) $(minix_stage1_5_exec_SOURCES) $(nbloader_exec_SOURCES) $(pre_stage2_exec_SOURCES) $(pxeloader_exec_SOURCES) $(reiserfs_stage1_5_exec_SOURCES) $(start_exec_SOURCES) $(start_eltorito_exec_SOURCES) $(ufs2_stage1_5_exec_SOURCES) $(vstafs_stage1_5_exec_SOURCES) $(xfs_stage1_5_exec_SOURCES)
 
 srcdir = @srcdir@
 top_srcdir = @top_srcdir@
@@ -46,6 +46,7 @@
 @DISKLESS_SUPPORT_FALSE@	start.exec$(EXEEXT) \
 @DISKLESS_SUPPORT_FALSE@	start_eltorito.exec$(EXEEXT) \
 @DISKLESS_SUPPORT_FALSE@	e2fs_stage1_5.exec$(EXEEXT) \
+@DISKLESS_SUPPORT_FALSE@	o2fs_stage1_5.exec$(EXEEXT) \
 @DISKLESS_SUPPORT_FALSE@	fat_stage1_5.exec$(EXEEXT) \
 @DISKLESS_SUPPORT_FALSE@	ffs_stage1_5.exec$(EXEEXT) \
 @DISKLESS_SUPPORT_FALSE@	iso9660_stage1_5.exec$(EXEEXT) \
@@ -59,6 +60,7 @@
 @DISKLESS_SUPPORT_TRUE@	start.exec$(EXEEXT) \
 @DISKLESS_SUPPORT_TRUE@	start_eltorito.exec$(EXEEXT) \
 @DISKLESS_SUPPORT_TRUE@	e2fs_stage1_5.exec$(EXEEXT) \
+@DISKLESS_SUPPORT_TRUE@	o2fs_stage1_5.exec$(EXEEXT) \
 @DISKLESS_SUPPORT_TRUE@	fat_stage1_5.exec$(EXEEXT) \
 @DISKLESS_SUPPORT_TRUE@	ffs_stage1_5.exec$(EXEEXT) \
 @DISKLESS_SUPPORT_TRUE@	iso9660_stage1_5.exec$(EXEEXT) \
@@ -93,7 +95,7 @@
 	libgrub_a-disk_io.$(OBJEXT) libgrub_a-fsys_ext2fs.$(OBJEXT) \
 	libgrub_a-fsys_fat.$(OBJEXT) libgrub_a-fsys_ffs.$(OBJEXT) \
 	libgrub_a-fsys_iso9660.$(OBJEXT) libgrub_a-fsys_jfs.$(OBJEXT) \
-	libgrub_a-fsys_minix.$(OBJEXT) \
+	libgrub_a-fsys_minix.$(OBJEXT) libgrub_a-fsys_ods2.$(OBJEXT) \
 	libgrub_a-fsys_reiserfs.$(OBJEXT) \
 	libgrub_a-fsys_ufs2.$(OBJEXT) libgrub_a-fsys_vstafs.$(OBJEXT) \
 	libgrub_a-fsys_xfs.$(OBJEXT) libgrub_a-gunzip.$(OBJEXT) \
@@ -110,6 +112,7 @@
 	diskless_exec-console.$(OBJEXT) \
 	diskless_exec-disk_io.$(OBJEXT) \
 	diskless_exec-fsys_ext2fs.$(OBJEXT) \
+	diskless_exec-fsys_ods2.$(OBJEXT) \
 	diskless_exec-fsys_fat.$(OBJEXT) \
 	diskless_exec-fsys_ffs.$(OBJEXT) \
 	diskless_exec-fsys_iso9660.$(OBJEXT) \
@@ -135,9 +138,21 @@
 	e2fs_stage1_5_exec-disk_io.$(OBJEXT) \
 	e2fs_stage1_5_exec-stage1_5.$(OBJEXT) \
 	e2fs_stage1_5_exec-fsys_ext2fs.$(OBJEXT) \
+	e2fs_stage1_5_exec-fsys_ods2.$(OBJEXT) \
 	e2fs_stage1_5_exec-bios.$(OBJEXT)
 e2fs_stage1_5_exec_OBJECTS = $(am_e2fs_stage1_5_exec_OBJECTS)
 e2fs_stage1_5_exec_LDADD = $(LDADD)
+am_o2fs_stage1_5_exec_OBJECTS = o2fs_stage1_5_exec-start.$(OBJEXT) \
+	o2fs_stage1_5_exec-asm.$(OBJEXT) \
+	o2fs_stage1_5_exec-common.$(OBJEXT) \
+	o2fs_stage1_5_exec-char_io.$(OBJEXT) \
+	o2fs_stage1_5_exec-disk_io.$(OBJEXT) \
+	o2fs_stage1_5_exec-stage1_5.$(OBJEXT) \
+	o2fs_stage1_5_exec-fsys_ext2fs.$(OBJEXT) \
+	o2fs_stage1_5_exec-fsys_ods2.$(OBJEXT) \
+	o2fs_stage1_5_exec-bios.$(OBJEXT)
+o2fs_stage1_5_exec_OBJECTS = $(am_o2fs_stage1_5_exec_OBJECTS)
+o2fs_stage1_5_exec_LDADD = $(LDADD)
 am_fat_stage1_5_exec_OBJECTS = fat_stage1_5_exec-start.$(OBJEXT) \
 	fat_stage1_5_exec-asm.$(OBJEXT) \
 	fat_stage1_5_exec-common.$(OBJEXT) \
@@ -201,6 +216,7 @@
 	pre_stage2_exec-console.$(OBJEXT) \
 	pre_stage2_exec-disk_io.$(OBJEXT) \
 	pre_stage2_exec-fsys_ext2fs.$(OBJEXT) \
+	pre_stage2_exec-fsys_ods2.$(OBJEXT) \
 	pre_stage2_exec-fsys_fat.$(OBJEXT) \
 	pre_stage2_exec-fsys_ffs.$(OBJEXT) \
 	pre_stage2_exec-fsys_iso9660.$(OBJEXT) \
@@ -285,6 +301,7 @@
 @AMDEP_TRUE@	./$(DEPDIR)/diskless_exec-console.Po \
 @AMDEP_TRUE@	./$(DEPDIR)/diskless_exec-disk_io.Po \
 @AMDEP_TRUE@	./$(DEPDIR)/diskless_exec-fsys_ext2fs.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/diskless_exec-fsys_ods2.Po \
 @AMDEP_TRUE@	./$(DEPDIR)/diskless_exec-fsys_fat.Po \
 @AMDEP_TRUE@	./$(DEPDIR)/diskless_exec-fsys_ffs.Po \
 @AMDEP_TRUE@	./$(DEPDIR)/diskless_exec-fsys_iso9660.Po \
@@ -307,7 +324,15 @@
 @AMDEP_TRUE@	./$(DEPDIR)/e2fs_stage1_5_exec-common.Po \
 @AMDEP_TRUE@	./$(DEPDIR)/e2fs_stage1_5_exec-disk_io.Po \
 @AMDEP_TRUE@	./$(DEPDIR)/e2fs_stage1_5_exec-fsys_ext2fs.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/e2fs_stage1_5_exec-fsys_ods2.Po \
 @AMDEP_TRUE@	./$(DEPDIR)/e2fs_stage1_5_exec-stage1_5.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/o2fs_stage1_5_exec-bios.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/o2fs_stage1_5_exec-char_io.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/o2fs_stage1_5_exec-common.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/o2fs_stage1_5_exec-disk_io.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/o2fs_stage1_5_exec-fsys_ext2fs.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/o2fs_stage1_5_exec-fsys_ods2.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/o2fs_stage1_5_exec-stage1_5.Po \
 @AMDEP_TRUE@	./$(DEPDIR)/fat_stage1_5_exec-bios.Po \
 @AMDEP_TRUE@	./$(DEPDIR)/fat_stage1_5_exec-char_io.Po \
 @AMDEP_TRUE@	./$(DEPDIR)/fat_stage1_5_exec-common.Po \
@@ -339,6 +364,7 @@
 @AMDEP_TRUE@	./$(DEPDIR)/libgrub_a-common.Po \
 @AMDEP_TRUE@	./$(DEPDIR)/libgrub_a-disk_io.Po \
 @AMDEP_TRUE@	./$(DEPDIR)/libgrub_a-fsys_ext2fs.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/libgrub_a-fsys_ods2.Po \
 @AMDEP_TRUE@	./$(DEPDIR)/libgrub_a-fsys_fat.Po \
 @AMDEP_TRUE@	./$(DEPDIR)/libgrub_a-fsys_ffs.Po \
 @AMDEP_TRUE@	./$(DEPDIR)/libgrub_a-fsys_iso9660.Po \
@@ -369,6 +395,7 @@
 @AMDEP_TRUE@	./$(DEPDIR)/pre_stage2_exec-console.Po \
 @AMDEP_TRUE@	./$(DEPDIR)/pre_stage2_exec-disk_io.Po \
 @AMDEP_TRUE@	./$(DEPDIR)/pre_stage2_exec-fsys_ext2fs.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/pre_stage2_exec-fsys_ods2.Po \
 @AMDEP_TRUE@	./$(DEPDIR)/pre_stage2_exec-fsys_fat.Po \
 @AMDEP_TRUE@	./$(DEPDIR)/pre_stage2_exec-fsys_ffs.Po \
 @AMDEP_TRUE@	./$(DEPDIR)/pre_stage2_exec-fsys_iso9660.Po \
@@ -416,7 +443,7 @@
 CCLD = $(CC)
 LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
 SOURCES = $(libgrub_a_SOURCES) $(diskless_exec_SOURCES) \
-	$(e2fs_stage1_5_exec_SOURCES) $(fat_stage1_5_exec_SOURCES) \
+	$(e2fs_stage1_5_exec_SOURCES) $(o2fs_stage1_5_exec_SOURCES) $(fat_stage1_5_exec_SOURCES) \
 	$(ffs_stage1_5_exec_SOURCES) $(iso9660_stage1_5_exec_SOURCES) \
 	$(jfs_stage1_5_exec_SOURCES) $(minix_stage1_5_exec_SOURCES) \
 	$(nbloader_exec_SOURCES) $(pre_stage2_exec_SOURCES) \
@@ -425,7 +452,7 @@
 	$(ufs2_stage1_5_exec_SOURCES) $(vstafs_stage1_5_exec_SOURCES) \
 	$(xfs_stage1_5_exec_SOURCES)
 DIST_SOURCES = $(libgrub_a_SOURCES) $(diskless_exec_SOURCES) \
-	$(e2fs_stage1_5_exec_SOURCES) $(fat_stage1_5_exec_SOURCES) \
+	$(e2fs_stage1_5_exec_SOURCES) $(o2fs_stage1_5_exec_SOURCES) $(fat_stage1_5_exec_SOURCES) \
 	$(ffs_stage1_5_exec_SOURCES) $(iso9660_stage1_5_exec_SOURCES) \
 	$(jfs_stage1_5_exec_SOURCES) $(minix_stage1_5_exec_SOURCES) \
 	$(nbloader_exec_SOURCES) $(pre_stage2_exec_SOURCES) \
@@ -573,20 +600,20 @@
 	disk_io.c fsys_ext2fs.c fsys_fat.c fsys_ffs.c fsys_iso9660.c \
 	fsys_jfs.c fsys_minix.c fsys_reiserfs.c fsys_ufs2.c \
 	fsys_vstafs.c fsys_xfs.c gunzip.c md5.c serial.c stage2.c \
-	terminfo.c tparm.c
+	terminfo.c tparm.c fsys_ods2.c
 
 libgrub_a_CFLAGS = $(GRUB_CFLAGS) -I$(top_srcdir)/lib \
 	-DGRUB_UTIL=1 -DFSYS_EXT2FS=1 -DFSYS_FAT=1 -DFSYS_FFS=1 \
 	-DFSYS_ISO9660=1 -DFSYS_JFS=1 -DFSYS_MINIX=1 -DFSYS_REISERFS=1 \
-	-DFSYS_UFS2=1 -DFSYS_VSTAFS=1 -DFSYS_XFS=1 \
+	-DFSYS_UFS2=1 -DFSYS_VSTAFS=1 -DFSYS_XFS=1 -DFSYS_ODS2=1 \
 	-DUSE_MD5_PASSWORDS=1 -DSUPPORT_SERIAL=1 -DSUPPORT_HERCULES=1 \
 	-fwritable-strings
 
-@DISKLESS_SUPPORT_FALSE@pkgdata_DATA = stage2 stage2_eltorito e2fs_stage1_5 fat_stage1_5 \
+@DISKLESS_SUPPORT_FALSE@pkgdata_DATA = stage2 stage2_eltorito e2fs_stage1_5 o2fs_stage1_5 fat_stage1_5 \
 @DISKLESS_SUPPORT_FALSE@	ffs_stage1_5 iso9660_stage1_5 jfs_stage1_5 minix_stage1_5 \
 @DISKLESS_SUPPORT_FALSE@	reiserfs_stage1_5 ufs2_stage1_5 vstafs_stage1_5 xfs_stage1_5
 
-@DISKLESS_SUPPORT_TRUE@pkgdata_DATA = stage2 stage2_eltorito e2fs_stage1_5 fat_stage1_5 \
+@DISKLESS_SUPPORT_TRUE@pkgdata_DATA = stage2 stage2_eltorito e2fs_stage1_5 o2fs_stage1_5 fat_stage1_5 \
 @DISKLESS_SUPPORT_TRUE@	ffs_stage1_5 iso9660_stage1_5 jfs_stage1_5 minix_stage1_5 \
 @DISKLESS_SUPPORT_TRUE@	reiserfs_stage1_5 ufs2_stage1_5 vstafs_stage1_5 xfs_stage1_5 \
 @DISKLESS_SUPPORT_TRUE@	nbgrub pxegrub
@@ -613,7 +640,7 @@
 
 # For stage2 target.
 pre_stage2_exec_SOURCES = asm.S bios.c boot.c builtins.c char_io.c \
-	cmdline.c common.c console.c disk_io.c fsys_ext2fs.c \
+	cmdline.c common.c console.c disk_io.c fsys_ext2fs.c fsys_ods2.c \
 	fsys_fat.c fsys_ffs.c fsys_iso9660.c fsys_jfs.c fsys_minix.c \
 	fsys_reiserfs.c fsys_ufs2.c fsys_vstafs.c fsys_xfs.c gunzip.c \
 	hercules.c md5.c serial.c smp-imps.c stage2.c terminfo.c tparm.c
@@ -634,16 +661,28 @@
 
 # For e2fs_stage1_5 target.
 e2fs_stage1_5_exec_SOURCES = start.S asm.S common.c char_io.c disk_io.c \
-	stage1_5.c fsys_ext2fs.c bios.c
+	stage1_5.c fsys_ext2fs.c fsys_ods2.c bios.c
 
 e2fs_stage1_5_exec_CFLAGS = $(STAGE1_5_COMPILE) -DFSYS_EXT2FS=1 \
-	-DNO_BLOCK_FILES=1
+	-DNO_BLOCK_FILES=1 -DFSYS_ODS2=1
 
 e2fs_stage1_5_exec_CCASFLAGS = $(STAGE1_5_COMPILE) -DFSYS_EXT2FS=1 \
-	-DNO_BLOCK_FILES=1
+	-DNO_BLOCK_FILES=1 -DFSYS_ODS2=1
 
 e2fs_stage1_5_exec_LDFLAGS = $(STAGE1_5_LINK)
 
+# For o2fs_stage1_5 target.
+o2fs_stage1_5_exec_SOURCES = start.S asm.S common.c char_io.c disk_io.c \
+	stage1_5.c fsys_ext2fs.c fsys_ods2.c bios.c
+
+o2fs_stage1_5_exec_CFLAGS = $(STAGE1_5_COMPILE) -DFSYS_EXT2FS=1 \
+	-DNO_BLOCK_FILES=1 -DFSYS_ODS2=1
+
+o2fs_stage1_5_exec_CCASFLAGS = $(STAGE1_5_COMPILE) -DFSYS_EXT2FS=1 \
+	-DNO_BLOCK_FILES=1 -DFSYS_ODS2=1
+
+o2fs_stage1_5_exec_LDFLAGS = $(STAGE1_5_LINK)
+
 # For fat_stage1_5 target.
 fat_stage1_5_exec_SOURCES = start.S asm.S common.c char_io.c disk_io.c \
 	stage1_5.c fsys_fat.c bios.c
@@ -825,6 +864,9 @@
 e2fs_stage1_5.exec$(EXEEXT): $(e2fs_stage1_5_exec_OBJECTS) $(e2fs_stage1_5_exec_DEPENDENCIES) 
 	@rm -f e2fs_stage1_5.exec$(EXEEXT)
 	$(LINK) $(e2fs_stage1_5_exec_LDFLAGS) $(e2fs_stage1_5_exec_OBJECTS) $(e2fs_stage1_5_exec_LDADD) $(LIBS)
+o2fs_stage1_5.exec$(EXEEXT): $(o2fs_stage1_5_exec_OBJECTS) $(o2fs_stage1_5_exec_DEPENDENCIES) 
+	@rm -f o2fs_stage1_5.exec$(EXEEXT)
+	$(LINK) $(o2fs_stage1_5_exec_LDFLAGS) $(o2fs_stage1_5_exec_OBJECTS) $(o2fs_stage1_5_exec_LDADD) $(LIBS)
 fat_stage1_5.exec$(EXEEXT): $(fat_stage1_5_exec_OBJECTS) $(fat_stage1_5_exec_DEPENDENCIES) 
 	@rm -f fat_stage1_5.exec$(EXEEXT)
 	$(LINK) $(fat_stage1_5_exec_LDFLAGS) $(fat_stage1_5_exec_OBJECTS) $(fat_stage1_5_exec_LDADD) $(LIBS)
@@ -883,6 +925,7 @@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/diskless_exec-console.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/diskless_exec-disk_io.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/diskless_exec-fsys_ext2fs.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/diskless_exec-fsys_ods2.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/diskless_exec-fsys_fat.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/diskless_exec-fsys_ffs.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/diskless_exec-fsys_iso9660.Po@am__quote@
@@ -905,7 +948,15 @@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/e2fs_stage1_5_exec-common.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/e2fs_stage1_5_exec-disk_io.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/e2fs_stage1_5_exec-fsys_ext2fs.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/e2fs_stage1_5_exec-fsys_ods2.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/e2fs_stage1_5_exec-stage1_5.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/o2fs_stage1_5_exec-bios.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/o2fs_stage1_5_exec-char_io.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/o2fs_stage1_5_exec-common.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/o2fs_stage1_5_exec-disk_io.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/o2fs_stage1_5_exec-fsys_ext2fs.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/o2fs_stage1_5_exec-fsys_ods2.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/o2fs_stage1_5_exec-stage1_5.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fat_stage1_5_exec-bios.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fat_stage1_5_exec-char_io.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fat_stage1_5_exec-common.Po@am__quote@
@@ -937,6 +988,7 @@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgrub_a-common.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgrub_a-disk_io.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgrub_a-fsys_ext2fs.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgrub_a-fsys_ods2.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgrub_a-fsys_fat.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgrub_a-fsys_ffs.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgrub_a-fsys_iso9660.Po@am__quote@
@@ -967,6 +1019,7 @@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pre_stage2_exec-console.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pre_stage2_exec-disk_io.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pre_stage2_exec-fsys_ext2fs.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pre_stage2_exec-fsys_ods2.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pre_stage2_exec-fsys_fat.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pre_stage2_exec-fsys_ffs.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pre_stage2_exec-fsys_iso9660.Po@am__quote@
@@ -1033,6 +1086,18 @@
 e2fs_stage1_5_exec-asm.obj: asm.S
 	$(CCAS) $(e2fs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o e2fs_stage1_5_exec-asm.obj `if test -f 'asm.S'; then $(CYGPATH_W) 'asm.S'; else $(CYGPATH_W) '$(srcdir)/asm.S'; fi`
 
+o2fs_stage1_5_exec-start.o: start.S
+	$(CCAS) $(o2fs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o o2fs_stage1_5_exec-start.o `test -f 'start.S' || echo '$(srcdir)/'`start.S
+
+o2fs_stage1_5_exec-start.obj: start.S
+	$(CCAS) $(o2fs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o o2fs_stage1_5_exec-start.obj `if test -f 'start.S'; then $(CYGPATH_W) 'start.S'; else $(CYGPATH_W) '$(srcdir)/start.S'; fi`
+
+o2fs_stage1_5_exec-asm.o: asm.S
+	$(CCAS) $(o2fs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o o2fs_stage1_5_exec-asm.o `test -f 'asm.S' || echo '$(srcdir)/'`asm.S
+
+o2fs_stage1_5_exec-asm.obj: asm.S
+	$(CCAS) $(o2fs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o o2fs_stage1_5_exec-asm.obj `if test -f 'asm.S'; then $(CYGPATH_W) 'asm.S'; else $(CYGPATH_W) '$(srcdir)/asm.S'; fi`
+
 fat_stage1_5_exec-start.o: start.S
 	$(CCAS) $(fat_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o fat_stage1_5_exec-start.o `test -f 'start.S' || echo '$(srcdir)/'`start.S
 
@@ -1299,6 +1364,22 @@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-fsys_ext2fs.obj `if test -f 'fsys_ext2fs.c'; then $(CYGPATH_W) 'fsys_ext2fs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ext2fs.c'; fi`
 
+libgrub_a-fsys_ods2.o: fsys_ods2.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-fsys_ods2.o -MD -MP -MF "$(DEPDIR)/libgrub_a-fsys_ods2.Tpo" -c -o libgrub_a-fsys_ods2.o `test -f 'fsys_ods2.c' || echo '$(srcdir)/'`fsys_ods2.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libgrub_a-fsys_ods2.Tpo" "$(DEPDIR)/libgrub_a-fsys_ods2.Po"; else rm -f "$(DEPDIR)/libgrub_a-fsys_ods2.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='fsys_ods2.c' object='libgrub_a-fsys_ods2.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libgrub_a-fsys_ods2.Po' tmpdepfile='$(DEPDIR)/libgrub_a-fsys_ods2.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-fsys_ods2.o `test -f 'fsys_ods2.c' || echo '$(srcdir)/'`fsys_ods2.c
+
+libgrub_a-fsys_ods2.obj: fsys_ods2.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-fsys_ods2.obj -MD -MP -MF "$(DEPDIR)/libgrub_a-fsys_ods2.Tpo" -c -o libgrub_a-fsys_ods2.obj `if test -f 'fsys_ods2.c'; then $(CYGPATH_W) 'fsys_ods2.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ods2.c'; fi`; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libgrub_a-fsys_ods2.Tpo" "$(DEPDIR)/libgrub_a-fsys_ods2.Po"; else rm -f "$(DEPDIR)/libgrub_a-fsys_ods2.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='fsys_ods2.c' object='libgrub_a-fsys_ods2.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/libgrub_a-fsys_ods2.Po' tmpdepfile='$(DEPDIR)/libgrub_a-fsys_ods2.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-fsys_ods2.obj `if test -f 'fsys_ods2.c'; then $(CYGPATH_W) 'fsys_ods2.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ods2.c'; fi`
+
 libgrub_a-fsys_fat.o: fsys_fat.c
 @am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-fsys_fat.o -MD -MP -MF "$(DEPDIR)/libgrub_a-fsys_fat.Tpo" -c -o libgrub_a-fsys_fat.o `test -f 'fsys_fat.c' || echo '$(srcdir)/'`fsys_fat.c; \
 @am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libgrub_a-fsys_fat.Tpo" "$(DEPDIR)/libgrub_a-fsys_fat.Po"; else rm -f "$(DEPDIR)/libgrub_a-fsys_fat.Tpo"; exit 1; fi
@@ -1683,6 +1764,22 @@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-fsys_ext2fs.obj `if test -f 'fsys_ext2fs.c'; then $(CYGPATH_W) 'fsys_ext2fs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ext2fs.c'; fi`
 
+diskless_exec-fsys_ods2.o: fsys_ods2.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-fsys_ods2.o -MD -MP -MF "$(DEPDIR)/diskless_exec-fsys_ods2.Tpo" -c -o diskless_exec-fsys_ods2.o `test -f 'fsys_ods2.c' || echo '$(srcdir)/'`fsys_ods2.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/diskless_exec-fsys_ods2.Tpo" "$(DEPDIR)/diskless_exec-fsys_ods2.Po"; else rm -f "$(DEPDIR)/diskless_exec-fsys_ods2.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='fsys_ods2.c' object='diskless_exec-fsys_ods2.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/diskless_exec-fsys_ods2.Po' tmpdepfile='$(DEPDIR)/diskless_exec-fsys_ods2.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-fsys_ods2.o `test -f 'fsys_ods2.c' || echo '$(srcdir)/'`fsys_ods2.c
+
+diskless_exec-fsys_ods2.obj: fsys_ods2.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-fsys_ods2.obj -MD -MP -MF "$(DEPDIR)/diskless_exec-fsys_ods2.Tpo" -c -o diskless_exec-fsys_ods2.obj `if test -f 'fsys_ods2.c'; then $(CYGPATH_W) 'fsys_ods2.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ods2.c'; fi`; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/diskless_exec-fsys_ods2.Tpo" "$(DEPDIR)/diskless_exec-fsys_ods2.Po"; else rm -f "$(DEPDIR)/diskless_exec-fsys_ods2.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='fsys_ods2.c' object='diskless_exec-fsys_ods2.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/diskless_exec-fsys_ods2.Po' tmpdepfile='$(DEPDIR)/diskless_exec-fsys_ods2.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-fsys_ods2.obj `if test -f 'fsys_ods2.c'; then $(CYGPATH_W) 'fsys_ods2.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ods2.c'; fi`
+
 diskless_exec-fsys_fat.o: fsys_fat.c
 @am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-fsys_fat.o -MD -MP -MF "$(DEPDIR)/diskless_exec-fsys_fat.Tpo" -c -o diskless_exec-fsys_fat.o `test -f 'fsys_fat.c' || echo '$(srcdir)/'`fsys_fat.c; \
 @am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/diskless_exec-fsys_fat.Tpo" "$(DEPDIR)/diskless_exec-fsys_fat.Po"; else rm -f "$(DEPDIR)/diskless_exec-fsys_fat.Tpo"; exit 1; fi
@@ -2035,6 +2132,22 @@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(e2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o e2fs_stage1_5_exec-fsys_ext2fs.obj `if test -f 'fsys_ext2fs.c'; then $(CYGPATH_W) 'fsys_ext2fs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ext2fs.c'; fi`
 
+e2fs_stage1_5_exec-fsys_ods2.o: fsys_ods2.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(e2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT e2fs_stage1_5_exec-fsys_ods2.o -MD -MP -MF "$(DEPDIR)/e2fs_stage1_5_exec-fsys_ods2.Tpo" -c -o e2fs_stage1_5_exec-fsys_ods2.o `test -f 'fsys_ods2.c' || echo '$(srcdir)/'`fsys_ods2.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/e2fs_stage1_5_exec-fsys_ods2.Tpo" "$(DEPDIR)/e2fs_stage1_5_exec-fsys_ods2.Po"; else rm -f "$(DEPDIR)/e2fs_stage1_5_exec-fsys_ods2.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='fsys_ods2.c' object='e2fs_stage1_5_exec-fsys_ods2.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/e2fs_stage1_5_exec-fsys_ods2.Po' tmpdepfile='$(DEPDIR)/e2fs_stage1_5_exec-fsys_ods2.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(e2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o e2fs_stage1_5_exec-fsys_ods2.o `test -f 'fsys_ods2.c' || echo '$(srcdir)/'`fsys_ods2.c
+
+e2fs_stage1_5_exec-fsys_ods2.obj: fsys_ods2.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(e2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT e2fs_stage1_5_exec-fsys_ods2.obj -MD -MP -MF "$(DEPDIR)/e2fs_stage1_5_exec-fsys_ods2.Tpo" -c -o e2fs_stage1_5_exec-fsys_ods2.obj `if test -f 'fsys_ods2.c'; then $(CYGPATH_W) 'fsys_ods2.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ods2.c'; fi`; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/e2fs_stage1_5_exec-fsys_ods2.Tpo" "$(DEPDIR)/e2fs_stage1_5_exec-fsys_ods2.Po"; else rm -f "$(DEPDIR)/e2fs_stage1_5_exec-fsys_ods2.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='fsys_ods2.c' object='e2fs_stage1_5_exec-fsys_ods2.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/e2fs_stage1_5_exec-fsys_ods2.Po' tmpdepfile='$(DEPDIR)/e2fs_stage1_5_exec-fsys_ods2.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(e2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o e2fs_stage1_5_exec-fsys_ods2.obj `if test -f 'fsys_ods2.c'; then $(CYGPATH_W) 'fsys_ods2.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ods2.c'; fi`
+
 e2fs_stage1_5_exec-bios.o: bios.c
 @am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(e2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT e2fs_stage1_5_exec-bios.o -MD -MP -MF "$(DEPDIR)/e2fs_stage1_5_exec-bios.Tpo" -c -o e2fs_stage1_5_exec-bios.o `test -f 'bios.c' || echo '$(srcdir)/'`bios.c; \
 @am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/e2fs_stage1_5_exec-bios.Tpo" "$(DEPDIR)/e2fs_stage1_5_exec-bios.Po"; else rm -f "$(DEPDIR)/e2fs_stage1_5_exec-bios.Tpo"; exit 1; fi
@@ -2051,6 +2164,118 @@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(e2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o e2fs_stage1_5_exec-bios.obj `if test -f 'bios.c'; then $(CYGPATH_W) 'bios.c'; else $(CYGPATH_W) '$(srcdir)/bios.c'; fi`
 
+o2fs_stage1_5_exec-common.o: common.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(o2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT o2fs_stage1_5_exec-common.o -MD -MP -MF "$(DEPDIR)/o2fs_stage1_5_exec-common.Tpo" -c -o o2fs_stage1_5_exec-common.o `test -f 'common.c' || echo '$(srcdir)/'`common.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/o2fs_stage1_5_exec-common.Tpo" "$(DEPDIR)/o2fs_stage1_5_exec-common.Po"; else rm -f "$(DEPDIR)/o2fs_stage1_5_exec-common.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='common.c' object='o2fs_stage1_5_exec-common.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/o2fs_stage1_5_exec-common.Po' tmpdepfile='$(DEPDIR)/o2fs_stage1_5_exec-common.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(o2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o o2fs_stage1_5_exec-common.o `test -f 'common.c' || echo '$(srcdir)/'`common.c
+
+o2fs_stage1_5_exec-common.obj: common.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(o2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT o2fs_stage1_5_exec-common.obj -MD -MP -MF "$(DEPDIR)/o2fs_stage1_5_exec-common.Tpo" -c -o o2fs_stage1_5_exec-common.obj `if test -f 'common.c'; then $(CYGPATH_W) 'common.c'; else $(CYGPATH_W) '$(srcdir)/common.c'; fi`; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/o2fs_stage1_5_exec-common.Tpo" "$(DEPDIR)/o2fs_stage1_5_exec-common.Po"; else rm -f "$(DEPDIR)/o2fs_stage1_5_exec-common.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='common.c' object='o2fs_stage1_5_exec-common.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/o2fs_stage1_5_exec-common.Po' tmpdepfile='$(DEPDIR)/o2fs_stage1_5_exec-common.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(o2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o o2fs_stage1_5_exec-common.obj `if test -f 'common.c'; then $(CYGPATH_W) 'common.c'; else $(CYGPATH_W) '$(srcdir)/common.c'; fi`
+
+o2fs_stage1_5_exec-char_io.o: char_io.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(o2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT o2fs_stage1_5_exec-char_io.o -MD -MP -MF "$(DEPDIR)/o2fs_stage1_5_exec-char_io.Tpo" -c -o o2fs_stage1_5_exec-char_io.o `test -f 'char_io.c' || echo '$(srcdir)/'`char_io.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/o2fs_stage1_5_exec-char_io.Tpo" "$(DEPDIR)/o2fs_stage1_5_exec-char_io.Po"; else rm -f "$(DEPDIR)/o2fs_stage1_5_exec-char_io.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='char_io.c' object='o2fs_stage1_5_exec-char_io.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/o2fs_stage1_5_exec-char_io.Po' tmpdepfile='$(DEPDIR)/o2fs_stage1_5_exec-char_io.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(o2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o o2fs_stage1_5_exec-char_io.o `test -f 'char_io.c' || echo '$(srcdir)/'`char_io.c
+
+o2fs_stage1_5_exec-char_io.obj: char_io.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(o2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT o2fs_stage1_5_exec-char_io.obj -MD -MP -MF "$(DEPDIR)/o2fs_stage1_5_exec-char_io.Tpo" -c -o o2fs_stage1_5_exec-char_io.obj `if test -f 'char_io.c'; then $(CYGPATH_W) 'char_io.c'; else $(CYGPATH_W) '$(srcdir)/char_io.c'; fi`; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/o2fs_stage1_5_exec-char_io.Tpo" "$(DEPDIR)/o2fs_stage1_5_exec-char_io.Po"; else rm -f "$(DEPDIR)/o2fs_stage1_5_exec-char_io.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='char_io.c' object='o2fs_stage1_5_exec-char_io.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/o2fs_stage1_5_exec-char_io.Po' tmpdepfile='$(DEPDIR)/o2fs_stage1_5_exec-char_io.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(o2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o o2fs_stage1_5_exec-char_io.obj `if test -f 'char_io.c'; then $(CYGPATH_W) 'char_io.c'; else $(CYGPATH_W) '$(srcdir)/char_io.c'; fi`
+
+o2fs_stage1_5_exec-disk_io.o: disk_io.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(o2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT o2fs_stage1_5_exec-disk_io.o -MD -MP -MF "$(DEPDIR)/o2fs_stage1_5_exec-disk_io.Tpo" -c -o o2fs_stage1_5_exec-disk_io.o `test -f 'disk_io.c' || echo '$(srcdir)/'`disk_io.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/o2fs_stage1_5_exec-disk_io.Tpo" "$(DEPDIR)/o2fs_stage1_5_exec-disk_io.Po"; else rm -f "$(DEPDIR)/o2fs_stage1_5_exec-disk_io.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='disk_io.c' object='o2fs_stage1_5_exec-disk_io.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/o2fs_stage1_5_exec-disk_io.Po' tmpdepfile='$(DEPDIR)/o2fs_stage1_5_exec-disk_io.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(o2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o o2fs_stage1_5_exec-disk_io.o `test -f 'disk_io.c' || echo '$(srcdir)/'`disk_io.c
+
+o2fs_stage1_5_exec-disk_io.obj: disk_io.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(o2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT o2fs_stage1_5_exec-disk_io.obj -MD -MP -MF "$(DEPDIR)/o2fs_stage1_5_exec-disk_io.Tpo" -c -o o2fs_stage1_5_exec-disk_io.obj `if test -f 'disk_io.c'; then $(CYGPATH_W) 'disk_io.c'; else $(CYGPATH_W) '$(srcdir)/disk_io.c'; fi`; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/o2fs_stage1_5_exec-disk_io.Tpo" "$(DEPDIR)/o2fs_stage1_5_exec-disk_io.Po"; else rm -f "$(DEPDIR)/o2fs_stage1_5_exec-disk_io.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='disk_io.c' object='o2fs_stage1_5_exec-disk_io.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/o2fs_stage1_5_exec-disk_io.Po' tmpdepfile='$(DEPDIR)/o2fs_stage1_5_exec-disk_io.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(o2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o o2fs_stage1_5_exec-disk_io.obj `if test -f 'disk_io.c'; then $(CYGPATH_W) 'disk_io.c'; else $(CYGPATH_W) '$(srcdir)/disk_io.c'; fi`
+
+o2fs_stage1_5_exec-stage1_5.o: stage1_5.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(o2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT o2fs_stage1_5_exec-stage1_5.o -MD -MP -MF "$(DEPDIR)/o2fs_stage1_5_exec-stage1_5.Tpo" -c -o o2fs_stage1_5_exec-stage1_5.o `test -f 'stage1_5.c' || echo '$(srcdir)/'`stage1_5.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/o2fs_stage1_5_exec-stage1_5.Tpo" "$(DEPDIR)/o2fs_stage1_5_exec-stage1_5.Po"; else rm -f "$(DEPDIR)/o2fs_stage1_5_exec-stage1_5.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='stage1_5.c' object='o2fs_stage1_5_exec-stage1_5.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/o2fs_stage1_5_exec-stage1_5.Po' tmpdepfile='$(DEPDIR)/o2fs_stage1_5_exec-stage1_5.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(o2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o o2fs_stage1_5_exec-stage1_5.o `test -f 'stage1_5.c' || echo '$(srcdir)/'`stage1_5.c
+
+o2fs_stage1_5_exec-stage1_5.obj: stage1_5.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(o2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT o2fs_stage1_5_exec-stage1_5.obj -MD -MP -MF "$(DEPDIR)/o2fs_stage1_5_exec-stage1_5.Tpo" -c -o o2fs_stage1_5_exec-stage1_5.obj `if test -f 'stage1_5.c'; then $(CYGPATH_W) 'stage1_5.c'; else $(CYGPATH_W) '$(srcdir)/stage1_5.c'; fi`; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/o2fs_stage1_5_exec-stage1_5.Tpo" "$(DEPDIR)/o2fs_stage1_5_exec-stage1_5.Po"; else rm -f "$(DEPDIR)/o2fs_stage1_5_exec-stage1_5.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='stage1_5.c' object='o2fs_stage1_5_exec-stage1_5.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/o2fs_stage1_5_exec-stage1_5.Po' tmpdepfile='$(DEPDIR)/o2fs_stage1_5_exec-stage1_5.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(o2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o o2fs_stage1_5_exec-stage1_5.obj `if test -f 'stage1_5.c'; then $(CYGPATH_W) 'stage1_5.c'; else $(CYGPATH_W) '$(srcdir)/stage1_5.c'; fi`
+
+o2fs_stage1_5_exec-fsys_ext2fs.o: fsys_ext2fs.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(o2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT o2fs_stage1_5_exec-fsys_ext2fs.o -MD -MP -MF "$(DEPDIR)/o2fs_stage1_5_exec-fsys_ext2fs.Tpo" -c -o o2fs_stage1_5_exec-fsys_ext2fs.o `test -f 'fsys_ext2fs.c' || echo '$(srcdir)/'`fsys_ext2fs.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/o2fs_stage1_5_exec-fsys_ext2fs.Tpo" "$(DEPDIR)/o2fs_stage1_5_exec-fsys_ext2fs.Po"; else rm -f "$(DEPDIR)/o2fs_stage1_5_exec-fsys_ext2fs.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='fsys_ext2fs.c' object='o2fs_stage1_5_exec-fsys_ext2fs.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/o2fs_stage1_5_exec-fsys_ext2fs.Po' tmpdepfile='$(DEPDIR)/o2fs_stage1_5_exec-fsys_ext2fs.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(o2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o o2fs_stage1_5_exec-fsys_ext2fs.o `test -f 'fsys_ext2fs.c' || echo '$(srcdir)/'`fsys_ext2fs.c
+
+o2fs_stage1_5_exec-fsys_ext2fs.obj: fsys_ext2fs.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(o2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT o2fs_stage1_5_exec-fsys_ext2fs.obj -MD -MP -MF "$(DEPDIR)/o2fs_stage1_5_exec-fsys_ext2fs.Tpo" -c -o o2fs_stage1_5_exec-fsys_ext2fs.obj `if test -f 'fsys_ext2fs.c'; then $(CYGPATH_W) 'fsys_ext2fs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ext2fs.c'; fi`; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/o2fs_stage1_5_exec-fsys_ext2fs.Tpo" "$(DEPDIR)/o2fs_stage1_5_exec-fsys_ext2fs.Po"; else rm -f "$(DEPDIR)/o2fs_stage1_5_exec-fsys_ext2fs.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='fsys_ext2fs.c' object='o2fs_stage1_5_exec-fsys_ext2fs.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/o2fs_stage1_5_exec-fsys_ext2fs.Po' tmpdepfile='$(DEPDIR)/o2fs_stage1_5_exec-fsys_ext2fs.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(o2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o o2fs_stage1_5_exec-fsys_ext2fs.obj `if test -f 'fsys_ext2fs.c'; then $(CYGPATH_W) 'fsys_ext2fs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ext2fs.c'; fi`
+
+o2fs_stage1_5_exec-fsys_ods2.o: fsys_ods2.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(o2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT o2fs_stage1_5_exec-fsys_ods2.o -MD -MP -MF "$(DEPDIR)/o2fs_stage1_5_exec-fsys_ods2.Tpo" -c -o o2fs_stage1_5_exec-fsys_ods2.o `test -f 'fsys_ods2.c' || echo '$(srcdir)/'`fsys_ods2.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/o2fs_stage1_5_exec-fsys_ods2.Tpo" "$(DEPDIR)/o2fs_stage1_5_exec-fsys_ods2.Po"; else rm -f "$(DEPDIR)/o2fs_stage1_5_exec-fsys_ods2.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='fsys_ods2.c' object='o2fs_stage1_5_exec-fsys_ods2.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/o2fs_stage1_5_exec-fsys_ods2.Po' tmpdepfile='$(DEPDIR)/o2fs_stage1_5_exec-fsys_ods2.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(o2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o o2fs_stage1_5_exec-fsys_ods2.o `test -f 'fsys_ods2.c' || echo '$(srcdir)/'`fsys_ods2.c
+
+o2fs_stage1_5_exec-fsys_ods2.obj: fsys_ods2.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(o2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT o2fs_stage1_5_exec-fsys_ods2.obj -MD -MP -MF "$(DEPDIR)/o2fs_stage1_5_exec-fsys_ods2.Tpo" -c -o o2fs_stage1_5_exec-fsys_ods2.obj `if test -f 'fsys_ods2.c'; then $(CYGPATH_W) 'fsys_ods2.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ods2.c'; fi`; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/o2fs_stage1_5_exec-fsys_ods2.Tpo" "$(DEPDIR)/o2fs_stage1_5_exec-fsys_ods2.Po"; else rm -f "$(DEPDIR)/o2fs_stage1_5_exec-fsys_ods2.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='fsys_ods2.c' object='o2fs_stage1_5_exec-fsys_ods2.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/o2fs_stage1_5_exec-fsys_ods2.Po' tmpdepfile='$(DEPDIR)/o2fs_stage1_5_exec-fsys_ods2.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(o2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o o2fs_stage1_5_exec-fsys_ods2.obj `if test -f 'fsys_ods2.c'; then $(CYGPATH_W) 'fsys_ods2.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ods2.c'; fi`
+
+o2fs_stage1_5_exec-bios.o: bios.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(o2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT o2fs_stage1_5_exec-bios.o -MD -MP -MF "$(DEPDIR)/o2fs_stage1_5_exec-bios.Tpo" -c -o o2fs_stage1_5_exec-bios.o `test -f 'bios.c' || echo '$(srcdir)/'`bios.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/o2fs_stage1_5_exec-bios.Tpo" "$(DEPDIR)/o2fs_stage1_5_exec-bios.Po"; else rm -f "$(DEPDIR)/o2fs_stage1_5_exec-bios.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='bios.c' object='o2fs_stage1_5_exec-bios.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/o2fs_stage1_5_exec-bios.Po' tmpdepfile='$(DEPDIR)/o2fs_stage1_5_exec-bios.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(o2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o o2fs_stage1_5_exec-bios.o `test -f 'bios.c' || echo '$(srcdir)/'`bios.c
+
+o2fs_stage1_5_exec-bios.obj: bios.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(o2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT o2fs_stage1_5_exec-bios.obj -MD -MP -MF "$(DEPDIR)/o2fs_stage1_5_exec-bios.Tpo" -c -o o2fs_stage1_5_exec-bios.obj `if test -f 'bios.c'; then $(CYGPATH_W) 'bios.c'; else $(CYGPATH_W) '$(srcdir)/bios.c'; fi`; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/o2fs_stage1_5_exec-bios.Tpo" "$(DEPDIR)/o2fs_stage1_5_exec-bios.Po"; else rm -f "$(DEPDIR)/o2fs_stage1_5_exec-bios.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='bios.c' object='o2fs_stage1_5_exec-bios.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/o2fs_stage1_5_exec-bios.Po' tmpdepfile='$(DEPDIR)/o2fs_stage1_5_exec-bios.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(o2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o o2fs_stage1_5_exec-bios.obj `if test -f 'bios.c'; then $(CYGPATH_W) 'bios.c'; else $(CYGPATH_W) '$(srcdir)/bios.c'; fi`
+
 fat_stage1_5_exec-common.o: common.c
 @am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fat_stage1_5_exec_CFLAGS) $(CFLAGS) -MT fat_stage1_5_exec-common.o -MD -MP -MF "$(DEPDIR)/fat_stage1_5_exec-common.Tpo" -c -o fat_stage1_5_exec-common.o `test -f 'common.c' || echo '$(srcdir)/'`common.c; \
 @am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/fat_stage1_5_exec-common.Tpo" "$(DEPDIR)/fat_stage1_5_exec-common.Po"; else rm -f "$(DEPDIR)/fat_stage1_5_exec-common.Tpo"; exit 1; fi
@@ -2675,6 +2900,22 @@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-fsys_ext2fs.obj `if test -f 'fsys_ext2fs.c'; then $(CYGPATH_W) 'fsys_ext2fs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ext2fs.c'; fi`
 
+pre_stage2_exec-fsys_ods2.o: fsys_ods2.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-fsys_ods2.o -MD -MP -MF "$(DEPDIR)/pre_stage2_exec-fsys_ods2.Tpo" -c -o pre_stage2_exec-fsys_ods2.o `test -f 'fsys_ods2.c' || echo '$(srcdir)/'`fsys_ods2.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/pre_stage2_exec-fsys_ods2.Tpo" "$(DEPDIR)/pre_stage2_exec-fsys_ods2.Po"; else rm -f "$(DEPDIR)/pre_stage2_exec-fsys_ods2.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='fsys_ods2.c' object='pre_stage2_exec-fsys_ods2.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/pre_stage2_exec-fsys_ods2.Po' tmpdepfile='$(DEPDIR)/pre_stage2_exec-fsys_ods2.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-fsys_ods2.o `test -f 'fsys_ods2.c' || echo '$(srcdir)/'`fsys_ods2.c
+
+pre_stage2_exec-fsys_ods2.obj: fsys_ods2.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-fsys_ods2.obj -MD -MP -MF "$(DEPDIR)/pre_stage2_exec-fsys_ods2.Tpo" -c -o pre_stage2_exec-fsys_ods2.obj `if test -f 'fsys_ods2.c'; then $(CYGPATH_W) 'fsys_ods2.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ods2.c'; fi`; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/pre_stage2_exec-fsys_ods2.Tpo" "$(DEPDIR)/pre_stage2_exec-fsys_ods2.Po"; else rm -f "$(DEPDIR)/pre_stage2_exec-fsys_ods2.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='fsys_ods2.c' object='pre_stage2_exec-fsys_ods2.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/pre_stage2_exec-fsys_ods2.Po' tmpdepfile='$(DEPDIR)/pre_stage2_exec-fsys_ods2.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-fsys_ods2.obj `if test -f 'fsys_ods2.c'; then $(CYGPATH_W) 'fsys_ods2.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ods2.c'; fi`
+
 pre_stage2_exec-fsys_fat.o: fsys_fat.c
 @am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-fsys_fat.o -MD -MP -MF "$(DEPDIR)/pre_stage2_exec-fsys_fat.Tpo" -c -o pre_stage2_exec-fsys_fat.o `test -f 'fsys_fat.c' || echo '$(srcdir)/'`fsys_fat.c; \
 @am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/pre_stage2_exec-fsys_fat.Tpo" "$(DEPDIR)/pre_stage2_exec-fsys_fat.Po"; else rm -f "$(DEPDIR)/pre_stage2_exec-fsys_fat.Tpo"; exit 1; fi
diff -ruN grub-0.95-orig/stage2/dirdef.h grub-0.95/stage2/dirdef.h
--- grub-0.95-orig/stage2/dirdef.h	1970-01-01 01:00:00.000000000 +0100
+++ grub-0.95/stage2/dirdef.h	2002-07-07 17:59:51.000000000 +0200
@@ -0,0 +1,31 @@
+#ifndef dirdef_h
+#define dirdef_h
+
+/* Direct.h v1.3    Definitions for directory access routines */
+
+/*
+        This is part of ODS2 written by Paul Nankervis,
+        email address:  Paulnank@au1.ibm.com
+
+        ODS2 is distributed freely for all members of the
+        VMS community to use. However all derived works
+        must maintain comments in their source to acknowledge
+        the contibution of the original author.
+*/
+
+
+
+struct _dir {
+    vmsword dir$w_size;
+    vmsword dir$w_verlimit;
+    vmsbyte dir$b_flags;
+    vmsbyte dir$b_namecount;
+    char dir$t_name[1];
+};
+
+struct _dir1 {
+    vmsword dir$w_version;
+    struct _fiddef dir$fid;
+};
+
+#endif
diff -ruN grub-0.95-orig/stage2/disk_io.c grub-0.95/stage2/disk_io.c
--- grub-0.95-orig/stage2/disk_io.c	2004-05-23 18:35:24.000000000 +0200
+++ grub-0.95/stage2/disk_io.c	2004-11-14 10:43:49.935531008 +0100
@@ -83,6 +83,9 @@
 # ifdef FSYS_FFS
   {"ffs", ffs_mount, ffs_read, ffs_dir, 0, ffs_embed},
 # endif
+# ifdef FSYS_ODS2
+  {"ods2", ods2_mount, ods2_read, ods2_dir, 0, 0},
+# endif
   {0, 0, 0, 0, 0, 0}
 };
 
diff -ruN grub-0.95-orig/stage2/fatdef.h grub-0.95/stage2/fatdef.h
--- grub-0.95-orig/stage2/fatdef.h	1970-01-01 01:00:00.000000000 +0100
+++ grub-0.95/stage2/fatdef.h	2003-01-23 18:00:23.000000000 +0100
@@ -0,0 +1,71 @@
+#ifndef fatdef_h
+#define fatdef_h
+
+/* Access.h v1.3    Definitions for file access routines */
+
+/*
+        This is part of ODS2 written by Paul Nankervis,
+        email address:  Paulnank@au1.ibm.com
+
+        ODS2 is distributed freely for all members of the
+        VMS community to use. However all derived works
+        must maintain comments in their source to acknowledge
+        the contibution of the original author.
+
+	Originally part of access.h
+*/
+
+#define NO_DOLLAR
+
+#define		FAT$C_UNDEFINED		0
+#define		FAT$C_FIXED		1
+#define		FAT$C_VARIABLE		2
+#define		FAT$C_VFC		3
+#define		FAT$C_STREAM		4
+#define		FAT$C_STREAMLF		5
+#define		FAT$C_STREAMCR		6
+#define		FAT$C_SEQUENTIAL	0
+#define		FAT$C_RELATIVE		1
+#define		FAT$C_INDEXED		2
+#define		FAT$C_DIRECT		3
+#define		FAT$C_SPECIAL		4
+#define		FAT$M_FORTRANCC		0x1
+#define		FAT$M_IMPLIEDCC		0x2
+#define		FAT$M_PRINTCC		0x4
+#define		FAT$M_NOSPAN		0x8
+#define		FAT$M_MSBRCW		0x10
+#define		FAT$C_FIFO		1
+#define		FAT$C_CHAR_SPECIAL	2
+#define		FAT$C_BLOCK_SPECIAL	3
+#define		FAT$C_SYMLINK		4
+#define		FAT$K_LENGTH		32
+#define		FAT$C_LENGTH		32
+#define		FAT$S_FATDEF		32
+
+/*		handling funny byte order */
+/* socalled
+Inverted format field. The high- and low-order 16 bits are transposed for compatibility with PDP-11 software.
+*/
+
+static inline unsigned long pdp_invert(unsigned long l) {
+  unsigned short * s=&l;
+  return (s[0]<<16) + s[1];
+}
+
+struct _fatdef {
+    vmsbyte fat$b_rtype;
+    vmsbyte fat$b_rattrib;
+    vmsword fat$w_rsize;
+  vmsswap fat$l_hiblk; /* funny byte order */
+  vmsswap fat$l_efblk; /* funny byte order */
+    vmsword fat$w_ffbyte;
+    vmsbyte fat$b_bktsize;
+    vmsbyte fat$b_vfcsize;
+    vmsword fat$w_maxrec;
+    vmsword fat$w_defext;
+    vmsword fat$w_gbc;
+    vmsbyte fat$_UU0[8];
+    vmsword fat$w_versions;
+};
+
+#endif
diff -ruN grub-0.95-orig/stage2/fh2def.h grub-0.95/stage2/fh2def.h
--- grub-0.95-orig/stage2/fh2def.h	1970-01-01 01:00:00.000000000 +0100
+++ grub-0.95/stage2/fh2def.h	2002-07-07 17:59:51.000000000 +0200
@@ -0,0 +1,54 @@
+#ifndef fh2def_h
+#define fh2def_h
+
+/* Access.h v1.3    Definitions for file access routines */
+
+/*
+        This is part of ODS2 written by Paul Nankervis,
+        email address:  Paulnank@au1.ibm.com
+
+        ODS2 is distributed freely for all members of the
+        VMS community to use. However all derived works
+        must maintain comments in their source to acknowledge
+        the contibution of the original author.
+
+	Originally part of access.h
+*/
+
+#define NO_DOLLAR
+#include "mytypes.h"
+
+#define FH2$M_NOBACKUP   0x2
+#define FH2$M_CONTIG     0x80
+#define FH2$M_DIRECTORY  0x2000
+#define FH2$M_MARKDEL    0x8000
+#define FH2$M_ERASE      0x20000
+
+struct _fh2 {
+    vmsbyte fh2$b_idoffset;
+    vmsbyte fh2$b_mpoffset;
+    vmsbyte fh2$b_acoffset;
+    vmsbyte fh2$b_rsoffset;
+    vmsword fh2$w_seg_num;
+    vmsword fh2$w_struclev;
+    struct _fiddef fh2$w_fid;
+    struct _fiddef fh2$w_ext_fid;
+    struct _fatdef fh2$w_recattr;
+    vmslong fh2$l_filechar;
+    vmsword fh2$w_reserved1;
+    vmsbyte fh2$b_map_inuse;
+    vmsbyte fh2$b_acc_mode;
+    struct _uicdef fh2$l_fileowner;
+    vmsword fh2$w_fileprot;
+    struct _fiddef fh2$w_backlink;
+    vmsbyte fh2$b_journal;
+    vmsbyte fh2$b_ru_active;
+    vmsword fh2$w_reserved2;
+    vmslong fh2$l_highwater;
+    vmsbyte fh2$b_reserved3[8];
+    vmsbyte fh2$r_class_prot[20];
+    vmsbyte fh2$r_restofit[402];
+    vmsword fh2$w_checksum;
+};
+
+#endif
diff -ruN grub-0.95-orig/stage2/fibdef.h grub-0.95/stage2/fibdef.h
--- grub-0.95-orig/stage2/fibdef.h	1970-01-01 01:00:00.000000000 +0100
+++ grub-0.95/stage2/fibdef.h	2003-07-04 12:03:25.000000000 +0200
@@ -0,0 +1,129 @@
+#ifndef fibdef_h
+#define fibdef_h
+
+/* Fibdef.h v1.3    Definition of 'struct _fibdef' */
+
+/*
+        This is part of ODS2 written by Paul Nankervis,
+        email address:  Paulnank@au1.ibm.com
+
+        ODS2 is distributed freely for all members of the
+        VMS community to use. However all derived works
+        must maintain comments in their source to acknowledge
+        the contibution of the original author.
+*/
+
+#define FIB$M_NOWRITE 0x1
+#define FIB$M_DLOCK 0x2
+#define FIB$M_BLK_LOCK 0x4
+#define FIB$M_FASTRDSQNOS 0x8
+#define FIB$M_SPOOL 0x10
+#define FIB$M_WRITECK 0x20
+#define FIB$M_SEQONLY 0x40
+#define FIB$M_SEQNO 0x80
+#define FIB$M_WRITE 0x100
+#define FIB$M_READCK 0x200
+#define FIB$M_NOREAD 0x400
+#define FIB$M_NOTRUNC 0x800
+#define FIB$M_CONTROL 0x1000
+#define FIB$M_NO_READ_DATA 0x2000
+#define FIB$M_EXECUTE 0x10000
+#define FIB$M_PRSRV_ATR 0x20000
+#define FIB$M_RMSLOCK 0x40000
+#define FIB$M_WRITETHRU 0x80000
+#define FIB$M_NOLOCK 0x100000
+#define FIB$M_NORECORD 0x200000
+#define FIB$M_NOVERIFY 0x400000
+#define FIB$M_CHANGE_VOL 0x800000
+#define FIB$M_REWIND 0x8
+#define FIB$M_CURPOS 0x10
+#define FIB$M_UPDATE 0x40
+#define FIB$K_ACCDATA 10
+#define FIB$C_ACCDATA 10
+#define FIB$K_DIRDATA 22
+#define FIB$C_DIRDATA 22
+#define FIB$M_NAMES_8BIT 0x1
+#define FIB$M_NAMES_16BIT 0x2
+#define FIB$M_PERCENT_LITERAL 0x4
+#define FIB$M_ALLVER 0x8
+#define FIB$M_ALLTYP 0x10
+#define FIB$M_ALLNAM 0x20
+#define FIB$M_WILD 0x100
+#define FIB$M_NEWVER 0x200
+#define FIB$M_SUPERSEDE 0x400
+#define FIB$M_FINDFID 0x800
+#define FIB$M_LOWVER 0x4000
+#define FIB$M_HIGHVER 0x8000
+#define FIB$M_ALCON 0x1
+#define FIB$M_ALCONB 0x2
+#define FIB$M_FILCON 0x4
+#define FIB$M_ALDEF 0x8
+#define FIB$M_ALLOCATR 0x10
+#define FIB$M_EXTEND 0x80
+#define FIB$M_TRUNC 0x100
+#define FIB$M_NOHDREXT 0x200
+#define FIB$M_MARKBAD 0x400
+#define FIB$M_NOPLACE 0x4000
+#define FIB$M_NOCHARGE 0x8000
+#define FIB$K_EXTDATA 32
+#define FIB$C_EXTDATA 32
+#define FIB$M_EXACT 0x1
+#define FIB$M_ONCYL 0x2
+#define FIB$C_CYL 1
+#define FIB$C_LBN 2
+#define FIB$C_VBN 3
+#define FIB$C_RFI 4
+#define FIB$K_ALCDATA 44
+#define FIB$C_ALCDATA 44
+#define FIB$M_ALT_REQ 0x1
+#define FIB$M_ALT_GRANTED 0x2
+#define FIB$M_DIRACL 0x4
+#define FIB$M_PROPAGATE 0x8
+#define FIB$M_NOCOPYACL 0x10
+#define FIB$M_NOCOPYOWNER 0x20
+#define FIB$M_NOCOPYPROT 0x40
+#define FIB$M_EXCLPREVIOUS 0x80
+#define FIB$M_ALIAS_ENTRY 0x100
+#define FIB$M_WILDFID_FLAG 0x200
+#define FIB$M_DID_FILESPEC 0x400
+#define FIB$K_MOVEFILE 72
+#define FIB$C_MOVEFILE 72
+#define FIB$M_FILE_ATTRIBUTES 0xF
+#define FIB$M_FILE_CONTENTS 0xF0
+#define FIB$C_DEFAULT 0
+#define FIB$C_WRITETHROUGH 1
+#define FIB$C_WRITEBEHIND 2
+#define FIB$C_NOCACHING 3
+#define FIB$M_FLUSH_ON_CLOSE 0xF00
+#define FIB$C_FLUSH 1
+#define FIB$C_NOFLUSH 2
+#define FIB$M_CACHING_OPTIONS_MBZ 0xFFFFF000
+#define FIB$C_ODS2 0
+#define FIB$C_ISL1 1
+#define FIB$C_ISO_LATIN 1
+#define FIB$C_UCS2 3
+#define FIB$C_NAMETYPE_LEN 96
+#define FIB$K_LENGTH 96
+#define FIB$C_LENGTH 96
+#define FIB$K_F64LEN 96
+#define FIB$C_F64LEN 96
+
+struct _fibdef {
+    unsigned fib$l_acctl;
+    unsigned short fib$w_fid_num;
+    unsigned short fib$w_fid_seq;
+    unsigned char fib$b_fid_rvn;
+    unsigned char fib$b_fid_nmx;
+    unsigned short fib$w_did_num;
+    unsigned short fib$w_did_seq;
+    unsigned char fib$b_did_rvn;
+    unsigned char fib$b_did_nmx;
+    unsigned fib$l_wcc;
+    unsigned fib$w_nmctl;
+    unsigned fib$l_exsz;
+    unsigned fib$w_exctl;
+    unsigned short fib$w_file_hdrseq_incr;
+    unsigned short fib$w_dir_hdrseq_incr;
+};
+
+#endif
diff -ruN grub-0.95-orig/stage2/fiddef.h grub-0.95/stage2/fiddef.h
--- grub-0.95-orig/stage2/fiddef.h	1970-01-01 01:00:00.000000000 +0100
+++ grub-0.95/stage2/fiddef.h	2002-07-07 17:59:52.000000000 +0200
@@ -0,0 +1,32 @@
+#ifndef fiddef_h
+#define fiddef_h
+
+/* Access.h v1.3    Definitions for file access routines */
+
+/*
+        This is part of ODS2 written by Paul Nankervis,
+        email address:  Paulnank@au1.ibm.com
+
+        ODS2 is distributed freely for all members of the
+        VMS community to use. However all derived works
+        must maintain comments in their source to acknowledge
+        the contibution of the original author.
+
+	Originally part of access.h
+*/
+
+#define NO_DOLLAR
+
+struct _fiddef {
+    vmsword fid$w_num;
+    vmsword fid$w_seq;
+  union {
+    vmsword fid$w_rvn;
+    struct {
+    vmsbyte fid$b_rvn;
+    vmsbyte fid$b_nmx;
+    };
+  };
+};
+
+#endif
diff -ruN grub-0.95-orig/stage2/filesys.h grub-0.95/stage2/filesys.h
--- grub-0.95-orig/stage2/filesys.h	2004-05-14 21:36:43.000000000 +0200
+++ grub-0.95/stage2/filesys.h	2004-11-14 10:31:57.981454817 +0100
@@ -58,6 +58,15 @@
 #define FSYS_EXT2FS_NUM 0
 #endif
 
+#ifdef FSYS_ODS2
+#define FSYS_ODS2_NUM 1
+int ods2_mount (void);
+int ods2_read (char *buf, int len);
+int ods2_dir (char *dirname);
+#else
+#define FSYS_ODS2_NUM 0
+#endif
+
 #ifdef FSYS_MINIX
 #define FSYS_MINIX_NUM 1
 int minix_mount (void);
@@ -128,7 +137,7 @@
 #define NUM_FSYS	\
   (FSYS_FFS_NUM + FSYS_FAT_NUM + FSYS_EXT2FS_NUM + FSYS_MINIX_NUM	\
    + FSYS_REISERFS_NUM + FSYS_VSTAFS_NUM + FSYS_JFS_NUM + FSYS_XFS_NUM	\
-   + FSYS_TFTP_NUM + FSYS_ISO9660_NUM + FSYS_UFS2_NUM)
+   + FSYS_TFTP_NUM + FSYS_ISO9660_NUM + FSYS_UFS2_NUM + FSYS_ODS2_NUM)
 #endif
 
 /* defines for the block filesystem info area */
diff -ruN grub-0.95-orig/stage2/fm2def.h grub-0.95/stage2/fm2def.h
--- grub-0.95-orig/stage2/fm2def.h	1970-01-01 01:00:00.000000000 +0100
+++ grub-0.95/stage2/fm2def.h	2002-07-24 11:01:02.000000000 +0200
@@ -0,0 +1,64 @@
+#ifndef fm2def_h
+#define fm2def_h
+
+#define FM2$C_PLACEMENT 0
+#define FM2$C_FORMAT1 1
+#define FM2$C_FORMAT2 2
+#define FM2$C_FORMAT3 3
+
+#define FM2$K_LENGTH0 2
+#define FM2$C_LENGTH0 2
+#define FM2$K_LENGTH1 4
+#define FM2$C_LENGTH1 4
+#define FM2$S_FM2DEF 4
+	
+typedef struct _fm2 {
+  union  {
+    unsigned short int fm2$w_word0;
+    struct  {
+      unsigned fm2$$_fill_1 : 14;
+      unsigned fm2$v_format : 2;
+    };
+    struct  {
+      unsigned fm2$v_exact : 1;
+      unsigned fm2$v_oncyl : 1;
+      unsigned fm2$$_fill_2 : 10;
+      unsigned fm2$v_lbn : 1;
+      unsigned fm2$v_rvn : 1;
+      unsigned fm2$v_fill_3_ : 2;
+    };
+    struct  {
+      unsigned fm2$$_fill_3 : 8;
+      unsigned fm2$v_highlbn : 6;
+      unsigned fm2$v_fill_4_ : 2;
+    };
+    struct  {
+      unsigned fm2$v_count2 : 14;
+      unsigned fm2$v_fill_5_ : 2;
+    };
+    unsigned char fm2$b_count1;
+  };
+  unsigned short int fm2$w_lowlbn;
+};
+ 
+#define FM2$K_LENGTH2 6
+#define FM2$C_LENGTH2 6
+#define FM2$S_FM2DEF1 6
+	
+struct _fm2_1 {
+  char fm2$$_fill_4 [2];
+  unsigned int fm2$l_lbn2;
+};
+
+#define FM2$K_LENGTH3 8
+#define FM2$C_LENGTH3 8
+#define FM2$S_FM2DEF2 8
+	
+struct _fm2_2 {
+  char fm2$$_fill_5 [2];
+  unsigned short int fm2$w_lowcount;
+  unsigned int fm2$l_lbn3;
+};
+
+#endif
+ 
diff -ruN grub-0.95-orig/stage2/fsys_ods2.c grub-0.95/stage2/fsys_ods2.c
--- grub-0.95-orig/stage2/fsys_ods2.c	1970-01-01 01:00:00.000000000 +0100
+++ grub-0.95/stage2/fsys_ods2.c	2004-11-14 13:34:43.989466470 +0100
@@ -0,0 +1,283 @@
+/*
+ *  GRUB  --  GRand Unified Bootloader
+ *  Copyright (C) 1999, 2001, 2003  Free Software Foundation, Inc.
+ *
+ *  This program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation; either version 2 of the License, or
+ *  (at your option) any later version.
+ *
+ *  This program is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with this program; if not, write to the Free Software
+ *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+ */
+
+#ifdef FSYS_ODS2
+
+#include "shared.h"
+#include "filesys.h"
+
+#include "mytypes.h"
+#include "fiddef.h"
+#include "uicdef.h"
+#include "fatdef.h"
+#include "dirdef.h"
+#include "fh2def.h"
+#include "fm2def.h"
+#include "hm2def.h"
+
+#define BLOCKSIZE 512
+#define MAXREC (BLOCKSIZE - 2)
+
+#if 0
+#define STRUCT_DIR_SIZE (sizeof(struct _dir)) // but this gives one too much
+#else
+#define STRUCT_DIR_SIZE 7 
+#endif
+
+/* sizes are always in bytes, BLOCK values are always in DEV_BSIZE (sectors) */
+#define DEV_BSIZE 512
+
+/* include/linux/fs.h */
+#define BLOCK_SIZE 512		/* initial block size for superblock read */
+/* made up, defaults to 1 but can be passed via mount_opts */
+#define HOME_BLOCK 1
+
+#define home_block ((struct _hm2 *)(FSYS_BUF))
+#define index_header ((struct _fh2 *)(FSYS_BUF + 0x200))
+#define mfd_header ((struct _fh2 *)(FSYS_BUF + 0x400))
+#define mfd ((struct _fh2 *)(FSYS_BUF + 0x600))
+#define file_header ((struct _fh2 *)(FSYS_BUF + 0x800))
+#define dir ((struct _dir *)(FSYS_BUF + 0xa00))
+
+int mymemcmp(char * s, char * t, int size) {
+  for (;size;size--,s++,t++)
+    if ((*s)!=(*t)) return 1;
+  return 0;
+}
+
+int
+ods2_mount (void)
+{
+  int retval = 1;
+
+  devread (HOME_BLOCK, 0, 512, home_block);
+
+  if ((((current_drive & 0x80) || (current_slice != 0))
+       && (current_slice != PC_SLICE_TYPE_ODS2))
+      || !devread (HOME_BLOCK, 0, 512, home_block)
+      || mymemcmp(home_block->hm2$t_format,"DECFILE11B  ",12) != 0)
+      retval = 0;
+
+  devread(VMSLONG(home_block->hm2$l_ibmaplbn) + VMSWORD(home_block->hm2$w_ibmapsize), 0, 512, index_header);
+
+  devread(VMSLONG(home_block->hm2$l_ibmaplbn) + VMSWORD(home_block->hm2$w_ibmapsize) + (4 - 1), 0, 512, mfd_header);
+
+  devread(VMSLONG(home_block->hm2$l_ibmaplbn) + VMSWORD(home_block->hm2$w_ibmapsize) + (4 - 1), 0, 512, file_header);
+
+  filepos = 0;
+  ods2_read(mfd, 512);
+
+  return retval;
+}
+
+int
+ods2_read (char *buf, int len)
+{
+  int logical_block;
+  int offset;
+  int map;
+  int ret = 0;
+  int size = 0;
+
+  while (len > 0)
+    {
+      /* find the (logical) block component of our location */
+      logical_block = filepos >> 9;
+      offset = filepos & (512 - 1);
+      map = ods2_block_map (logical_block);
+      if (map < 0)
+	break;
+
+      size = 512;
+      size -= offset;
+      if (size > len)
+	size = len;
+
+      disk_read_func = disk_read_hook;
+
+      devread (map, offset, size, buf);
+
+      disk_read_func = NULL;
+
+      buf += size;
+      len -= size;
+      filepos += size;
+      ret += size;
+    }
+
+  if (errnum)
+    ret = 0;
+
+  return ret;
+}
+
+int get_fm2_val(unsigned short ** mpp, unsigned long * phyblk, unsigned long *phylen) {
+  unsigned short *mp=*mpp;
+  if (phyblk==0 || phylen==0) return -1;
+	switch (VMSWORD(*mp) >> 14) {
+	case FM2$C_PLACEMENT:
+	  *phylen = 0;
+	  (*mpp)++;
+	  break;
+	case FM2$C_FORMAT1:
+	  *phylen = (VMSWORD(*mp) & 0377) + 1;
+	  *phyblk = ((VMSWORD(*mp) & 037400) << 8) | VMSWORD(mp[1]);
+	  (*mpp) += 2;
+	  break;
+	case FM2$C_FORMAT2:
+	  *phylen = (VMSWORD(*mp) & 037777) + 1;
+	  *phyblk = (VMSWORD(mp[2]) << 16) | VMSWORD(mp[1]);
+	  (*mpp) += 3;
+	  break;
+	case FM2$C_FORMAT3:
+	  *phylen = ((VMSWORD(*mp) & 037777) << 16) + VMSWORD(mp[1]) + 1;
+	  *phyblk = (VMSWORD(mp[3]) << 16) | VMSWORD(mp[2]);
+	  (*mpp) += 4;
+	default:
+	  return 0;
+	}
+	return 1;
+}
+
+static int
+ods2_index_block_map (int logical_block)
+{
+  unsigned curvbn=1; // should be 1, but I guess grub starts at 0
+  unsigned short *me;
+  unsigned short *mp = (unsigned short *) index_header + index_header->fh2$b_mpoffset;
+  me = mp + index_header->fh2$b_map_inuse;
+
+  while (mp < me) {
+    unsigned phyblk, phylen;
+    get_fm2_val(&mp,&phyblk,&phylen);
+    //printf("get %x %x %x %x %x %x",mp,phyblk,phylen,curvbn,logical_block,index_header->fh2$b_map_inuse);
+    if (logical_block>=curvbn && logical_block<(curvbn+phylen))
+      return phyblk+logical_block-curvbn;
+    if (phylen!=0) {
+      curvbn += phylen;
+    }
+  }
+}
+
+static int
+ods2_block_map (int logical_block)
+{
+  unsigned curvbn=0; // should be 1, but I guess grub starts at 0
+  unsigned short *me;
+  unsigned short *mp = (unsigned short *) file_header + file_header->fh2$b_mpoffset;
+  me = mp + file_header->fh2$b_map_inuse;
+
+  while (mp < me) {
+    unsigned phyblk, phylen;
+    get_fm2_val(&mp,&phyblk,&phylen);
+    //    printf("get %x %x %x %x %x %x",mp,phyblk,phylen,curvbn,logical_block,file_header->fh2$b_map_inuse);
+    if (logical_block>=curvbn && logical_block<(curvbn+phylen))
+      return phyblk+logical_block-curvbn;
+    if (phylen!=0) {
+      curvbn += phylen;
+    }
+  }
+}
+
+int
+ods2_dir (char *dirname)
+{
+  //printf("dir X%sX\n",dirname);
+  struct _dir * dr = mfd;
+  
+  while (1) {
+    char * rest, ch;
+    int str_chk;
+
+    if (!*dirname || isspace (*dirname))
+      {
+	struct _fiddef * fid = &file_header->fh2$w_fid;
+	//printf("fid %x %x %x\n",fid->fid$w_num,fid->fid$b_nmx,fid->fid$w_seq);
+	struct _fatdef * fat = &file_header->fh2$w_recattr;
+	filemax = (VMSSWAP(fat->fat$l_efblk)<<9)-512+fat->fat$w_ffbyte;
+	//printf("filemax %x\n",filemax);
+	return 1;
+      }
+
+    while (*dirname == '/')
+      dirname++;
+
+    if ((VMSLONG(file_header->fh2$l_filechar) & FH2$M_DIRECTORY)==0)
+      {
+	errnum = ERR_BAD_FILETYPE;
+	return 0;
+      }
+
+    /* skip to next slash or end of filename (space) */
+    for (rest = dirname; (ch = *rest) && !isspace (ch) && ch != '/';
+	 rest++);
+
+    *rest = 0;
+
+    do {
+
+      if (VMSWORD(dr->dir$w_size) > MAXREC)
+	{
+	  //printf("dr %x %x %x %x\n",dr,dr->dir$w_size,dr->dir$w_verlimit,dr->dir$b_namecount); 
+	  if (print_possibilities < 0)
+	    {
+	    }
+	  else
+	    {
+	      errnum = ERR_FILE_NOT_FOUND;
+	      *rest = ch;
+	    }
+	  return (print_possibilities < 0);
+	}
+
+      int saved_c = dr->dir$t_name[dr->dir$b_namecount];
+      dr->dir$t_name[dr->dir$b_namecount]=0;
+      str_chk = substring(dirname,dr->dir$t_name);
+
+# ifndef STAGE1_5
+      if (print_possibilities && ch != '/'
+	  && (!*dirname || str_chk <= 0))
+	{
+	  if (print_possibilities > 0)
+	    print_possibilities = -print_possibilities;
+	  print_a_completion (dr->dir$t_name);
+	}
+# endif
+
+      dr->dir$t_name[dr->dir$b_namecount]=saved_c;
+
+      dr = (char *) dr + VMSWORD(dr->dir$w_size) + 2;      
+
+    } while (/*!dp->inode ||*/ (str_chk || (print_possibilities && ch != '/')));
+    struct _dir1 *de = (char*) dr-sizeof(struct _dir1); //(struct _dir1 *) (dr->dir$t_name + ((dr->dir$b_namecount + 1) & ~1));
+    struct _fiddef * fid = &de->dir$fid;
+    int filenum = fid->fid$w_num + (fid->fid$b_nmx<<16);
+    int phy = ods2_index_block_map(VMSLONG(home_block->hm2$w_ibmapvbn) + VMSWORD(home_block->hm2$w_ibmapsize) + filenum - 1);
+    //printf("filen %x %x %x %x %x\n",filenum,fid->fid$w_num,fid->fid$b_nmx,fid->fid$w_seq,phy);
+    devread(phy, 0, 512, file_header);
+    //devread(VMSLONG(home_block->hm2$l_ibmaplbn) + VMSWORD(home_block->hm2$w_ibmapsize) + (filenum - 1), 0, 512, file_header);
+    filepos = 0;
+    ods2_read(dir, 512);
+    filepos = 0;
+    dr = dir;
+    *(dirname = rest) = ch;
+  }
+}
+
+#endif /* FSYS_ODS2 */
diff -ruN grub-0.95-orig/stage2/hm2def.h grub-0.95/stage2/hm2def.h
--- grub-0.95-orig/stage2/hm2def.h	1970-01-01 01:00:00.000000000 +0100
+++ grub-0.95/stage2/hm2def.h	2002-07-07 17:59:52.000000000 +0200
@@ -0,0 +1,63 @@
+#ifndef hm2def_h
+#define hm2def_h
+
+/* Access.h v1.3    Definitions for file access routines */
+
+/*
+        This is part of ODS2 written by Paul Nankervis,
+        email address:  Paulnank@au1.ibm.com
+
+        ODS2 is distributed freely for all members of the
+        VMS community to use. However all derived works
+        must maintain comments in their source to acknowledge
+        the contibution of the original author.
+
+	Originally part of access.h
+*/
+
+#define NO_DOLLAR
+
+struct _hm2 {
+    vmslong hm2$l_homelbn;
+    vmslong hm2$l_alhomelbn;
+    vmslong hm2$l_altidxlbn;
+    vmsword hm2$w_struclev;
+    vmsword hm2$w_cluster;
+    vmsword hm2$w_homevbn;
+    vmsword hm2$w_alhomevbn;
+    vmsword hm2$w_altidxvbn;
+    vmsword hm2$w_ibmapvbn;
+    vmslong hm2$l_ibmaplbn;
+    vmslong hm2$l_maxfiles;
+    vmsword hm2$w_ibmapsize;
+    vmsword hm2$w_resfiles;
+    vmsword hm2$w_devtype;
+    vmsword hm2$w_rvn;
+    vmsword hm2$w_setcount;
+    vmsword hm2$w_volchar;
+    struct _uicdef hm2$w_volowner;
+    vmslong hm2$l_reserved1;
+    vmsword hm2$w_protect;
+    vmsword hm2$w_fileprot;
+    vmsword hm2$w_reserved2;
+    vmsword hm2$w_checksum1;
+    VMSTIME hm2$q_credate;
+    vmsbyte hm2$b_window;
+    vmsbyte hm2$b_lru_lim;
+    vmsword hm2$w_extend;
+    VMSTIME hm2$q_retainmin;
+    VMSTIME hm2$q_retainmax;
+    VMSTIME hm2$q_revdate;
+    vmsbyte hm2$r_min_class[20];
+    vmsbyte hm2$r_max_class[20];
+    vmsbyte hm2$t_reserved3[320];
+    vmslong hm2$l_serialnum;
+    char hm2$t_strucname[12];
+    char hm2$t_volname[12];
+    char hm2$t_ownername[12];
+    char hm2$t_format[12];
+    vmsword hm2$w_reserved4;
+    vmsword hm2$w_checksum2;
+};
+
+#endif
diff -ruN grub-0.95-orig/stage2/mytypes.h grub-0.95/stage2/mytypes.h
--- grub-0.95-orig/stage2/mytypes.h	1970-01-01 01:00:00.000000000 +0100
+++ grub-0.95/stage2/mytypes.h	2003-10-09 08:31:50.000000000 +0200
@@ -0,0 +1,37 @@
+#ifndef mytypes_h
+#define mytypes_h
+
+
+/* Access.h v1.3    Definitions for file access routines */
+
+/*
+        This is part of ODS2 written by Paul Nankervis,
+        email address:  Paulnank@au1.ibm.com
+
+        ODS2 is distributed freely for all members of the
+        VMS community to use. However all derived works
+        must maintain comments in their source to acknowledge
+        the contibution of the original author.
+
+	Originally a part of access.h
+*/
+
+#define NO_DOLLAR
+#include "vmstime.h"
+
+#ifdef FREEVMS_BIG_ENDIAN
+#define VMSLONG(l) ((l & 0xff) << 24 | (l & 0xff00) << 8 | (l & 0xff0000) >> 8 | l >> 24)
+#define VMSWORD(w) ((w & 0xff) << 8 | w >> 8)
+#define VMSSWAP(l) ((l & 0xff0000) << 8 | (l & 0xff000000) >> 8 |(l & 0xff) << 8 | (l & 0xff00) >> 8)
+#else
+#define VMSLONG(l) l
+#define VMSWORD(w) w
+#define VMSSWAP(l) ((l & 0xffff) << 16 | l >> 16)
+#endif
+
+typedef unsigned char vmsbyte;
+typedef unsigned short vmsword;
+typedef unsigned int vmsswap;
+typedef unsigned int vmslong;
+
+#endif
diff -ruN grub-0.95-orig/stage2/pc_slice.h grub-0.95/stage2/pc_slice.h
--- grub-0.95-orig/stage2/pc_slice.h	2003-07-09 13:45:53.000000000 +0200
+++ grub-0.95/stage2/pc_slice.h	2004-11-12 17:28:47.000000000 +0100
@@ -108,6 +108,7 @@
 #define PC_SLICE_TYPE_FAT32_LBA		0xc
 #define PC_SLICE_TYPE_FAT16_LBA		0xe
 #define PC_SLICE_TYPE_WIN95_EXTENDED	0xf
+#define PC_SLICE_TYPE_ODS2       	0x2a
 #define PC_SLICE_TYPE_EZD        	0x55
 #define PC_SLICE_TYPE_MINIX		0x80
 #define PC_SLICE_TYPE_LINUX_MINIX	0x81
diff -ruN grub-0.95-orig/stage2/shared.h grub-0.95/stage2/shared.h
--- grub-0.95-orig/stage2/shared.h	2004-05-14 21:38:37.000000000 +0200
+++ grub-0.95/stage2/shared.h	2004-11-12 16:56:26.000000000 +0100
@@ -232,6 +232,8 @@
 #  define STAGE2_ID	STAGE2_ID_ISO9660_STAGE1_5
 # elif defined(FSYS_UFS2)
 #  define STAGE2_ID	STAGE2_ID_UFS2_STAGE1_5
+# elif defined(FSYS_ODS2)
+#  define STAGE2_ID	STAGE2_ID_ODS2_STAGE1_5
 # else
 #  error "unknown Stage 2"
 # endif
diff -ruN grub-0.95-orig/stage2/uicdef.h grub-0.95/stage2/uicdef.h
--- grub-0.95-orig/stage2/uicdef.h	1970-01-01 01:00:00.000000000 +0100
+++ grub-0.95/stage2/uicdef.h	2002-07-07 17:59:52.000000000 +0200
@@ -0,0 +1,25 @@
+#ifndef uicdef_h
+#define uicdef_h
+
+/* Access.h v1.3    Definitions for file access routines */
+
+/*
+        This is part of ODS2 written by Paul Nankervis,
+        email address:  Paulnank@au1.ibm.com
+
+        ODS2 is distributed freely for all members of the
+        VMS community to use. However all derived works
+        must maintain comments in their source to acknowledge
+        the contibution of the original author.
+
+	Originally part of access.h
+*/
+
+#define NO_DOLLAR
+
+struct _uicdef {
+    vmsword uic$w_mem;
+    vmsword uic$w_grp;
+};
+
+#endif
diff -ruN grub-0.95-orig/stage2/vmstime.h grub-0.95/stage2/vmstime.h
--- grub-0.95-orig/stage2/vmstime.h	1970-01-01 01:00:00.000000000 +0100
+++ grub-0.95/stage2/vmstime.h	2002-07-07 17:59:52.000000000 +0200
@@ -0,0 +1,179 @@
+#ifndef vmstime_h
+#define vmstime_h
+
+/*
+
+       Vmstime.h  v1.6A
+
+       Author: Paul Nankervis
+
+       Please send bug reports to Paulnank@au1.ibm.com
+
+        1.4A Changed default DOLLAR handling to include DOLLAR
+             identifers unless NO_DOLLAR is defined
+             (ie #ifdef DOLLAR to #ifndef NO_DOLLAR)
+        1.5  Moved more header info here and added cvt_internal support
+        1.6A Fixed endian problems in addx/subx
+
+*/
+
+
+#ifndef __VMSTIME__
+#define __VMSTIME__ loaded
+
+struct dsc_descriptor;
+
+#ifdef __ALPHA
+#define VMSTIME_64BIT __int64
+#endif
+
+/* Define quadword time type and test for delta times... */
+
+#ifdef VMSTIME_64BIT
+typedef VMSTIME_64BIT VMSTIME[1];
+typedef VMSTIME_64BIT *pVMSTIME;
+#define ISDELTA(x) (*x < 0)
+#define VMSTIME_ZERO  {0}
+#else
+typedef unsigned char VMSTIME[8];
+typedef unsigned char *pVMSTIME;
+#define ISDELTA(x) (x[7] & 0x80)
+#define VMSTIME_ZERO  {0,0,0,0,0,0,0,0}
+#endif
+
+/* Define status codes we require... note that if the real code values
+   are being included (SSDEF.H) then they should be included first!!! */
+
+#ifndef SS__NORMAL
+#define SS__NORMAL 1
+#define SS__IVTIME 388
+#define LIB__NORMAL 1409025
+#define LIB__IVTIME 1410012
+#define LIB__ONEDELTIM 1410020
+#define LIB__ABSTIMREQ 1410044
+#define LIB__DELTIMREQ 1410052
+#define LIB__INVOPER 1410060
+
+#ifndef NO_DOLLAR
+#ifndef SS$_NORMAL
+#define SS$_NORMAL     SS__NORMAL
+#define SS$_IVTIME     SS__IVTIME
+#define LIB$_NORMAL    LIB__NORMAL
+#define LIB$_IVTIME    LIB__IVTIME
+#define LIB$_ONEDELTIM LIB__ONEDELTIM
+#define LIB$_ABSTIMREQ LIB__ABSTIMREQ
+#define LIB$_DELTIMREQ LIB__DELTIMREQ
+#define LIB$_INVOPER   LIB__INVOPER
+#endif
+#endif
+#endif
+
+/* Constants for lib$cvt_ routines */
+
+#define LIB_K_MONTH_OF_YEAR 1
+#define LIB_K_DAY_OF_YEAR 2
+#define LIB_K_HOUR_OF_YEAR 3
+#define LIB_K_MINUTE_OF_YEAR 4
+#define LIB_K_SECOND_OF_YEAR 5
+#define LIB_K_DAY_OF_MONTH 6
+#define LIB_K_HOUR_OF_MONTH 7
+#define LIB_K_MINUTE_OF_MONTH 8
+#define LIB_K_SECOND_OF_MONTH 9
+#define LIB_K_DAY_OF_WEEK 10
+#define LIB_K_HOUR_OF_WEEK 11
+#define LIB_K_MINUTE_OF_WEEK 12
+#define LIB_K_SECOND_OF_WEEK 13
+#define LIB_K_HOUR_OF_DAY 14
+#define LIB_K_MINUTE_OF_DAY 15
+#define LIB_K_SECOND_OF_DAY 16
+#define LIB_K_MINUTE_OF_HOUR 17
+#define LIB_K_SECOND_OF_HOUR 18
+#define LIB_K_SECOND_OF_MINUTE 19
+#define LIB_K_JULIAN_DATE 20
+#define LIB_K_DELTA_WEEKS 21
+#define LIB_K_DELTA_DAYS 22
+#define LIB_K_DELTA_HOURS 23
+#define LIB_K_DELTA_MINUTES 24
+#define LIB_K_DELTA_SECONDS 25
+#define LIB_K_DELTA_WEEKS_F 26
+#define LIB_K_DELTA_DAYS_F 27
+#define LIB_K_DELTA_HOURS_F 28
+#define LIB_K_DELTA_MINUTES_F 29
+#define LIB_K_DELTA_SECONDS_F 30
+#define LIB_K_MAX_OPERATION 31
+
+/* For system which can use a dollar symbol...*/
+
+#ifndef NO_DOLLAR
+#define sys$asctim          sys_asctim
+#define sys$bintim          sys_bintim
+#define sys$gettim          sys_gettim
+#define sys$numtim          sys_numtim
+#define lib$add_times       lib_add_times
+#define lib$addx            lib_addx
+#define lib$cvt_from_internal_time lib_cvt_from_internal_time
+#define lib$cvt_to_internal_time lib_cvt_to_internal_time
+#define lib$cvt_vectim      lib_cvt_vectim
+#define lib$day             lib_day
+#define lib$day_of_week     lib_day_of_week
+#define lib$mult_delta_time lib_mult_delta_time
+#define lib$sub_times       lib_sub_times
+#define lib$subx            lib_subx
+
+#define LIB$K_MONTH_OF_YEAR     LIB_K_MONTH_OF_YEAR
+#define LIB$K_DAY_OF_YEAR       LIB_K_DAY_OF_YEAR
+#define LIB$K_HOUR_OF_YEAR      LIB_K_HOUR_OF_YEAR
+#define LIB$K_MINUTE_OF_YEAR    LIB_K_MINUTE_OF_YEAR
+#define LIB$K_SECOND_OF_YEAR    LIB_K_SECOND_OF_YEAR
+#define LIB$K_DAY_OF_MONTH      LIB_K_DAY_OF_MONTH
+#define LIB$K_HOUR_OF_MONTH     LIB_K_HOUR_OF_MONTH
+#define LIB$K_MINUTE_OF_MONTH   LIB_K_MINUTE_OF_MONTH
+#define LIB$K_SECOND_OF_MONTH   LIB_K_SECOND_OF_MONTH
+#define LIB$K_DAY_OF_WEEK       LIB_K_DAY_OF_WEEK
+#define LIB$K_HOUR_OF_WEEK      LIB_K_HOUR_OF_WEEK
+#define LIB$K_MINUTE_OF_WEEK    LIB_K_MINUTE_OF_WEEK
+#define LIB$K_SECOND_OF_WEEK    LIB_K_SECOND_OF_WEEK
+#define LIB$K_HOUR_OF_DAY       LIB_K_HOUR_OF_DAY
+#define LIB$K_MINUTE_OF_DAY     LIB_K_MINUTE_OF_DAY
+#define LIB$K_SECOND_OF_DAY     LIB_K_SECOND_OF_DAY
+#define LIB$K_MINUTE_OF_HOUR    LIB_K_MINUTE_OF_HOUR
+#define LIB$K_SECOND_OF_HOUR    LIB_K_SECOND_OF_HOUR
+#define LIB$K_SECOND_OF_MINUTE  LIB_K_SECOND_OF_MINUTE
+#define LIB$K_JULIAN_DATE       LIB_K_JULIAN_DATE
+#define LIB$K_DELTA_WEEKS       LIB_K_DELTA_WEEKS
+#define LIB$K_DELTA_DAYS        LIB_K_DELTA_DAYS
+#define LIB$K_DELTA_HOURS       LIB_K_DELTA_HOURS
+#define LIB$K_DELTA_MINUTES     LIB_K_DELTA_MINUTES
+#define LIB$K_DELTA_SECONDS     LIB_K_DELTA_SECONDS
+#define LIB$K_DELTA_WEEKS_F     LIB_K_DELTA_WEEKS_F
+#define LIB$K_DELTA_DAYS_F      LIB_K_DELTA_DAYS_F
+#define LIB$K_DELTA_HOURS_F     LIB_K_DELTA_HOURS_F
+#define LIB$K_DELTA_MINUTES_F   LIB_K_DELTA_MINUTES_F
+#define LIB$K_DELTA_SECONDS_F   LIB_K_DELTA_SECONDS_F
+#define LIB$K_MAX_OPERATION     LIB_K_MAX_OPERATION
+#endif
+
+
+unsigned sys_gettim(VMSTIME timadr);
+unsigned sys_numtim(unsigned short timvec[7],VMSTIME timadr);
+unsigned sys_bintim(struct dsc_descriptor *timbuf,VMSTIME timadr);
+unsigned sys_asctim(unsigned short *timlen,struct dsc_descriptor *timbuf,
+                    VMSTIME timadr,unsigned cvtflg);
+unsigned lib_add_times(VMSTIME time1,VMSTIME time2,VMSTIME result);
+unsigned lib_addx(void *addant,void *addee,void *result,int *lenadd);
+unsigned lib_cvt_from_internal_time(unsigned *operation,
+                                    unsigned *result,VMSTIME input_time);
+unsigned lib_cvt_to_internal_time(unsigned *operation,int *input,
+                                  VMSTIME result);
+unsigned lib_cvt_vectim(unsigned short timbuf[7],VMSTIME timadr);
+unsigned lib_day(int *days,VMSTIME timadr,int *day_time);
+unsigned lib_day_of_week(VMSTIME timadr,unsigned *weekday);
+unsigned lib_mult_delta_time(int *multiple,VMSTIME timadr);
+unsigned lib_subx(void *subant,void *subee,void *result,int *lenadd);
+unsigned lib_sub_times(VMSTIME time1,VMSTIME time2,VMSTIME result);
+unsigned vmstime_from_nt(VMSTIME nt_time,VMSTIME vms_time);
+unsigned vmstime_to_nt(VMSTIME vms_time,VMSTIME nt_time);
+int vmstime_compare(VMSTIME time1,VMSTIME time2);
+#endif
+
+#endif
