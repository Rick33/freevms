%!PS-Adobe-2.1
%%Creator: DECwrite T2.0 EFT
%%+Copyright (c) 1990 DIGITAL EQUIPMENT CORPORATION.  
%%+All Rights Reserved.
%%DocumentFonts: (atend)
%%EndComments
%%BeginProcSet DEC_WRITE 1.07
/DEC_WRITE_dict 150 dict def DEC_WRITE_dict begin/$D save def/$I 0 def/$S 0
def/$C matrix def/$R matrix def/$L matrix def/$E matrix def/pat1{/px exch
def/pa 8 array def 0 1 7{/py exch def/pw 4 string def 0 1 3{pw exch px py 1
getinterval putinterval}for pa py pw put}for}def/pat2{/pi exch def/cflag
exch def save cflag 1 eq{eoclip}{clip}ifelse newpath{clippath
pathbbox}stopped not{/ph exch def/pw exch def/py exch def/px exch def/px px
3072 div floor 3072 mul def/py py 3072 div floor 3072 mul def px py
translate/pw pw px sub 3072 div floor 1 add cvi def/ph ph py sub 3072 div
floor 1 add cvi def pw 3072 mul ph 3072 mul scale/pw pw 32 mul def/ph ph 32
mul def/px 0 def/py 0 def pw ph pi[pw 0 0 ph 0 0]{pa py get/px px 32 add
def px pw ge{/px 0 def/py py 1 add 8 mod def}if}pi type/booleantype
eq{imagemask}{image}ifelse}if restore}def/PS{/_op exch def/_np 8 string def
0 1 7{/_ii exch def/num _op _ii get def _np 7 _ii sub num -4 bitshift PX
num 15 and 4 bitshift -4 bitshift PX 4 bitshift or put}for _np}def/PX{[15 7
11 3 13 5 9 1 14 6 10 2 12 4 8 0]exch get}def/FR{0.7200 0 $E defaultmatrix
dtransform/yres exch def/xres exch def xres dup mul yres dup mul add
sqrt}def/SU{/_sf exch def/_sa exch def/_cs exch def/_mm $C currentmatrix
def/rm _sa $R rotate def/sm _cs dup $L scale def sm rm _mm _mm concatmatrix
_mm concatmatrix pop 1 0 _mm dtransform/y1 exch def/x1 exch def/_vl x1 dup
mul y1 dup mul add sqrt def/_fq FR _vl div def/_na y1 x1 atan def _mm 2 get
_mm 1 get mul _mm 0 get _mm 3 get mul sub 0 gt{{neg}/_sf load
concatprocs/_sf exch def}if _fq _na/_sf load setscreen}def/BO{/_yb exch
def/_xb exch def/_bv _bs _yb _bw mul _xb 8 idiv add get def/_mk 1 7 _xb 8
mod sub bitshift def _bv _mk and 0 ne $I 1 eq xor}def/BF{DEC_WRITE_dict
begin/_yy exch def/_xx exch def/_xi _xx 1 add 2 div _bp mul cvi def/_yi _yy
1 add 2 div _bp mul cvi def _xi _yi BO{/_nb _nb 1 add def 1}{/_fb _fb 1 add
def 0}ifelse end}def/setpattern{/_cz exch def/_bw exch def/_bp exch def/_bs
exch PS def/_nb 0 def/_fb 0 def _cz 0/BF load SU{}settransfer _fb _fb _nb
add div setgray/$S 1 def}def/invertpattern{$S 0 eq{{1 exch
sub}currenttransfer concatprocs settransfer}if}def/invertscreen{/$I 1
def/$S 0 def}def/revertscreen{/$I 0 def}def/setrect{/$h exch def/$w exch
def/$y exch def/$x exch def newpath $x $y moveto $w $x add $y lineto $w $x
add $h $y add lineto $x $h $y add lineto closepath}def/concatprocs{/_p2
exch cvlit def/_p1 exch cvlit def/_pn _p1 length _p2 length add array def
_pn 0 _p1 putinterval _pn _p1 length _p2 putinterval _pn
cvx}def/OF/findfont load def/findfont{dup DEC_WRITE_dict exch
known{DEC_WRITE_dict exch get}if DEC_WRITE_dict/OF get exec}def
mark/ISOLatin1Encoding 
8#000 1 8#001{StandardEncoding exch get}for /emdash/endash
8#004 1 8#025{StandardEncoding exch get}for /quotedblleft/quotedblright
8#030 1 8#054{StandardEncoding exch get}for /minus 8#056 1 8#217
{StandardEncoding exch get}for/dotlessi 8#301 1 8#317{StandardEncoding 
exch get}for/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered
/macron/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph
/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter
/onehalf/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde
/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave
/Iacute/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde
/Odieresis/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave
/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
256 array astore def cleartomark 
/encodefont{findfont dup maxlength dict begin{1 index/FID ne{def}{pop
pop}ifelse}forall/Encoding exch def dup/FontName exch def currentdict
definefont end}def/loads{/$/ISOLatin1Encoding load def/&/encodefont load
def/*/invertpattern load def/+/revertscreen load def/-/invertscreen load
def/:/concatprocs load def/^/setpattern load def/~/pat1 load def/_/pat2
load def/@/setrect load def/A/arcn load def/B/ashow load def/C/curveto load
def/D/def load def/E/eofill load def/F/findfont load def/G/setgray load
def/H/closepath load def/I/clip load def/J/fill load def/K/kshow load
def/L/lineto load def/M/moveto load def/N/newpath load def/O/rotate load
def/P/pop load def/R/grestore load def/S/gsave load def/T/translate load
def/U/sub load def/V/div load def/W/widthshow load def/X/exch load
def/Y/awidthshow load def/a/save load def/c/setlinecap load def/d/setdash
load def/e/restore load def/f/setfont load def/g/initclip load def/h/show
load def/i/setmiterlimit load def/j/setlinejoin load def/k/stroke load
def/l/rlineto load def/m/rmoveto load def/n/currentfont load
def/o/scalefont load def/p/currentpoint load def/q/setrgbcolor load
def/r/currenttransfer load def/s/scale load def/t/setmatrix load
def/u/settransfer load def/w/setlinewidth load def/x/matrix load
def/y/currentmatrix load def}def
end
%%EndProcSet
%%EndProlog

%%BeginSetup
DEC_WRITE_dict begin
loads
version cvi 23.0 gt {
currentdict {dup type /arraytype eq
{bind def} {pop pop} ifelse} forall} if
0.0100 0.0100 s

%%EndSetup
%%Page: 1 1
/$P a D
g N
0 79200 T
S
S
7200 -74700 T
N
0 G
23400 -1188 M
-7200 74700 T
R

R
S
9000 -6600 T
N
0 G
3926 -1338 M
/Times-Bold-ISOLatin1 $
/Times-Bold & P
/Times-Bold-ISOLatin1 F 1400 o f
(A Model and Prototype of VMS Using the Mach 3.0 Kernel) h
17418 -5188 M
/Times-Italic-ISOLatin1 $
/Times-Italic & P
/Times-Italic-ISOLatin1 F 1200 o f
(Cheryl A. Wiecek) h
16449 -6588 M
(Christopher G. Kaler) h
17717 -7988 M
(Stephen Fiorelli) h
15333 -9388 M
(William C. Davenport, Jr.) h
17850 -10788 M
(Robert C. Chen) h
14100 -14588 M
/Times-Roman-ISOLatin1 $
/Times-Roman & P
/Times-Roman-ISOLatin1 F 1200 o f
(Digital Equipment Corporation) h
16516 -15988 M
(110 Spit Brook Road) h
15584 -17388 M
(Nashua, NH 03062\2552698) h
7275 -18788 M
({wiecek,kaler,fiorelli,davenport,rchen} @star.enet.dec.com) h
19367 -22588 M
/Times-Bold-ISOLatin1 F 1200 o f
(Abstract) h
288 -25238 M
/Times-Roman-ISOLatin1 F 1000 o f
99.6 0 32 (Digital's VMS operating system has been a successful software base for our VAX processors since the) W
288 -26438 M
64.3 0 32 (late 1970's.  Existing operating systems are facing many new requirements and challenges in the 1990's) W
288 -27638 M
27.1 0 32 (and beyond.  This has led us to investigate new approaches for designing, implementing, and maintaining) W
288 -28838 M
33.2 0 32 (VMS.  One such effort is described in this paper.  Using the Mach 3.0 kernel from Carnegie Mellon Uni\255) W
288 -30038 M
448.3 0 32 (versity, we developed a multi\255server model and prototype of VMS that emphasizes platform\255) W
288 -31238 M
44.1 0 32 (independence and internal partitioning.  We describe the challenges we faced, the model that we evolved) W
288 -32438 M
39.4 0 32 (to address these challenges, and the prototype that we built to demonstrate feasibility.  We conclude with) W
288 -33638 M
(a discussion of our findings and possible future directions.) h
288 -36688 M
/Times-Bold-ISOLatin1 F 1200 o f
(1 ) h
1188 -36688 M
(Introduction) h
288 -38938 M
/Times-Roman-ISOLatin1 F 1000 o f
70.6 0 32 (VMS) W
n 0.666 o f
0.0 448.0 m
70.6 0 32 (1) W
0 -448.0 m
n 1.502 o f
70.6 0 32 ( \(Virtual Memory System\) is an operating system that was designed starting in 1976 as a general\255) W
288 -40138 M
38.6 0 32 (purpose time sharing system for Digital's VAX line of processors.  Over time, VMS [7] has evolved into) W
288 -41338 M
1.3 0 32 (a large collection of functions and features that support a large customer base and many applications.  Pre\255) W
288 -42538 M
12.5 0 32 (serving and making enhancements to VMS is a challenging effort in light of its dependencies on the VAX) W
288 -43738 M
16.7 0 32 (architecture and its monolithic structure.  This has motivated us to investigate ways to restructure VMS to) W
288 -44938 M
20.5 0 32 (accommodate open and distributed computing requirements in and beyond the 1990's while continuing to) W
288 -46138 M
(support current VMS customers and applications.) h
288 -47738 M
102.2 0 32 (Mach [1,9,11] includes base support for architecture\255independent virtual memory management, threads,) W
288 -48938 M
38.1 0 32 (and interprocess communication.  Whether or not Mach could support VMS was intriguing to both CMU) W
288 -50138 M
118.1 0 32 (and Digital.  The micro\255kernel [5] approach that Mach 3.0 represents also had potential for addressing) W
288 -51338 M
23.1 0 32 (architectural dependencies and structural issues facing VMS.  The possibility of building a VMS environ\255) W
288 -52538 M
59.9 0 32 (ment on top of Mach using a number of servers that might be shared, replicated, and replaced as needed) W
288 -53738 M
(was promising.) h
288 -55338 M
38.4 0 32 (After studying Mach literature sent to us by CMU, a VMS engineering advanced development effort was) W
288 -56538 M
140.2 0 32 (proposed to investigate the potential of micro\255kernel technology to support a VMS environment using) W
288 -57738 M
(Mach 3.0.  The goals were:) h
288 -59338 M
/Symbol F 1000 o f
(\267) h
2088 -59338 M
/Times-Roman-ISOLatin1 F 1000 o f
(Learn the requirements that VMS has on a micro\255kernel.) h
288 -60938 M
/Symbol F 1000 o f
(\267) h
2088 -60938 M
/Times-Roman-ISOLatin1 F 1000 o f
(Understand the strengths and weaknesses of a micro\255kernel approach for VMS.) h
-9000 6600 T
R

S
9000 -70224 T
N
0 G
288 -1188 M
/Times-Roman-ISOLatin1 F 1000 o f
0.0 448.0 m
(1) h
0 -448.0 m
788 -1188 M
(VMS, VAX, VAXstation, VAXcluster, and Digital are trademarks of Digital Equipment Corporation.) h
-9000 70224 T
R

showpage
$P e

%%Page: 2 2
/$P a D
g N
0 79200 T
S
S
7200 -74700 T
N
0 G
23400 -1188 M
-7200 74700 T
R

R
S
9000 -6600 T
N
0 G
288 -1038 M
/Symbol F 1000 o f
(\267) h
2088 -1038 M
/Times-Roman-ISOLatin1 $
/Times-Roman & P
/Times-Roman-ISOLatin1 F 1000 o f
103.0 0 32 (Identify features, mechanisms, and policies in VMS that are difficult to port to non\255VAX architec\255) W
2088 -2238 M
(tures and suggest alternatives.) h
288 -3838 M
/Symbol F 1000 o f
(\267) h
2088 -3838 M
/Times-Roman-ISOLatin1 F 1000 o f
(Investigate the implications of a micro\255kernel approach for VMS\255based applications.) h
288 -5438 M
108.9 0 32 (Porting VMS to a non\255VAX platform or developing a product version of VMS based on the Mach 3.0) W
288 -6638 M
(kernel was not part of this research effort.) h
288 -8238 M
34.9 0 32 (A small team of VMS engineers was assembled by January of 1991 and is working to demonstrate that it) W
288 -9438 M
(is both possible and desirable to build an operating system that:) h
288 -11038 M
/Symbol F 1000 o f
(\267) h
2088 -11038 M
/Times-Roman-ISOLatin1 F 1000 o f
(uses minimal kernel and client\255server design techniques to ease change and evolution,) h
288 -12638 M
/Symbol F 1000 o f
(\267) h
2088 -12638 M
/Times-Roman-ISOLatin1 F 1000 o f
(promotes portability with an implementation that emphasizes architectural independence,) h
288 -14238 M
/Symbol F 1000 o f
(\267) h
2088 -14238 M
/Times-Roman-ISOLatin1 F 1000 o f
(has respectable performance,) h
2088 -15838 M
(and) h
288 -17438 M
/Symbol F 1000 o f
(\267) h
2088 -17438 M
/Times-Roman-ISOLatin1 F 1000 o f
(preserves the VMS user environment.) h
288 -19038 M
6.9 0 32 (An agreement with CMU gave us access to the expertise of, and support from, the CMU Mach team.  One) W
288 -20238 M
(of the VMS engineers on the project relocated to Pittsburgh, PA. and worked from the CMU campus.) h
288 -21838 M
60.0 0 32 (The project evolved into a two\255phase effort: developing a model of VMS using the Mach 3.0 kernel and) W
288 -23038 M
(design philosophy, and implementing prototype software based on the model.) h
288 -24638 M
73.1 0 32 (During the first phase of the project, we developed a model of VMS that isolates the VAX architectural) W
288 -25838 M
49.0 0 32 (dependencies and existing VMS software interdependencies.  This phase lasted about eight months.  The) W
288 -27038 M
157.3 0 32 (model we produced is our vision of how VMS could be structured to ease evolution, portability, and) W
288 -28238 M
175.9 0 32 (maintenance.  In this model, we partition VMS into multiple platform\255independent servers and use a) W
288 -29438 M
5.1 0 32 (client\255server design approach to provide VMS user processes with access to this VMS environment.  Each) W
288 -30638 M
114.3 0 32 (VMS process consists of two cooperating Mach tasks: a user image space where VMS process images) W
288 -31838 M
(execute, and a process server that manages the VMS process and its images.) h
288 -33438 M
13.5 0 32 (During the second phase of the project, we developed prototype software that includes six servers to dem\255) W
288 -34638 M
8.7 0 32 (onstrate the viability of our model of VMS.  This prototype runs on a VAXstation and provides for execu\255) W
288 -35838 M
34.1 0 32 (tion of existing non\255privileged VMS binary images.  VMS server tasks include a library that provides ac\255) W
288 -37038 M
77.6 0 32 (cess to functions in the Mach 3.0 kernel and 4.3 BSD UNIX) W
n 0.666 o f
0.0 448.0 m
77.6 0 32 (1) W
0 -448.0 m
n 1.502 o f
77.6 0 32 (\255compatible single server that we obtained) W
288 -38238 M
(from CMU.  We are currently measuring and evaluating this prototype.) h
288 -39838 M
8.4 0 32 (In the rest of this paper, we describe our model and the prototype work we have completed.  This includes) W
288 -41038 M
16.8 0 32 (details on the challenges and issues we faced, as well as our model design, prototype implementation, and) W
288 -42238 M
(findings.) h
288 -45288 M
/Times-Bold-ISOLatin1 $
/Times-Bold & P
/Times-Bold-ISOLatin1 F 1200 o f
(2 ) h
1188 -45288 M
(VMS Model Development) h
288 -47538 M
/Times-Roman-ISOLatin1 F 1000 o f
119.4 0 32 (A major undertaking for the team was to come up with a model of VMS that addressed the goals and) W
288 -48738 M
89.9 0 32 (objectives we set for the project.  The model we developed does not cover all aspects of VMS.  In this) W
288 -49938 M
53.6 0 32 (section we describe the challenges we addressed and present some details on the model we designed.  In) W
288 -51138 M
115.8 0 32 (particular, we discuss the VMS process, the set of VMS servers that create the VMS operating system) W
288 -52338 M
(\(personality\) environment, and a number of VMS mechanisms affected by our approach.) h
288 -55388 M
/Times-Bold-ISOLatin1 F 1200 o f
(2.1 ) h
2088 -55388 M
(Challenges) h
288 -57638 M
/Times-Roman-ISOLatin1 F 1000 o f
106.7 0 32 (An important milestone for the project was to understand the VMS personality environment and to de\255) W
288 -58838 M
11.6 0 32 (velop a model of VMS that includes the functions, policies, and mechanisms needed to support the execu\255) W
288 -60038 M
(tion of VMS non\255privileged \(user\) images.) h
288 -61638 M
-9000 6600 T
R

S
9000 -70224 T
N
0 G
288 -1188 M
/Times-Roman-ISOLatin1 F 1000 o f
0.0 448.0 m
(1) h
0 -448.0 m
788 -1188 M
(UNIX is a registered trademark of UNIX System Laboratories, Inc.) h
-9000 70224 T
R

showpage
$P e

%%Page: 3 3
/$P a D
g N
0 79200 T
S
S
7200 -74700 T
N
0 G
23400 -1188 M
-7200 74700 T
R

R
S
9000 -6600 T
N
0 G
288 -1038 M
/Times-Roman-ISOLatin1 $
/Times-Roman & P
/Times-Roman-ISOLatin1 F 1000 o f
35.5 0 32 (There were two issues that we wanted to address with this model: VMS dependencies on the VAX archi\255) W
288 -2238 M
19.4 0 32 (tecture and interdependencies between VMS subsystems.  Had we chosen to address just VMS dependen\255) W
288 -3438 M
35.9 0 32 (cies on the VAX architecture, the model would focus on replacing VMS kernel primitives with Mach 3.0) W
288 -4638 M
36.7 0 32 (primitives, leaving the rest of VMS alone \(a single\255server approach\).  To deal with interdependencies be\255) W
288 -5838 M
97.7 0 32 (tween VMS subsystems as well, we chose to pursue a multi\255server approach where the VMS operating) W
288 -7038 M
(system is partitioned into a set of servers that act on behalf of user \(client\) processes.) h
288 -8638 M
16.1 0 32 (Our multi\255server approach raised some interesting issues with regard to data sharing within VMS, and be\255) W
288 -9838 M
190.1 0 32 (tween VMS and user processes \(including protection of certain data from access by user processes\). ) W
288 -11038 M
47.8 0 32 (Moving VMS subsystems into separate address spaces invalidated the shared memory assumptions made) W
288 -12238 M
43.8 0 32 (by the existing subsystems.  Due to the way the VAX architecture partitions virtual memory, alternatives) W
288 -13438 M
(were needed to handle:) h
288 -15038 M
/Symbol F 1000 o f
(\267) h
2088 -15038 M
/Times-Roman-ISOLatin1 F 1000 o f
(unprotected data in process \(P0\) address space that is accessed by VMS subsystems.) h
288 -16638 M
/Symbol F 1000 o f
(\267) h
2088 -16638 M
/Times-Roman-ISOLatin1 F 1000 o f
112.9 0 32 (protected VMS subsystem data that currently resides in process \(P1\) address space.  VMS subsys\255) W
2088 -17838 M
(tems, executing under process context, have access to per\255process data areas in P1 space.) h
288 -19438 M
/Symbol F 1000 o f
(\267) h
2088 -19438 M
/Times-Roman-ISOLatin1 F 1000 o f
75.4 0 32 (protected data areas shared among VMS subsystems in the shared system \(S0\) address space where) W
2088 -20638 M
3.5 0 32 (VMS is itself located.  There are many control\255block\255based structures in VMS that contain pointers to) W
2088 -21838 M
(other structures and affect multiple VMS subsystems.) h
288 -23438 M
(In addition, we did not want to assume, as VMS does, that four access modes are available to protect data.) h
288 -25038 M
128.5 0 32 (Our model impacted a number of mechanisms involved in the execution of a VMS process.  Some of) W
288 -26238 M
61.8 0 32 (these mechanisms depend on VAX architecture features, whereas others are affected by our multi\255server) W
288 -27438 M
(approach.  These include:) h
288 -29038 M
/Symbol F 1000 o f
(\267) h
2088 -29038 M
/Times-Roman-ISOLatin1 F 1000 o f
(asynchronous system traps \(ASTs\),) h
288 -30638 M
/Symbol F 1000 o f
(\267) h
2088 -30638 M
/Times-Roman-ISOLatin1 F 1000 o f
(exception and condition handling,) h
288 -32238 M
/Symbol F 1000 o f
(\267) h
2088 -32238 M
/Times-Roman-ISOLatin1 F 1000 o f
(interrupts, interrupt priority level \(IPL\), and spinlocks,) h
2088 -33838 M
(and) h
288 -35438 M
/Symbol F 1000 o f
(\267) h
2088 -35438 M
/Times-Roman-ISOLatin1 F 1000 o f
(scheduling\255related mechanisms \() h
/Times-Italic-ISOLatin1 $
/Times-Italic & P
/Times-Italic-ISOLatin1 F 1000 o f
(e.g.,) h
/Times-Roman-ISOLatin1 F 1000 o f
( I/O completion, event flag wait\).) h
288 -37038 M
32.7 0 32 (We also wanted to consider the implications of multiple operating system personalities on one kernel and) W
288 -38238 M
23.3 0 32 (the possible interoperability that could be exploited.  One example is allowing for multiple command lan\255) W
288 -39438 M
56.9 0 32 (guage interpreters \() W
/Times-Italic-ISOLatin1 F 1000 o f
56.9 0 32 (e.g.,) W
/Times-Roman-ISOLatin1 F 1000 o f
56.9 0 32 ( VMS DCL, POSIX [8], DEC/Shell, ) W
/Times-Italic-ISOLatin1 F 1000 o f
56.9 0 32 (etc) W
/Times-Roman-ISOLatin1 F 1000 o f
56.9 0 32 (.\).  Another is investigating generic serv\255) W
288 -40638 M
140.3 0 32 (ers that multiple personalities might share \(or at least partitioning servers into personality\255independent) W
288 -41838 M
(and personality\255dependent pieces\).) h
288 -44888 M
/Times-Bold-ISOLatin1 $
/Times-Bold & P
/Times-Bold-ISOLatin1 F 1200 o f
(2.2 ) h
2088 -44888 M
(VMS Model Design) h
288 -47138 M
/Times-Roman-ISOLatin1 F 1000 o f
(In addressing the challenges just discussed, our model of VMS has the following features:) h
288 -48738 M
/Symbol F 1000 o f
(\267) h
2088 -48738 M
/Times-Roman-ISOLatin1 F 1000 o f
72.4 0 32 (The VMS process, called the user client, consists of a pair of Mach tasks.  These two tasks provide) W
2088 -49938 M
(user images with a VMS application environment.) h
288 -51538 M
/Symbol F 1000 o f
(\267) h
2088 -51538 M
/Times-Roman-ISOLatin1 F 1000 o f
366.1 0 32 (This user client is partitioned into operating system personality\255independent and personality\255) W
2088 -52738 M
(dependent pieces.) h
288 -54338 M
/Symbol F 1000 o f
(\267) h
2088 -54338 M
/Times-Roman-ISOLatin1 F 1000 o f
(VMS servers run in user mode and do not depend on processor architectural features.) h
288 -55938 M
/Symbol F 1000 o f
(\267) h
2088 -55938 M
/Times-Roman-ISOLatin1 F 1000 o f
38.8 0 32 (User\255generated VMS actions \(like setting an event flag or delivering an AST\) are implemented in an) W
2088 -57138 M
(architecture\255independent manner.) h
288 -58738 M
(An overview of the model and some details on these features are presented below.) h
288 -60338 M
-9000 6600 T
R

showpage
$P e

%%Page: 4 4
/$P a D
g N
0 79200 T
S
S
7200 -74700 T
N
0 G
23400 -1188 M
-7200 74700 T
R

R
S
9000 -6600 T
N
0 G
288 -1188 M
/Times-Bold-ISOLatin1 $
/Times-Bold & P
/Times-Bold-ISOLatin1 F 1200 o f
(2.2.1 ) h
2988 -1188 M
(Overview of the Model) h
288 -3438 M
/Times-Roman-ISOLatin1 $
/Times-Roman & P
/Times-Roman-ISOLatin1 F 1000 o f
98.4 0 32 (The VMS\255on\255Mach model consists of two basic types of tasks: VMS server tasks and VMS user space) W
288 -4638 M
22.3 0 32 (tasks, all depicted using circles in Figure ) W
22.3 0 32 (1.  The VMS server tasks provide the VMS personality environ\255) W
288 -5838 M
115.2 0 32 (ment that runs on the Mach 3.0 kernel.  Services provided by this environment are used by VMS user) W
288 -7038 M
(images executing within a user space task.) h
288 -8638 M
13384 -38202 M
/Times-Bold-ISOLatin1 F 1200 o f
(Figure 1   ) h
18584 -38202 M
(VMS\255on\255Mach Model) h
288 -40852 M
/Times-Roman-ISOLatin1 F 1000 o f
13.6 0 32 (Each VMS process \(user client\), depicted by a shaded rectangle in Figure ) W
13.6 0 32 (1, consists of a VMS user space) W
288 -42052 M
29.0 0 32 (task and a VMS process server task.  When system service requests are made by VMS user images, these) W
288 -43252 M
1.1 0 32 (are translated within the VMS user space task into requests that are acted upon by that task or, using Mach) W
288 -44452 M
6.9 0 32 (IPC \(interprocess communication\) services, by other VMS server tasks.  The VMS process server task has) W
288 -45652 M
16.6 0 32 (special responsibility for providing the address space within which process\255protected code and data reside) W
288 -46852 M
27.1 0 32 (\(including loginout, command language interpretation, and image activation\).  The VMS executive server) W
288 -48052 M
110.3 0 32 (\(seen in Figure 1 with diagonal shading\) has special responsibilities that include bootstrap of the VMS) W
288 -49252 M
11.8 0 32 (environment.  Note that hardware reboot is not required to restart VMS\255on\255Mach.  The executive server is) W
288 -50452 M
48.3 0 32 (also responsible for managing server registration and access, as well as for managing the complete set of) W
288 -51652 M
(VMS user clients \(processes\).) h
288 -54402 M
/Times-Bold-ISOLatin1 F 1200 o f
(2.2.2 ) h
2988 -54402 M
(The Process in the VMS Model) h
288 -56652 M
/Times-Roman-ISOLatin1 F 1000 o f
52.5 0 32 (In order to preserve the behavior of the VMS process in our model, the user client evolved into a pair of) W
288 -57852 M
(closely\255coupled Mach tasks.  The particular behavior we wanted to preserve included:) h
288 -59452 M
/Symbol F 1000 o f
(\267) h
2088 -59452 M
/Times-Roman-ISOLatin1 F 1000 o f
69.4 0 32 (separation of the process itself from images executed within the process \(in particular, protection of) W
2088 -60652 M
(the process from erroneous user images\),) h
2088 -62252 M
(and) h
288 -63852 M
/Symbol F 1000 o f
(\267) h
2088 -63852 M
/Times-Roman-ISOLatin1 F 1000 o f
(protection of certain code and data from access by users.) h
-9000 6600 T
S
N
S
15473 -43702 30254 28014 @ I N
15473 -15688 T
N
S
8705 -16032 7480 14580 @
S
0.875 G E
R
S
64 w
0 c
0 j
2 i
0.00 G k
R
R


S
7881 -16666 7481 14580 @
S
0.875 G E
R
S
64 w
0 c
0 j
2 i
0.00 G k
R
R

S
7122 -17364 7480 14581 @
S
0.875 G E
R
S
64 w
0 c
0 j
2 i
0.00 G k
R
R

S
426 -24436 29354 24014 @
S
64 w
0 c
0 j
2 i
0.00 G k
R
R

S
N
/ctm_cached x y D
10832 -14602 T
2356 2031 s
0 0 1 90 -270 A
ctm_cached t
S
- + * 0.00 G E
R
H
S
64 w
0 c
0 j
2 i
0.00 G k
R
R


S
9398 -16173 2901 3030 @
S
1.00 G E
R
R

S
9795 -13939 M
/Helvetica-ISOLatin1 $
/Helvetica & P
/Helvetica-ISOLatin1 F 900 o f
(VMS) h
R


S
9141 -14947 M
/Helvetica-ISOLatin1 F 900 o f
(Process) h
R

S
9577 -15928 M
/Helvetica-ISOLatin1 F 900 o f
(Server) h
R

S
7397 -4535 8282 1456 @
S
- + * 0.00 G E
R
R


S
N
/ctm_cached x y D
10632 -8293 T
2567 2289 s
0 0 1 90 -270 A
ctm_cached t
S
- + * 0.00 G E
R
H
S
64 w
0 c
0 j
2 i
0.00 G k
R
R


S
8922 -7812 M
/Helvetica-ISOLatin1 F 898 o f
(   ) h
n 1.002 o f
(VMS) h
R


S
8377 -8867 M
/Helvetica-ISOLatin1 F 900 o f
(User Space) h
R

S
426 -27544 29354 2476 @
S
0.75 G E
R
S
64 w
0 c
0 j
2 i
0.00 G k
R
R

S
7491 -4166 M
/Helvetica-BoldOblique-ISOLatin1 $
/Helvetica-BoldOblique & P
/Helvetica-BoldOblique-ISOLatin1 F 900 o f
( VMS User Clients) h
R

S
N
/ctm_cached x y D
24694 -21062 T
2165 2070 s
0 0 1 90 -270 A
ctm_cached t
S
- + * 0.00 G E
R
H
S
64 w
0 c
0 j
2 i
0.00 G k
R
R

S
N
/ctm_cached x y D
25962 -13711 T
2166 2070 s
0 0 1 90 -270 A
ctm_cached t
S
- + * 0.00 G E
R
H
S
64 w
0 c
0 j
2 i
0.00 G k
R
R



S
25050 -13487 M
/Helvetica-ISOLatin1 F 900 o f
(VMS) h
R

S
24730 -14576 M
/Helvetica-ISOLatin1 F 900 o f
(Server) h
R

S
N
/ctm_cached x y D
5107 -20983 T
2831 2703 s
0 0 1 90 -270 A
ctm_cached t
S
/patt25 <7FBFDFEFF7FBFDFE> D
patt25 ~ 1 1 _
R
H
S
64 w
0 c
0 j
2 i
0.00 G k
R
R


S
N
3062 -20915 M
3062 -19153 3062 -19153 5137 -19153 C
7213 -19153 7213 -19153 7213 -20915 C
7213 -22678 7213 -22678 5137 -22678 C
3062 -22678 3062 -22678 3062 -20915 C
H
S
1.00 G E
R
R

S
4048 -20257 M
/Helvetica-ISOLatin1 F 900 o f
(VMS) h
R


S
3206 -21217 M
/Helvetica-ISOLatin1 F 900 o f
(Executive) h
R

S
3790 -22168 M
/Helvetica-ISOLatin1 F 900 o f
(Server) h
R

S
N
/ctm_cached x y D
3651 -13600 T
2165 2070 s
0 0 1 90 -270 A
ctm_cached t
S
- + * 0.00 G E
R
H
S
64 w
0 c
0 j
2 i
0.00 G k
R
R

S
N
7199 -11095 M
14678 -11095 L
S
14 w
0 c
0 j
2 i
[400 400] 0 d
0.00 G k
R
R

S
N
/ctm_cached x y D
19941 -16229 T
2166 2069 s
0 0 1 90 -270 A
ctm_cached t
S
- + * 0.00 G E
R
H
S
64 w
0 c
0 j
2 i
0.00 G k
R
R

S
N
14615 -11095 M
16263 -9385 L
S
- + * 0.00 G E
R
S
14 w
0 c
0 j
2 i
[400 400] 0 d
0.00 G k
R
R

S
N
29383 -6722 M
17271 -6722 L
15503 -7927 L
17339 -9320 L
29383 -9320 L
H
S
- + * 0.00 G E
R
S
14 w
0 c
0 j
2 i
[400 400] 0 d
0.00 G k
R
R

S
16750 -8281 M
/Helvetica-BoldOblique-ISOLatin1 F 900 o f
(VMS User Images Run Here) h
R

S
N
/ctm_cached x y D
14997 -21143 T
2165 2070 s
0 0 1 90 -270 A
ctm_cached t
S
- + * 0.00 G E
R
H
S
64 w
0 c
0 j
2 i
0.00 G k
R
R

S
19030 -16012 M
/Helvetica-ISOLatin1 F 900 o f
(VMS) h
R

S
18710 -17101 M
/Helvetica-ISOLatin1 F 900 o f
(Server) h
R

S
23759 -20934 M
/Helvetica-ISOLatin1 F 900 o f
(VMS) h
R

S
23439 -22023 M
/Helvetica-ISOLatin1 F 900 o f
(Server) h
R

S
14044 -20933 M
/Helvetica-ISOLatin1 F 900 o f
(VMS) h
R

S
13724 -22022 M
/Helvetica-ISOLatin1 F 900 o f
(Server) h
R

S
2668 -13392 M
/Helvetica-ISOLatin1 F 900 o f
(VMS) h
R

S
2348 -14481 M
/Helvetica-ISOLatin1 F 900 o f
(Server) h
R

S
11901 -27040 6366 1456 @
S
- + * 0.00 G E
R
R

S
12395 -26656 M
/Helvetica-Bold-ISOLatin1 $
/Helvetica-Bold & P
/Helvetica-Bold-ISOLatin1 F 900 o f
(Mach Kernel) h
R

R


R
R

showpage
$P e

%%Page: 5 5
/$P a D
g N
0 79200 T
S
S
7200 -74700 T
N
0 G
23400 -1188 M
-7200 74700 T
R

R
S
9000 -6600 T
N
0 G
288 -1038 M
/Times-Roman-ISOLatin1 $
/Times-Roman & P
/Times-Roman-ISOLatin1 F 1000 o f
96.9 0 32 (One task, the user space task, provides the address space within which VMS user images are executed. ) W
288 -2238 M
108.9 0 32 (Calls to the VMS application programming interface \(API\) by an image are acted upon by a read\255only) W
288 -3438 M
64.4 0 32 (user library that resides in each user space task.  The user library implements entry points for VMS sys\255) W
288 -4638 M
115.6 0 32 (tem services in what is known as the VMS transfer vector.  These entry points redirect system service) W
288 -5838 M
68.3 0 32 (calls to the routines which implement the services.  Since the transfer vector is at a fixed location in the) W
288 -7038 M
64.5 0 32 (user image's address space for all VMS systems, programs linked against the transfer vector are assured) W
288 -8238 M
132.0 0 32 (that they need not be relinked for subsequent versions of VMS.  This guarantee can be made because) W
288 -9438 M
125.3 0 32 (changes internal to VMS are hidden from applications by simply changing the contents of the transfer) W
288 -10638 M
25.9 0 32 (vector.  In our model, system service calls are translated by the user library into service requests that may) W
288 -11838 M
109.1 0 32 (be handled directly within the user library, or directed to the appropriate VMS server task.  All of this) W
288 -13038 M
75.2 0 32 (activity is invisible to the user image, allowing some freedom for the underlying operating system envi\255) W
288 -14238 M
(ronment to evolve and change.) h
288 -15838 M
106.3 0 32 (The user space task is created and managed by a second task, the process server.  This server contains) W
288 -17038 M
53.8 0 32 (code and data that are protected from user access.  The process server is designed to accommodate other) W
288 -18238 M
72.3 0 32 (operating system personality environments in addition to VMS.  Code and data that are generic with re\255) W
288 -19438 M
131.8 0 32 (spect to the operating system personality environment, like system access validation, receipt of excep\255) W
288 -20638 M
60.9 0 32 (tional conditions, and communication with other servers, are separate from and used to invoke operating) W
288 -21838 M
85.2 0 32 (system personality features, like command language interpretation, system services, image services, and) W
288 -23038 M
46.4 0 32 (exception processing.  In our model, this personality\255dependent piece is dynamically loaded during proc\255) W
288 -24238 M
(ess server initialization.) h
288 -25838 M
121.5 0 32 (This model of the VMS process also affected how the state of a process \(its process context\) is main\255) W
288 -27038 M
43.0 0 32 (tained.  A main VMS software structure, the process control block \(PCB\), contains information managed) W
288 -28238 M
16.3 0 32 (by many VMS subsystems.  With our model partitioning VMS into a set of servers, we decided to distrib\255) W
288 -29438 M
108.6 0 32 (ute the PCB information among the servers within the VMS environment.  This favors performance of) W
288 -30638 M
125.8 0 32 (VMS servers in responding to user requests over performance of process\255related information\255gathering) W
288 -31838 M
(applications.) h
288 -34588 M
/Times-Bold-ISOLatin1 $
/Times-Bold & P
/Times-Bold-ISOLatin1 F 1200 o f
(2.2.3 ) h
2988 -34588 M
(Servers in the VMS Model) h
288 -36838 M
/Times-Roman-ISOLatin1 F 1000 o f
56.8 0 32 (Our model is based on a client\255server approach.  Individual subsystems within VMS are implemented as) W
288 -38038 M
107.3 0 32 (multi\255threaded Mach server tasks.  The functions of each VMS server are kept simple to provide basic) W
288 -39238 M
19.1 0 32 (building blocks from which the VMS personality environment may be constructed.  This approach helped) W
288 -40438 M
25.6 0 32 (us focus on our goals of architectural independence and subsystem partitioning.  With these goals, we see) W
288 -41638 M
(benefits to VMS that include:) h
288 -43238 M
/Symbol F 1000 o f
(\267) h
2088 -43238 M
/Times-Roman-ISOLatin1 F 1000 o f
22.9 0 32 (the ability to take advantage of widely\255available and quickly\255evolving hardware platforms with mini\255) W
2088 -44438 M
(mal effort and in a timely manner,) h
288 -46038 M
/Symbol F 1000 o f
(\267) h
2088 -46038 M
/Times-Roman-ISOLatin1 F 1000 o f
(improved reliability and maintainability,) h
2088 -47638 M
(and) h
288 -49238 M
/Symbol F 1000 o f
(\267) h
2088 -49238 M
/Times-Roman-ISOLatin1 F 1000 o f
(increased flexibility to configure and evolve the system.) h
288 -50838 M
14.4 0 32 (In order to provide some common framework for servers, as well as to isolate servers from the underlying) W
288 -52038 M
88.5 0 32 (kernel environment, we designed a server library.  This library provides services that include basic task) W
288 -53238 M
145.8 0 32 (and thread management, synchronization mechanisms like mutexes and condition variables, error han\255) W
288 -54438 M
(dling, inter\255task communication, and memory management.) h
288 -56038 M
205.3 0 32 (Although servers perform vastly different functions, their structure exhibits a number of similarities. ) W
288 -57238 M
18.2 0 32 (Each server maintains static resources \(typically data structures\) for each client \(typically a VMS user cli\255) W
288 -58438 M
7.4 0 32 (ent\).  Servers provide communication ports to users and other servers.  One or more threads in each server) W
288 -59638 M
(process requests sent to these ports.) h
288 -61238 M
66.5 0 32 (Our model contains a number of servers that support the VMS environment.  The remainder of this sec\255) W
288 -62438 M
(tion discusses several of the basic servers and mentions a number of others servers included in the model.) h
288 -64038 M
53.0 0 32 (Most functions performed by the VMS memory manager are replaced by equivalent functions within the) W
-9000 6600 T
R

showpage
$P e

%%Page: 6 6
/$P a D
g N
0 79200 T
S
S
7200 -74700 T
N
0 G
23400 -1188 M
-7200 74700 T
R

R
S
9000 -6600 T
N
0 G
288 -1038 M
/Times-Roman-ISOLatin1 $
/Times-Roman & P
/Times-Roman-ISOLatin1 F 1000 o f
97.6 0 32 (Mach kernel.  Two memory management servers are included in our model to provide additional VMS) W
288 -2238 M
125.7 0 32 (memory management features: a file\255mapped memory manager for implementing virtual address space) W
288 -3438 M
77.8 0 32 (mapped to files, and a shared memory server to implement shared address space mappings.  The shared) W
288 -4638 M
124.7 0 32 (memory server relies on either the default Mach memory manager \(pager\) or the file\255mapped memory) W
288 -5838 M
(server to manage backing store.) h
288 -7438 M
70.0 0 32 (In our model, the Mach kernel creates a task for the VMS executive server.  The executive server is the) W
288 -8638 M
1.0 0 32 (boot server that brings up the rest of the VMS personality environment.  Once it has initialized, each VMS) W
288 -9838 M
59.1 0 32 (server registers its communication ports with the executive server.  The executive server maintains these) W
288 -11038 M
80.5 0 32 (communication ports and makes them available to requesting servers.  During normal system operation,) W
288 -12238 M
61.1 0 32 (the executive server creates VMS user clients, globally manages these processes, responds to queries for) W
288 -13438 M
75.4 0 32 (process information, and eventually deletes the user clients.  In doing so, the executive server maintains) W
288 -14638 M
(the VMS notion of jobs.) h
288 -16238 M
14.5 0 32 (The process server that manages each VMS user client provides three categories of services: system inter\255) W
288 -17438 M
(face services, API services, and process state management services.) h
288 -19038 M
/Symbol F 1000 o f
(\267) h
2088 -19038 M
/Times-Roman-ISOLatin1 F 1000 o f
17.5 0 32 (System interface services include process initialization, system access validation, loading and presen\255) W
2088 -20238 M
160.2 0 32 (tation of a selected operating system interface \(command language interpreter or shell and image) W
2088 -21438 M
(services\), and process termination.) h
288 -23038 M
/Symbol F 1000 o f
(\267) h
2088 -23038 M
/Times-Roman-ISOLatin1 F 1000 o f
(API services respond to requests from the user library on behalf of user images.) h
288 -24638 M
/Symbol F 1000 o f
(\267) h
2088 -24638 M
/Times-Roman-ISOLatin1 F 1000 o f
124.8 0 32 (Process state management includes services that maintain process attributes such as privileges and) W
2088 -25838 M
(resource limits, execution state, exceptional conditions, and user space task control.) h
288 -27438 M
89.2 0 32 (Other VMS features or subsystems that we modeled as servers include: accounting, auditing, authoriza\255) W
288 -28638 M
3.4 0 32 (tion, common event flags, device drivers, error logging, the file system, I/O services, license management,) W
288 -29838 M
37.3 0 32 (lock management, logical naming, mailboxes, queue management, record management, the security data\255) W
288 -31038 M
24.2 0 32 (base, and transaction processing services.  This is not a complete list, but is indicative of the approach we) W
288 -32238 M
(used to partition VMS.) h
288 -34988 M
/Times-Bold-ISOLatin1 $
/Times-Bold & P
/Times-Bold-ISOLatin1 F 1200 o f
(2.2.4 ) h
2988 -34988 M
(Internal Mechanisms) h
288 -37238 M
/Times-Roman-ISOLatin1 F 1000 o f
60.2 0 32 (This section explores how VMS internal mechanisms, some of which are visible to users, are handled in) W
288 -38438 M
61.3 0 32 (our model.  Certain mechanisms are no longer used within our model but are preserved for use by VMS) W
288 -39638 M
(applications \(sometimes with changes that may be visible to applications\).) h
288 -42088 M
/Times-Bold-ISOLatin1 F 1200 o f
(2.2.4.1 ) h
3888 -42088 M
(Agendas and Notices) h
288 -44138 M
/Times-Roman-ISOLatin1 F 1000 o f
66.3 0 32 (User\255invoked system services often see delays in the processing of requests and usually have special se\255) W
288 -45338 M
166.1 0 32 (mantics associated with the completion of these requests.  In order to implement such user\255requested) W
288 -46538 M
49.7 0 32 (VMS actions in an architecture\255independent manner and to keep VMS server interfaces simple, we use a) W
288 -47738 M
30.9 0 32 (mechanism consisting of agendas and notices.  Agendas and notices provide a single mechanism for stor\255) W
288 -48938 M
32.3 0 32 (ing and processing the semantics of actions to be taken when a service request completes.  These actions,) W
288 -50138 M
87.5 0 32 (like setting an event flag upon completion of an I/O operation, remain local to user clients.  An agenda) W
288 -51338 M
65.5 0 32 (structure is created by the client to remember the completion semantics associated with an operation.  A) W
288 -52538 M
79.7 0 32 (unique identifier associated with this agenda structure is passed as part of the server request.  When the) W
288 -53738 M
82.9 0 32 (server completes the requested operation, a notice message including the agenda structure identifier and) W
288 -54938 M
63.4 0 32 (any request\255specific status or data is sent back to the client for processing.  Pre\255defined agendas and no\255) W
288 -56138 M
(tice messages are also used to handle unsolicited operations, like a hardware exception.) h
288 -58588 M
/Times-Bold-ISOLatin1 F 1200 o f
(2.2.4.2 ) h
3888 -58588 M
(Asynchronous System Traps \(ASTs\)) h
288 -60638 M
/Times-Roman-ISOLatin1 F 1000 o f
51.2 0 32 (An AST is a mechanism that enables an event to alter the flow of control in a VMS process.  Users may) W
288 -61838 M
61.8 0 32 (request AST notification when using VMS system services, and VMS itself requests ASTs as a result of) W
288 -63038 M
48.5 0 32 (some operations.  Our model replaces the use of ASTs within VMS by notices and agendas, while main\255) W
288 -64238 M
(taining the AST mechanism for user images.) h
-9000 6600 T
R

showpage
$P e

%%Page: 7 7
/$P a D
g N
0 79200 T
S
S
7200 -74700 T
N
0 G
23400 -1188 M
-7200 74700 T
R

R
S
9000 -6600 T
N
0 G
288 -1038 M
/Times-Roman-ISOLatin1 $
/Times-Roman & P
/Times-Roman-ISOLatin1 F 1000 o f
58.7 0 32 (When a user image requests a service that will eventually queue an AST, an agenda structure containing) W
288 -2238 M
123.0 0 32 (the AST function address and parameter is created.  When the service request has completed, a notice) W
288 -3438 M
74.2 0 32 (message is issued back to the user space task.  A thread within the user library suspends the user image) W
288 -4638 M
5.5 0 32 (thread, redirects it \(by pushing a call frame on the stack\) to an AST dispatch routine, and then resumes the) W
288 -5838 M
56.6 0 32 (user image thread.  This dispatch routine calls the user image's AST routine with its associated AST pa\255) W
288 -7038 M
59.8 0 32 (rameter.  When the user's AST routine completes, a message is sent back to the user library thread indi\255) W
288 -8238 M
73.3 0 32 (cating AST completion.  AST completion indicates that subsequent ASTs can now be delivered.  \(VMS) W
288 -9438 M
12.3 0 32 (dictates that only a single user AST may be active at any one time.\)  Note that the chain of stack frames is) W
288 -10638 M
(not guaranteed to be the same as in the current VMS implementation.) h
288 -12238 M
20.3 0 32 (VMS servers use agendas and notices to mimic the function of ASTs.  Servers maintain agenda structures) W
288 -13438 M
1.4 0 32 (to keep track of asynchronous operations currently in progress.  Upon receiving a notice message, a thread) W
288 -14638 M
(within the server executes the functions specified by the agenda.) h
288 -16238 M
80.8 0 32 (We also looked into the possibility of problems that could result from deviating from the existing VMS) W
288 -17438 M
63.2 0 32 (AST implementation.  One of these deviations is the lack of access mode prioritization of ASTs and an\255) W
288 -18638 M
16.9 0 32 (other is execution of code \(usually privileged\) in user address space.  Our investigations uncovered only a) W
288 -19838 M
(few cases that needed to be addressed, all of which could be handled using Mach\255provided functions.) h
288 -22288 M
/Times-Bold-ISOLatin1 $
/Times-Bold & P
/Times-Bold-ISOLatin1 F 1200 o f
(2.2.4.3 ) h
3888 -22288 M
(Exception and Condition Handling) h
288 -24338 M
/Times-Roman-ISOLatin1 F 1000 o f
71.3 0 32 (In the Mach exception handling facility [3] there is machine\255dependent and machine\255independent kernel) W
288 -25538 M
59.7 0 32 (software to deal with exceptions.  Machine\255dependent software implements exception dispatch and serv\255) W
288 -26738 M
64.5 0 32 (icing that is specific to each hardware platform.  The exception servicing code packages the information) W
288 -27938 M
22.9 0 32 (for processing by machine\255independent software.  This processing often consists of sending the exception) W
288 -29138 M
88.6 0 32 (out of the kernel for handling and then following up on the results of that handling.  This model works) W
288 -30338 M
29.1 0 32 (well for handling VMS exceptions and conditions.  When a user image exception occurs, a remote proce\255) W
288 -31538 M
169.8 0 32 (dure call \(RPC\) message is sent to the process state management port within the appropriate process) W
288 -32738 M
27.5 0 32 (server.  Processing of a user image exception causes the user image thread to be suspended and an IPC to) W
288 -33938 M
44.9 0 32 (be sent to the user library thread to initiate a search for a condition handler.  While the condition handler) W
288 -35138 M
4.7 0 32 (search proceeds in the context of the user space task through user library thread actions, the process server) W
288 -36338 M
37.5 0 32 (returns from the RPC.  Note that the chain of stack frames is not guaranteed to be the same as in the cur\255) W
288 -37538 M
20.8 0 32 (rent VMS implementation.  If the search is unsuccessful, or if all handlers resignal, the user library thread) W
288 -38738 M
(issues an IPC back to the process server indicating that the condition was not handled successfully.) h
288 -41188 M
/Times-Bold-ISOLatin1 F 1200 o f
(2.2.4.4 ) h
3888 -41188 M
(Interrupts, IPLs, and Spinlocks) h
288 -43238 M
/Times-Roman-ISOLatin1 F 1000 o f
62.2 0 32 (In VMS, interrupts \(like exceptions\) are events that require the execution of software other than the cur\255) W
288 -44438 M
131.2 0 32 (rent thread of execution.  Unlike exceptions, however, interrupts are unrelated to the current thread of) W
288 -45638 M
67.4 0 32 (execution and are asynchronous to it.  To arbitrate among interrupt requests, each request has an associ\255) W
288 -46838 M
124.6 0 32 (ated interrupt priority level \(IPL\).  When an interrupt is granted, processor IPL is raised to that of the) W
288 -48038 M
73.6 0 32 (interrupt request and the interrupt is handled by a service routine.  Interrupt requests with an IPL that is) W
288 -49238 M
(the same or lower than the current processor IPL are blocked.) h
288 -50838 M
44.3 0 32 (IPL applies separately to each processor in a multi\255processor configuration.  When symmetric multiproc\255) W
288 -52038 M
58.9 0 32 (essing \(SMP\) was implemented in VMS, spinlocks were introduced to synchronize access to shared ker\255) W
288 -53238 M
4.6 0 32 (nel resources.  To prevent deadlock, spinlocks are ranked according to their associated IPL.  A thread may) W
288 -54438 M
(not acquire a spinlock with an equal or lower ranking than any spinlock currently held by the thread.) h
288 -56038 M
47.6 0 32 (In our model, the server library provides low\255level primitives for manipulating threads of control.  These) W
288 -57238 M
25.1 0 32 (primitives include forking and joining of threads, protection of critical regions using mutex variables, and) W
288 -58438 M
110.5 0 32 (synchronization by means of condition variables.  Spinlocks are replaced by mutexes that are similarly) W
288 -59638 M
81.2 0 32 (ranked.  VMS server threads may acquire any mutex desired, but all mutex acquisition must be done in) W
288 -60838 M
72.9 0 32 (order of increasing rank.  To acquire a mutex of lower rank, a server thread must first release all higher) W
288 -62038 M
51.3 0 32 (ranking mutexes.  The scheduling effects of VMS spinlocks are not maintained by VMS server mutexes. ) W
288 -63238 M
64.5 0 32 (Although we have not investigated these effects, a similar change occurred when BSD UNIX was trans\255) W
-9000 6600 T
R

showpage
$P e

%%Page: 8 8
/$P a D
g N
0 79200 T
S
S
7200 -74700 T
N
0 G
23400 -1188 M
-7200 74700 T
R

R
S
9000 -6600 T
N
0 G
288 -1038 M
/Times-Roman-ISOLatin1 $
/Times-Roman & P
/Times-Roman-ISOLatin1 F 1000 o f
46.6 0 32 (formed into a single server on Mach and no noticeable effects were observed.  In summary, we rely on a) W
288 -2238 M
(server mutex acquisition protocol to achieve the required synchronization.) h
288 -3838 M
55.4 0 32 (Hardware interrupts related to I/O devices are caught and serviced in the machine\255dependent code of the) W
288 -5038 M
100.8 0 32 (Mach kernel.  This is similar to interrupt\255handling code currently in VMS.  Where in the current VMS) W
288 -6238 M
242.3 0 32 (implementation the interrupt handler causes further processing by posting a lower\255level interrupt to) W
288 -7438 M
33.9 0 32 (awaken a VMS fork process, in our model further processing is caused by the interrupt handler sending a) W
288 -8638 M
(message to the appropriate device driver server.) h
288 -10238 M
2.3 0 32 (VMS threads of execution that are started as a result of software interrupts do not exist in our model.  This) W
288 -11438 M
(activity is mimicked by VMS server threads and server library functions in the model.) h
288 -14488 M
/Times-Bold-ISOLatin1 $
/Times-Bold & P
/Times-Bold-ISOLatin1 F 1200 o f
(3 ) h
1188 -14488 M
(VMS Prototype Implementation) h
288 -16738 M
/Times-Roman-ISOLatin1 F 1000 o f
118.2 0 32 (The VMS\255on\255Mach prototype is a subset implementation of our model.  During its development many) W
288 -17938 M
98.4 0 32 (design choices were made to facilitate its implementation.  At present, our prototype is capable of sup\255) W
288 -19138 M
54.8 0 32 (porting multiple VMS processes and running several existing VMS images.  In addition to the many test) W
288 -20338 M
128.9 0 32 (programs we wrote during its development, the prototype successfully executes the following standard) W
288 -21538 M
(VMS images without modification:) h
288 -23138 M
/Symbol F 1000 o f
(\267) h
2088 -23138 M
/Times-Roman-ISOLatin1 F 1000 o f
(CREATE, used to create a text file,) h
288 -24738 M
/Symbol F 1000 o f
(\267) h
2088 -24738 M
/Times-Roman-ISOLatin1 F 1000 o f
(COPY, to make a copy of a file,) h
288 -26338 M
/Symbol F 1000 o f
(\267) h
2088 -26338 M
/Times-Roman-ISOLatin1 F 1000 o f
(TYPE, to list the contents of a file,) h
288 -27938 M
/Symbol F 1000 o f
(\267) h
2088 -27938 M
/Times-Roman-ISOLatin1 F 1000 o f
(SEARCH, to search for a string within a file,) h
288 -29538 M
/Symbol F 1000 o f
(\267) h
2088 -29538 M
/Times-Roman-ISOLatin1 F 1000 o f
(DIFF, to compare two files and report differences,) h
2088 -31138 M
(and) h
288 -32738 M
/Symbol F 1000 o f
(\267) h
2088 -32738 M
/Times-Roman-ISOLatin1 F 1000 o f
(EDT, to perform line\255mode editing on a file.) h
288 -34338 M
118.6 0 32 (Figure ) W
118.6 0 32 (2 at the end of this section illustrates a sample session using the prototype, the development of) W
288 -35538 M
(which is discussed in greater detail in the following sections.) h
288 -38588 M
/Times-Bold-ISOLatin1 F 1200 o f
(3.1 ) h
2088 -38588 M
(Approach and Objectives) h
288 -40838 M
/Times-Roman-ISOLatin1 F 1000 o f
59.6 0 32 (Early in the project we decided that we would use a VAX platform to produce the prototype.  We chose) W
288 -42038 M
20.2 0 32 (the VAXstation 3100\25548 system after discussions with the CMU Mach team, who provided us with a ver\255) W
288 -43238 M
90.1 0 32 (sion of Mach 3.0 on that system.  We decided that this choice would best help us in demonstrating our) W
288 -44438 M
126.3 0 32 (model as it would allow for the execution of existing VAX/VMS non\255privileged \(user\) binary images. ) W
288 -45638 M
48.1 0 32 (We considered using a MIPS\255based DECstation to demonstrate architectural independence for our proto\255) W
288 -46838 M
27.3 0 32 (type.  This approach was rejected, however, as it would not have allowed us to use existing VMS sources) W
288 -48038 M
(or images.) h
288 -49638 M
36.7 0 32 (We also wanted to take advantage of existing VMS and UNIX tools as much as possible, rather than cre\255) W
288 -50838 M
182.9 0 32 (ate a new operating system and software development environment from scratch.  This resulted in a) W
288 -52038 M
154.9 0 32 (VMS\255on\255Mach prototype that incorporates a set of servers into the existing Mach 3.0 based 4.3 BSD) W
288 -53238 M
119.3 0 32 (UNIX\255compatible single\255server system [6].  We built VMS servers as separate Mach UNIX processes,) W
288 -54438 M
39.2 0 32 (allowing us to take advantage of Mach threads and the BSD server.  These VMS servers are for the most) W
288 -55638 M
56.8 0 32 (part new C code.  Our decision to rewrite versus rework existing code revolved around how expedient it) W
288 -56838 M
51.7 0 32 (was to understand and rewrite the code, while considering how much effort was required to utilize exist\255) W
288 -58038 M
89.0 0 32 (ing sources.  For most of the prototype work done to\255date, rewriting was more expedient.  This may or) W
288 -59238 M
88.1 0 32 (may not be true in a more complete prototype that includes, for example, the VMS record management) W
288 -60438 M
57.9 0 32 (and file systems.  Our prototype implements only a small subset of the existing RMS interface on top of) W
288 -61638 M
(the UNIX file system \(UFS\).) h
288 -63238 M
-9000 6600 T
R

showpage
$P e

%%Page: 9 9
/$P a D
g N
0 79200 T
S
S
7200 -74700 T
N
0 G
23400 -1188 M
-7200 74700 T
R

R
S
9000 -6600 T
N
0 G
288 -1038 M
/Times-Roman-ISOLatin1 $
/Times-Roman & P
/Times-Roman-ISOLatin1 F 1000 o f
(Our objective for the prototype stage of the project was to implement a subset VMS environment that:) h
288 -2638 M
/Symbol F 1000 o f
(\267) h
2088 -2638 M
/Times-Roman-ISOLatin1 F 1000 o f
(involves multiple server tasks,) h
288 -4238 M
/Symbol F 1000 o f
(\267) h
2088 -4238 M
/Times-Roman-ISOLatin1 F 1000 o f
(isolates platform dependencies,) h
2088 -5838 M
(and) h
288 -7438 M
/Symbol F 1000 o f
(\267) h
2088 -7438 M
/Times-Roman-ISOLatin1 F 1000 o f
(allows for some existing VMS non\255privileged \(user\) binary images to be executed.) h
288 -9038 M
64.5 0 32 (There were two phases to the prototype effort: a framework building phase, during which the infrastruc\255) W
288 -10238 M
10.7 0 32 (ture needed to execute simple VMS images was created, and an environment building phase, which added) W
288 -11438 M
24.0 0 32 (VMS services needed to execute more complex images.  These phases are described in the following sec\255) W
288 -12638 M
(tions.) h
288 -15688 M
/Times-Bold-ISOLatin1 $
/Times-Bold & P
/Times-Bold-ISOLatin1 F 1200 o f
(3.2 ) h
2088 -15688 M
(Framework Building Phase) h
288 -17938 M
/Times-Roman-ISOLatin1 F 1000 o f
104.4 0 32 (Our goal for this phase, which lasted about three months, was to execute a simple VMS image.  Work) W
288 -19138 M
66.9 0 32 (during this phase of the prototype effort concentrated on setting up the development environment, creat\255) W
288 -20338 M
(ing a server library, and building an implementation of the process server.) h
288 -21938 M
37.4 0 32 (Our development environment is structured as a set of hierarchical directories which reflect the organiza\255) W
288 -23138 M
16.3 0 32 (tion of the model.  This structure is deliberate and designed to prevent unexpected cross\255dependencies be\255) W
288 -24338 M
94.0 0 32 (tween the various components of the prototype.  Because our software is designed using a client\255server) W
288 -25538 M
69.2 0 32 (approach, there are many cross\255component dependencies.  This led us to develop a three\255phase software) W
288 -26738 M
86.9 0 32 (build process.  The first phase, interface export, descends the hierarchy generating and exporting public) W
288 -27938 M
161.0 0 32 (interface files \() W
/Times-Italic-ISOLatin1 $
/Times-Italic & P
/Times-Italic-ISOLatin1 F 1000 o f
161.0 0 32 (e.g., ) W
/Times-Roman-ISOLatin1 F 1000 o f
161.0 0 32 (generated IPC/RPC definitions and routines, and server\255specific service definition) W
288 -29138 M
43.9 0 32 (files\).  The second phase, object library generation, also descends the hierarchy, this time building object) W
288 -30338 M
127.5 0 32 (libraries and exporting these libraries up the hierarchy.  The final phase, image generation, creates the) W
288 -31538 M
(various servers by linking the required libraries for each image.) h
288 -33138 M
118.8 0 32 (During early design discussions we investigated an optimization that would combine or bundle servers) W
288 -34338 M
2.8 0 32 (together into a single image.  This optimization would allow for easier development and testing while pro\255) W
288 -35538 M
80.6 0 32 (viding optimized performance.  These discussions evolved into a design philosophy that allows \(in fact,) W
288 -36738 M
6.6 0 32 (requires\) servers to be developed and tested independently of other servers, but permits these servers to be) W
288 -37938 M
106.9 0 32 (bundled into a single image at image generation time.  This design philosophy is incorporated into our) W
288 -39138 M
24.5 0 32 (vbundling tool.  The vbundling tool reads a file that describes all of the servers in the prototype and all of) W
288 -40338 M
62.4 0 32 (the server images that are to be generated.  This tool allows us to alter the bundling configuration of the) W
288 -41538 M
159.0 0 32 (prototype by modifying a single file \(the vbundling script\) and rebuilding the prototype.  Note that a) W
288 -42738 M
(change in the vbundling description file results in only the relinking of server images.) h
288 -44338 M
24.1 0 32 (The first component of the prototype to be developed was the server library.  Although our prototype was) W
288 -45538 M
22.5 0 32 (developed on Mach 3.0 using Mach UNIX facilities, we decided to hide as many of the underlying kernel) W
288 -46738 M
36.3 0 32 (and UNIX services as possible.  This means that, in general, any Mach or UNIX service used by a server) W
288 -47938 M
97.6 0 32 (is provided by the server library.  In some cases, however, it was not practical to build a server library) W
288 -49138 M
2.5 0 32 (interface to a Mach or UNIX service due to its use in a server as an expediency.  For example, the authori\255) W
288 -50338 M
(zation server uses the getpwent\(\) UNIX service directly to scan the /etc/passwd file.) h
288 -51938 M
116.8 0 32 (Initially, we defined three areas that the server library needed to address: memory management, server) W
288 -53138 M
24.3 0 32 (threads, and kernel task and thread management.  Since each server is a UNIX process, the memory man\255) W
288 -54338 M
20.2 0 32 (agement services are implemented using the malloc\(\) and free\(\) functions.  Server threads \(sthreads\) are a) W
288 -55538 M
15.2 0 32 (mechanism that allows servers to create multiple logical threads that either share or map directly to kernel) W
288 -56738 M
45.5 0 32 (threads.  Since sthreads are close in function to the cthreads package [10] provided with Mach, we chose) W
288 -57938 M
36.0 0 32 (to implement them as a layer on top of cthreads.  Since our design has VMS images executing within the) W
288 -59138 M
3.1 0 32 (context of pure Mach tasks \() W
/Times-Italic-ISOLatin1 F 1000 o f
3.1 0 32 (i.e.,) W
/Times-Roman-ISOLatin1 F 1000 o f
3.1 0 32 ( not UNIX processes\), we provided services in the server library for creat\255) W
288 -60338 M
3.3 0 32 (ing and managing Mach tasks and threads.  To support architectural independence, we added functions for) W
288 -61538 M
55.1 0 32 (managing user image call frames that are used to build initial as well as interrupt call frames \() W
/Times-Italic-ISOLatin1 F 1000 o f
55.1 0 32 (e.g., ) W
/Times-Roman-ISOLatin1 F 1000 o f
55.1 0 32 (VMS) W
288 -62738 M
(ASTs or UNIX signals\).) h
-9000 6600 T
R

showpage
$P e

%%Page: 10 10
/$P a D
g N
0 79200 T
S
S
7200 -74700 T
N
0 G
23400 -1188 M
-7200 74700 T
R

R
S
9000 -6600 T
N
0 G
288 -1038 M
/Times-Roman-ISOLatin1 $
/Times-Roman & P
/Times-Roman-ISOLatin1 F 1000 o f
3.3 0 32 (Our model defines several generic services that are used in the management of VMS processes \() W
/Times-Italic-ISOLatin1 $
/Times-Italic & P
/Times-Italic-ISOLatin1 F 1000 o f
3.3 0 32 (e.g.) W
/Times-Roman-ISOLatin1 F 1000 o f
3.3 0 32 (, proc\255) W
288 -2238 M
9.1 0 32 (ess creation and termination\).  These services are defined as subsystems using the Mach Interface Genera\255) W
288 -3438 M
31.0 0 32 (tor \(MIG\) [10], which creates client\255side and server\255side bindings for each service as well as a subsystem) W
288 -4638 M
167.8 0 32 (dispatch routine.  Subsystem dispatch routines are responsible for demultiplexing the set of IPC/RPC) W
288 -5838 M
73.1 0 32 (messages used by the subsystem into calls upon the appropriate server routines.  Due to our server bun\255) W
288 -7038 M
70.9 0 32 (dling methodology, each server's server\255side binding for a particular routine must be uniquely named in) W
288 -8238 M
50.6 0 32 (order to avoid name conflicts when bundling several servers into a single image.  As a result, we needed) W
288 -9438 M
30.6 0 32 (to define services that had only a single client\255side binding but multiple server\255side bindings.  Our design) W
288 -10638 M
25.4 0 32 (also allows IPC/RPC service messages defined by different subsystems to be received and processed on a) W
288 -11838 M
87.8 0 32 (common port.  Because of this, we could not use the MIG\255provided library function to receive and dis\255) W
288 -13038 M
55.1 0 32 (patch messages to their service routines.  To solve this problem, we implemented a server library object,) W
288 -14238 M
84.6 0 32 (the demux, which allows several subsystem dispatch routines to be grouped together.  We then added a) W
288 -15438 M
140.5 0 32 (server library function that receives and processes the messages using the dispatch routines associated) W
288 -16638 M
(with a demux.  This function optionally creates new threads for the processing of each received message.) h
288 -18238 M
39.6 0 32 (Support of VMS image activation was initially developed in C on a VMS system, where we were able to) W
288 -19438 M
80.1 0 32 (verify the actions of our implementation with information obtained using the VMS ANALYZE/IMAGE) W
288 -20638 M
30.3 0 32 (program.  Once the image activation code was debugged, we moved it over to our prototype.  As an opti\255) W
288 -21838 M
45.5 0 32 (mization, we load and prepare the user image within the process server's address space, and make use of) W
288 -23038 M
50.2 0 32 (Mach memory inheritance to set up the user image address space.  This presented us with two problems:) W
288 -24238 M
89.2 0 32 (conflicts in the base addresses of the process server and user image, and conflicts in the location of the) W
288 -25438 M
53.6 0 32 (VMS transfer vector and the Mach UNIX emulator.  VMS images have a default base address that over\255) W
288 -26638 M
47.6 0 32 (laps addresses in use by the process server.  As mentioned earlier, VMS uses a transfer vector to process) W
288 -27838 M
53.5 0 32 (system services.  The location of the VMS transfer vector overlaps the Mach UNIX emulator that is part) W
288 -29038 M
41.9 0 32 (of every Mach UNIX process.  We solved these problems by using existing VMS tools.  VMS compilers) W
288 -30238 M
51.9 0 32 (generate position\255independent code.  This made it possible for us to use a VMS linker option to alter the) W
288 -31438 M
74.8 0 32 (base address of the image \(thereby moving it out of the way of the process server\).  We also created an) W
288 -32638 M
53.7 0 32 (alternate version of the system service transfer vector at a different address.  This allowed us to generate) W
288 -33838 M
109.1 0 32 (images that do not overlap the process server or the Mach UNIX emulator, and that are essentially the) W
288 -35038 M
207.8 0 32 (original user images.  These changes allow us to load and prepare VMS images within the process) W
288 -36238 M
(server's address space.) h
288 -37838 M
116.8 0 32 (Our next step was to build a framework for running VMS images.  Our first user library function was) W
288 -39038 M
98.9 0 32 (implemented to support the starting of a VMS image.  This function is called with the image's starting) W
288 -40238 M
25.1 0 32 (address information and is responsible for calling the image's main routine.  Image completion, including) W
288 -41438 M
42.8 0 32 (any final status value, is signaled to the process server by the user library when the image's main routine) W
288 -42638 M
30.4 0 32 (returns or the $EXIT system service is invoked.  Our initial VMS images were run by creating an sthread) W
288 -43838 M
8.9 0 32 (within the process server that executed the user library start function.  Our next step was to logically sepa\255) W
288 -45038 M
150.6 0 32 (rate this mechanism from the process server by using IPC for synchronization.  Finally, we created a) W
288 -46238 M
74.3 0 32 (Mach task and thread to run the VMS image in a separate address space.  This last step \(separate tasks\)) W
288 -47438 M
(was particularly difficult as we did not have a debugger that operated on pure Mach tasks.) h
288 -50488 M
/Times-Bold-ISOLatin1 $
/Times-Bold & P
/Times-Bold-ISOLatin1 F 1200 o f
(3.3 ) h
2088 -50488 M
(Environment Building Phase) h
288 -52738 M
/Times-Roman-ISOLatin1 F 1000 o f
39.4 0 32 (Our goals for this phase, which lasted about three months, were to expand the prototype and demonstrate) W
288 -53938 M
118.6 0 32 (a subset VMS environment that allowed users to login and logout, as well as execute some VMS pro\255) W
288 -55138 M
(grams.  These programs included variations on ) h
/Times-Italic-ISOLatin1 F 1000 o f
(hello world) h
/Times-Roman-ISOLatin1 F 1000 o f
( and existing VMS utilities.) h
288 -56738 M
67.9 0 32 (The Digital Command Language \(DCL\) is the primary command language for VMS.  DCL differs from) W
288 -57938 M
58.1 0 32 (other command languages in that the syntax for all commands is described in a set of files that are com\255) W
288 -59138 M
27.1 0 32 (piled into the special VMS image known as DCLTABLES.  Each DCL command either invokes an inter\255) W
288 -60338 M
53.6 0 32 (nal DCL function or executes a specific VMS program.  As we did with image support, we developed C) W
288 -61538 M
9.4 0 32 (code on VMS that read and parsed DCL commands.  When our code was ready, we moved it to the proto\255) W
288 -62738 M
61.9 0 32 (type and integrated it into the process server.  This required modifications to the existing image services) W
288 -63938 M
(to support reading the DCLTABLES image.) h
-9000 6600 T
R

showpage
$P e

%%Page: 11 11
/$P a D
g N
0 79200 T
S
S
7200 -74700 T
N
0 G
23400 -1188 M
-7200 74700 T
R

R
S
9000 -6600 T
N
0 G
288 -1038 M
/Times-Roman-ISOLatin1 $
/Times-Roman & P
/Times-Roman-ISOLatin1 F 1000 o f
20.3 0 32 (We also developed a simple authorization server that validates usernames and username/password combi\255) W
288 -2238 M
1.3 0 32 (nations against the UNIX /etc/passwd authorization file.  The process server was modified to request login) W
288 -3438 M
(information and validate the login request by using services provided by the authorization server.) h
288 -5038 M
52.1 0 32 (At this point of the prototype we had two servers: the process server and the authorization server.  Com\255) W
288 -6238 M
176.1 0 32 (munication ports for these servers were managed by the system name server \(snames\) provided with) W
288 -7438 M
105.4 0 32 (Mach UNIX.  Recognizing that we would soon start building additional servers, we developed a set of) W
288 -8638 M
138.3 0 32 (port name services within the server library to provide port registration and look\255up functions.  These) W
288 -9838 M
32.7 0 32 (services, which were initially developed as an interface to the system name server, were later modified to) W
288 -11038 M
(use the executive server as the prototype's port name server.) h
288 -12638 M
51.5 0 32 (The executive server was developed with the primary intention of managing servers and processes in the) W
288 -13838 M
36.3 0 32 (prototype.  Initially, the executive server acted only as a name server which processed server and process) W
288 -15038 M
110.5 0 32 (registration requests and converted port name look\255up requests into authorized ports.  As the prototype) W
288 -16238 M
128.5 0 32 (evolved, the executive server was enhanced to support system and process information queries, and to) W
288 -17438 M
16.3 0 32 (read a configuration file containing start\255up information.  Port name services are provided to other servers) W
288 -18638 M
106.7 0 32 (by the server library \(which handles communication with the executive server\).  Information needed to) W
288 -19838 M
27.3 0 32 (process system queries is defined in the executive server's configuration file, which also contains a list of) W
288 -21038 M
37.9 0 32 (server images that should be automatically started by the executive server.  The executive server uses the) W
288 -22238 M
68.3 0 32 (UNIX fork\(\) and exec\(\) functions to start other servers.  The executive server supports process informa\255) W
288 -23438 M
98.6 0 32 (tion queries by forwarding these queries to the appropriate process server.  This implementation allows) W
288 -24638 M
(cross\255process queries to be directed to individual process servers in the prototype.) h
288 -26238 M
126.3 0 32 (As the number of servers increased, we found it increasingly difficult to debug the prototype.  Conse\255) W
288 -27438 M
68.2 0 32 (quently, we added a debug facility in the process server.  Ideally the debug facility should be associated) W
288 -28638 M
122.2 0 32 (with the executive server or system console, but since the process server was the only server that per\255) W
288 -29838 M
35.1 0 32 (formed terminal input, it was the obvious choice.  Each server was modified to contain an array of debug) W
288 -31038 M
113.7 0 32 (flags that could be enabled or disabled via special IPC calls.  A command line interface was built that) W
288 -32238 M
11.8 0 32 (allows any process server to communicate with a specific server and enable or disable any combination of) W
288 -33438 M
(debug switches.  These on\255the\255fly debug switches have proven quite valuable in debugging the prototype.) h
288 -35038 M
97.7 0 32 (File and terminal services are provided by the I/O server.  Given our time and resource constraints, we) W
288 -36238 M
59.5 0 32 (first identified the minimum set of services we needed.  The I/O server provides disk I/O that is used by) W
288 -37438 M
92.1 0 32 (image activation, the file\255mapped memory server, and all file and data operations required by the VMS) W
288 -38638 M
55.1 0 32 (record management \(RMS\) services implemented in the user library \(open, close, read, write, and flush\). ) W
288 -39838 M
96.6 0 32 (It additionally performs all terminal input and output for the prototype.  The I/O server is implemented) W
288 -41038 M
4.8 0 32 (using the UNIX file system services provided in the Mach UNIX environment.  Its public interfaces, how\255) W
288 -42238 M
71.0 0 32 (ever, provide services that are more generic than the existing UNIX interfaces, and are used to facilitate) W
288 -43438 M
48.8 0 32 (the implementation of RMS in the user library.  All reads and writes are currently limited to a maximum) W
288 -44638 M
4.6 0 32 (of 512 bytes per operation and are implemented using the UNIX read\(\) and write\(\) functions \() W
/Times-Italic-ISOLatin1 $
/Times-Italic & P
/Times-Italic-ISOLatin1 F 1000 o f
4.6 0 32 (i.e.,) W
/Times-Roman-ISOLatin1 F 1000 o f
4.6 0 32 ( they are) W
288 -45838 M
(treated as raw reads and writes\).) h
288 -47438 M
57.8 0 32 (VMS uses the notion of section files to refer to disk files that are mapped into memory.  The most com\255) W
288 -48638 M
12.4 0 32 (mon use of section files by VMS is image activation.  Each VMS image contains multiple image sections,) W
288 -49838 M
82.9 0 32 (each of which is a series of 512\255byte blocks that are mapped to various locations in memory.  The file\255) W
288 -51038 M
151.2 0 32 (mapped memory server implements section files for the prototype.  The process server communicates) W
288 -52238 M
61.9 0 32 (with the file\255mapped memory server to initialize mappings for various portions of image files.  The file\255) W
288 -53438 M
126.6 0 32 (mapped memory server creates memory objects to represent these mappings, and is the Mach external) W
288 -54638 M
(pager for the objects.) h
288 -56238 M
67.9 0 32 (As our prototype development continued, we were able to optimize many user services by moving them) W
288 -57438 M
6.2 0 32 (from the process server into the user library \() W
/Times-Italic-ISOLatin1 F 1000 o f
6.2 0 32 (e.g.,) W
/Times-Roman-ISOLatin1 F 1000 o f
6.2 0 32 ( condition handler search and AST processing\).  This led) W
288 -58638 M
18.2 0 32 (us to revise our model and design of the user library.  In the new design, the user library contains a thread) W
288 -59838 M
100.4 0 32 (which acts as the first\255line manager for the user image.  This thread receives and processes completion) W
288 -61038 M
(notices from other servers and initiates condition handler searches and AST delivery.) h
288 -62638 M
288 -64238 M
-9000 6600 T
R

showpage
$P e

%%Page: 12 12
/$P a D
g N
0 79200 T
S
S
7200 -74700 T
N
0 G
23400 -1188 M
-7200 74700 T
R

R
S
9000 -6600 T
N
0 G
288 -1038 M
/Times-Roman-ISOLatin1 $
/Times-Roman & P
/Times-Roman-ISOLatin1 F 1000 o f
37.3 0 32 (When the user address space is created to run a user image, the user library thread is started.  This thread) W
288 -2238 M
103.1 0 32 (initializes the user library and informs the process server when initialization is complete by returning a) W
288 -3438 M
67.6 0 32 (port which the process server can use to communicate with the user library thread.  Upon receipt of this) W
288 -4638 M
32.3 0 32 (user library port, the process server starts the user image thread, which is responsible for calling the main) W
288 -5838 M
118.3 0 32 (routine of the image.  When the user image exits, an image completion message is sent to the process) W
288 -7038 M
6.5 0 32 (server, notifying it to terminate the user space task and resume processing in the command language inter\255) W
288 -8238 M
10.9 0 32 (preter \(CLI\).  Note that if either the user image thread or user library thread incurs an exception that is not) W
288 -9438 M
(successfully handled, the process server terminates the user space task and resumes processing in the CLI.) h
288 -11038 M
33.4 0 32 (VMS uses logical names quite extensively.  Logical names provide a mapping of a string to zero or more) W
288 -12238 M
27.5 0 32 (replacement strings.  They are grouped into tables which are either private to a process or shared within a) W
288 -13438 M
20.8 0 32 (process tree, a login group, or across the system.  Note that VMS provides extensive mechanisms for pro\255) W
288 -14638 M
13.4 0 32 (tecting and authorizing access to shared logical name tables.  A simplified logical name server was imple\255) W
288 -15838 M
72.9 0 32 (mented in the prototype.  This server implemented a single logical name table that is unprotected and is) W
288 -17038 M
23.9 0 32 (shared among all servers and processes.  The logical name server supports a configuration file that allows) W
288 -18238 M
84.6 0 32 (for the definition of names.  RPC services are provided for requesting logical name translations.  These) W
288 -19438 M
(services are used by the process server and user library to resolve VMS file names.) h
288 -21038 M
(In summary, our prototype implements the following components:) h
288 -22638 M
/Symbol F 1000 o f
(\267) h
2088 -22638 M
/Times-Roman-ISOLatin1 F 1000 o f
(a user library that implements the VMS transfer vector and system services,) h
288 -24238 M
/Symbol F 1000 o f
(\267) h
2088 -24238 M
/Times-Roman-ISOLatin1 F 1000 o f
(a server library that isolates kernel primitives from the servers,) h
288 -25838 M
/Symbol F 1000 o f
(\267) h
2088 -25838 M
/Times-Roman-ISOLatin1 F 1000 o f
(an executive server that provides server and process registration and look\255up services,) h
288 -27438 M
/Symbol F 1000 o f
(\267) h
2088 -27438 M
/Times-Roman-ISOLatin1 F 1000 o f
(a process server that implements DCL and manages the user space task,) h
288 -29038 M
/Symbol F 1000 o f
(\267) h
2088 -29038 M
/Times-Roman-ISOLatin1 F 1000 o f
(a file\255mapped memory server that provides support for section files,) h
288 -30638 M
/Symbol F 1000 o f
(\267) h
2088 -30638 M
/Times-Roman-ISOLatin1 F 1000 o f
(an I/O server that provides access to terminals and files,) h
288 -32238 M
/Symbol F 1000 o f
(\267) h
2088 -32238 M
/Times-Roman-ISOLatin1 F 1000 o f
(an authorization server that validates login requests,) h
288 -33838 M
/Symbol F 1000 o f
(\267) h
2088 -33838 M
/Times-Roman-ISOLatin1 F 1000 o f
(a logical name server that provides name translation services,) h
2088 -35438 M
(and) h
288 -37038 M
/Symbol F 1000 o f
(\267) h
2088 -37038 M
/Times-Roman-ISOLatin1 F 1000 o f
(a common event flag server that provides multi\255process synchronization services.) h
288 -38638 M
55.1 0 32 (Figure ) W
55.1 0 32 (2 on the next page shows a sample prototype session that illustrates the use of the process server,) W
288 -39838 M
129.4 0 32 (the executive server, the authorization server,  the I/O server, the file\255mapped memory server, and the) W
288 -41038 M
(logical name server.) h
-9000 6600 T
R

showpage
$P e

%%Page: 13 13
/$P a D
g N
0 79200 T
S
S
7200 -74700 T
N
0 G
23400 -1188 M
-7200 74700 T
R

R
S
9000 -6600 T
N
0 G
288 -1038 M
10467 -42482 M
/Times-Bold-ISOLatin1 $
/Times-Bold & P
/Times-Bold-ISOLatin1 F 1200 o f
(Figure 2   ) h
15667 -42482 M
(VMS\255on\255Mach Prototype Session) h
288 -46582 M
(4 ) h
1188 -46582 M
(Conclusions) h
288 -48832 M
/Times-Roman-ISOLatin1 $
/Times-Roman & P
/Times-Roman-ISOLatin1 F 1000 o f
74.9 0 32 (Developing the VMS model and implementing the prototype software was a valuable experience for us. ) W
288 -50032 M
(In this section we present lessons we learned and future directions we believe useful to pursue.) h
288 -53082 M
/Times-Bold-ISOLatin1 F 1200 o f
(4.1 ) h
2088 -53082 M
(Findings) h
288 -55332 M
/Times-Roman-ISOLatin1 F 1000 o f
52.9 0 32 (We found the Mach abstractions helpful both in designing the model and in implementing the prototype. ) W
288 -56532 M
59.3 0 32 (The client\255server approach that Mach supports was very useful conceptually in designing our partitioned) W
288 -57732 M
44.4 0 32 (model of VMS\255on\255Mach.  In implementing the prototype we also found that the partitioning lent itself to) W
288 -58932 M
73.2 0 32 (ease of construction and debug.  However, we also found issues for Mach.  This section describes these) W
288 -60132 M
(findings.) h
-9000 6600 T
S
N
S
15075 -47982 31050 39894 @ I N
15075 -8088 T
N
a 45 dict begin
29 -39810 T
30936 39782 s
/bd{bind def}def /sd{string def}bd /U{0 exch getinterval def}bd
/cf currentfile def /imstr 130 sd /h1 1 sd /a1 190 sd /a2 190 sd /a3 190 sd /z 380 sd /o 380 sd
/z2 z 2 U /z3 z 3 U /z4 z 4 U /z5 z 5 U /z6 z 6 U
/o2 o 2 U /o3 o 3 U /o4 o 4 U /o5 o 5 U /o6 o 6 U
/I {codes cf read pop get exec} bd
/codes [{I}{I}{I}{I}{I}{I}{I}{I}{I}{I}{I}{I}{I}{I}{I}{I}{I}{I}{I}{I}{I}{I}{I}{I}{I}{I}{I}{I}{I}{I}{I}{I}
{z 0 -32 S}{z 0 63 S}{z 0 158 S}{z 0 253 S}{o 0 -32 S}{o 0 63 S}{o 0 158 S}{o 0 253 S}
{a1 0 -32 S}{a1 0 63 S}{a2 0 -32 S}{a2 0 63 S}{a3 0 -32 S}{a3 0 63 S}
{a1 -32 F}{a1 63 F}{a2 -32 F}{a2 63 F}{a3 -32 F}{a3 63 F}
{Nn}{N1}{h1 0 -32 C}{h1 0 95 C}{h1 0 190 C}
{-32 A}{-24 A}{-16 A}{-8 A}{0}{8 A}{16 A}{24 A}{32 A}{40 A}{48 A}{56 A}
{64 A}{72 A}{80 A}{88 A}{96 A}{104 A}{112 A}{120 A}{128 A}{136 A}
{2 H}{3 H}{4 H}{5 H}{6 H}{7 H}{8 H}{9 H}{10 H}{11 H}{12 H}{13 H}{14 H}{15 H}{16 H}{17 H}{18 H}{19 H}
{20 H}{21 H}{22 H}{23 H}{24 H}{25 H}{26 H}{27 H}{28 H}{29 H}
{30 H}{31 H}{32 H}{33 H}{34 H}{35 H}{36 H}{37 H}{38 H}{39 H}
z2 z3 z4 z5 z6 o2 o3 o4 o5 o6] def
/H {cf imstr 0 4 -1 roll getinterval readhexstring pop} bd
/A {/val exch def cf imstr readline pop dup 0 exch
{val add 3 copy put pop 1 add} forall pop} bd
/Nn {cf imstr readline pop} bd
/N1 {cf h1 readstring pop} bd
/C {cf read pop add put h1} bd
/S {cf read pop add getinterval} bd
/F {cf read pop add cf h1 readhexstring pop 0 get exch dofill} bd
/dofill {/len exch def 2 copy 0 1 len 1 sub {exch put 2 copy} for pop pop pop 0 len getinterval} bd
o 255 380 dofill pop
514 661 8 [514 0 0 -661 0 661] {I} image
#~#~#~#~ ='~%Ev$66 '~$u6 $6w$66 '~$u6 $5x$66 '~$u6 $5x| 38A#~ u8A 2zx|6 '~%>x|6 $16 '~$c6 $16 $16 {x|6 $16 '~$c6 $16 $16 {x|6 $16 
'~$c6 $16 $16 {x|6 $16 %vu|u8Au}u{x$+y&@6 $16 $16 {x|6 $16 %vu|u8Au}uzu{u$*u{u&?6 $16 $-6 {6 {x|6 $16 %wuzuzv{vzu{u$*u{w8Au8Aw{w{w
{w{w%x6 $16 $-6 {6 {x|6 $16 %wuzuzv{v{v$-u{ )zu8Auzu8Auzu8Auzu8Auzu%w6 $16 $-6 {6 {x|6 $-6 {6 %wuzuzw8Aw}v$+y8Avzuzu8Au}uzu8Av|v%z
6 $*6 ~6 $-6 {6 {x|6 $-6 {6 %x6 z6 {uRFF00FF00FF

u~vzx{u}u{uzu8Au}y{v|v%x6 $*6 ~6 $-6 {6 {x|6 } ){6 %xw{u8Av8Auzu{u$*u}u{uzu8Au}u$(v|v%w6 $(v~6 $-6 {6 {x|6 $16 %yu|uz6 zuzu{u$*u}u
{uzu8Auzu8Auzu8Auzu8Auzu%w6 $16 $-6 {6 {x|6 $16 %yu|uz6 zu{x$+u}u|w{w{w{w{w%x6 $16 $-6 {6 {x|6 $16 '~$c6 $16 } ){6 {x|6 $16 '~$c6 
$16 $16 {x|6 $16 '~$c6 $16 $16 {x|O00FF

 18A#~ c8A 18A 1{x8A#~!?8A '}Z00FF00FF00FF00FF00FF00FF00

z6 '~%/w|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

$L6 {P00FF00

{6 zv$)v$.6 {6 $-6 '~|x|uYFF00FF00FF00FF00FF00FF00

z6 $L6 {P00FF00

{P00FF00

{6 $'6 {6 $-6 {6 $-6 '~|x|uzZ00FF00FF00FF00FF00FF00FF00

$L6 {O00FF

u8AuOFF00

$+6 {6 $-u8Au$-6 '~|x|uYFF00FF00FF00FF00FF00FF00

z6 $L6 {V00FF00FF00FF00FF00

$+6 {Q00FF00FF

u$(R00FF00FF00

zv{vzO00FF

u'~$!x|uzZ00FF00FF00FF00FF00FF00FF00

$MP00FF00

zR00FF00FF00

zvzxOFF00

{O00FF

uzO00FF

xSFF00FF00FF00

}P00FF00

{O00FF

uz6 '~x|uYFF00FF00FF00FF00FF00FF00

z6 $MP00FF00

z6 {6 }6 $'6 {P00FF00

{6 $'6 {6 zwOFF00

}6 {6 '~x|uzZ00FF00FF00FF00FF00FF00FF00

$MP00FF00

z6 {6 }6 $'6 {P00FF00

{6 $'6 {P00FF00

{P00FF00

}6 {6 '~x|uYFF00FF00FF00FF00FF00FF00

z6 $N6 {6 {P00FF00

{6 $'6 {P00FF00

{6 $'6 {P00FF00

{P00FF00

{P00FF00

{6 '~x|uzZ00FF00FF00FF00FF00FF00FF00

$N6 {6 {6 zv$)vz6 {6 $'6 {6 zwzvz6 {6 '~x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

z6 {6 $W6 {P00FF00

{6 zv$(x8Axzvzx'~x|uYFF00FF00FF00FF00FF00FF00

z6 z6 {6 $W6 {P00FF00

{P00FF00

{6 $)6 {6 }6 {6 {6 '~zx|uzZ00FF00FF00FF00FF00FF00FF00

z6 {6 $M6 $)6 {O00FF

u8AuOFF00

$-6 {6 }6 $'6 '~zx|uYFF00FF00FF00FF00FF00FF00

z6 z6 {6 zv{vzO00FF

uzO00FF

u{vzuOFF00

{v{v$(6 {V00FF00FF00FF00FF00

$-6 {6 }6 $'6 '~zx|uzZ00FF00FF00FF00FF00FF00FF00

z6 {P00FF00

{P00FF00

{O00FF

uzO00FF

uz6 }V00FF00FF00FF00FF00

{6 {6 $*P00FF00

zR00FF00FF00

zv$*6 {w{v|6 '~zx|uYFF00FF00FF00FF00FF00FF00

z6 z6 {6 zu{xOFF00

}6 {6 zwTFF00FF00FF00FF

x$.P00FF00

z6 {6 }6 $)6 {6 $)6 {6 '~zx|uzZ00FF00FF00FF00FF00FF00FF00

z6 {6 |6 z6 }6 }6 {P00FF00

{V00FF00FF00FF00FF00

$2P00FF00

z6 {6 }6 $)6 {6 $)6 {6 '~zx|uYFF00FF00FF00FF00FF00FF00

z6 z6 {P00FF00

{P00FF00

{P00FF00

}6 {P00FF00

{V00FF00FF00FF00FF00

{6 {6 $+6 {6 {P00FF00

{6 $)6 {6 }6 {6 {6 '~zx|uzZ00FF00FF00FF00FF00FF00FF00

{v{v{vz6 }6 {6 zwOFF00

{6 zv{v$*6 {6 {6 zv$*6 {xzv|6 '~zx|uYFF00FF00FF00FF00FF00FF00

z6 $T6 $;x'~$8x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

z6 {6 $(u$S6 {P00FF00

{6 zv$)v$.6 {6 $-6 $.6 zw$Mv$F6 {6 {6 $+6 |6 &Dx|uYFF00FF00FF00FF00FF00FF00

z6 z6 {6 $)6 $B6 $06 {P00FF00

{P00FF00

{6 $'6 {6 $-6 {6 $-6 $-6 {6 {6 $K6 {6 $E6 {6 zu$*P00FF00

|6 &Cx|uzZ00FF00FF00FF00FF00FF00FF00

z6 {6 $)6 $B6 $06 {O00FF

u8AuOFF00

$+6 {6 $-u8Au$-6 $-6 {6 {6 $K6 $JP00FF00

zP00FF00

$)6 {6 {6 &Cx|uYFF00FF00FF00FF00FF00FF00

z6 z6 {6 zv|6 |v{vzuOFF00

{v$(w{v$(6 {V00FF00FF00FF00FF00

$+6 {Q00FF00FF

u$(R00FF00FF00

zv{vzO00FF

u$)6 |6 {Q00FF00FF

u{v{v{v{v{v$(6 ~vzO00FF

uz6 {6 zvzO00FF

u$)P00FF00

|6 $)6 {6 |6 &Bx|uzZ00FF00FF00FF00FF00FF00FF00

zT00FF00FF00FF00

{6 {6 {6 {P00FF00

{V00FF00FF00FF00FF00

{6 $(6 |6 {6 $(P00FF00

zR00FF00FF00

zvzxOFF00

{O00FF

uzO00FF

xSFF00FF00FF00

}P00FF00

{O00FF

uz6 $(6 |wzuzP00FF00

{P00FF00

{P00FF00

{P00FF00

{P00FF00

{O00FF

xzvz6 {O00FF

uzP00FF00

{P00FF00

{O00FF

uz6 $)6 }6 $)6 {6 |6 &Bx|uYFF00FF00FF00FF00FF00FF00

z6 zS00FF00FF00FF

x{6 {6 }6 {U00FF00FF00FF00FF

x$(6 |6 {6 $(P00FF00

z6 {6 }6 $'6 {P00FF00

{6 $'6 {6 zwOFF00

}6 {6 $(6 |6 }6 }6 {P00FF00

}xzu|u$-O00FF

xOFF00

}6 {O00FF

xOFF00

$,P00FF00

|6 $)6 {6 |6 &Bx|uzZ00FF00FF00FF00FF00FF00FF00

zT00FF00FF00FF00

$'6 {6 }6 {V00FF00FF00FF00FF00

$,6 |6 {6 $(P00FF00

z6 {6 }6 $'6 {P00FF00

{6 $'6 {P00FF00

{P00FF00

}6 {6 $)6 {6 }6 }6 {P00FF00

}6 $(6 }6 $,P00FF00

}6 ~P00FF00

z6 }6 $,P00FF00

|6 $)6 {6 {6 &Cx|uYFF00FF00FF00FF00FF00FF00

z6 zu8AuOFF00

{6 {6 {6 {P00FF00

{V00FF00FF00FF00FF00

{6 $(6 zP00FF00

{6 $)6 {6 {P00FF00

{6 $'6 {P00FF00

{6 $'6 {P00FF00

{P00FF00

{P00FF00

{6 $)6 {6 }6 }6 {P00FF00

{P00FF00

{P00FF00

{P00FF00

{6 $'6 {P00FF00

{P00FF00

~P00FF00

z6 {P00FF00

$+6 {6 {6 }6 |P00FF00

|6 &Cx|uzZ00FF00FF00FF00FF00FF00FF00

z6 {6 zv{v{v{vz6 {6 zv$*u{v$*6 {6 {6 zv$)vz6 {6 $'6 {6 zwzvz6 {6 $*6 z6 }6 ~v{v{v{v{v$)v{vz6 $'6 |vz6 $+6 {O00FF

xzv|6 |6 &Dx|uYFF00FF00FF00FF00FF00FF00

z6 &\6 &Ox|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 z6 {P00FF00

{P00FF00

{6 $'x8Axzvzx$(vz6 ~v$(6 {6 {6 $+6 '~$(x|uzZ00FF00FF00FF00FF00FF00FF00

z6 {P00FF00

{P00FF00

{6 $)6 {6 }6 {6 {6 $)6 {P00FF00

$'6 $)6 {6 zu$*P00FF00

'~$'x|uYFF00FF00FF00FF00FF00FF00

z6 z6 {O00FF

u8AuOFF00

z6 $*6 {6 }6 $'6 $)6 }6 $'6 $*P00FF00

zP00FF00

$)6 {6 '~~x|uzZ00FF00FF00FF00FF00FF00FF00

z6 {X00FF00FF00FF00FF00FF00

$+6 {6 }6 $'6 $)6 }6 $'6 $*P00FF00

|6 $)6 {6 '~~x|uYFF00FF00FF00FF00FF00FF00

z6 {P00FF00

zS00FF00FF00FF

u$,6 {w{v|6 $)6 }6 $'6 $+6 }6 $)6 {6 '~~x|uzZ00FF00FF00FF00FF00FF00FF00

{P00FF00

z6 {R00FF00FF00

$+6 {6 $)6 {6 $)6 }6 $'6 $*P00FF00

|6 $)6 {6 '~~x|uYFF00FF00FF00FF00FF00FF00

z6 {P00FF00

z6 {P00FF00

z6 $*6 {6 $)6 {6 $)6 }6 $'6 $*P00FF00

|6 $)6 {6 '~~x|uzZ00FF00FF00FF00FF00FF00FF00

|6 {6 {P00FF00

{6 $)6 {6 }6 {6 {6 $)6 {P00FF00

$'6 $)6 {6 {6 }6 |P00FF00

'~$'x|uYFF00FF00FF00FF00FF00FF00

z6 |6 {6 {P00FF00

{6 $)6 {xzv|6 $*vzxzv$(6 {O00FF

xzv|6 '~$(x|uzZ00FF00FF00FF00FF00FF00FF00

$~6 '~$.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

%s6 '8x|uYFF00FF00FF00FF00FF00FF00

z6 z6 {6 $=6 $)u$/u$36 $i6 {P00FF00

{P00FF00

{6 zv$)vz6 {P00FF00

{6 zv$)vz6 {6 {6 |vzxzv{v&Hx|uzZ00FF00FF00FF00FF00FF00FF00

z6 {6 $=6 $(6 z6 $/6 |6 $.6 {6 $66 $>6 $/6 {P00FF00

{P00FF00

{R00FF00FF00

$*6 |6 {P00FF00

{P00FF00

{6 $)6 {6 {6 zP00FF00

z6 {P00FF00

}6 {6 |6 &Hx|uYFF00FF00FF00FF00FF00FF00

z6 {P00FF00

$>6 $(6 $26 |6 $.6 $:6 $N6 {O00FF

u8AuOFF00

z6 zP00FF00

}6 |6 |6 {O00FF

u8AuOFF00

$-6 {u8AuOFF00

{P00FF00

}6 }6 $(6 &Hx|uzZ00FF00FF00FF00FF00FF00FF00

{P00FF00

{vz6 {Q00FF00FF

u$)wzv{6 }vz6 {6 {6 {w$)wzu{O00FF

u{v{vzw{vzO00FF

uz6 {6 $(u|v$(6 {X00FF00FF00FF00FF00FF00

|v{v{6 |6 {V00FF00FF00FF00FF00

$-6 {T00FF00FF00FF00

{P00FF00

}6 }6 $(6 &Hx|uYFF00FF00FF00FF00FF00FF00

z6 |6 {6 {P00FF00

{O00FF

uz6 $'6 {P00FF00

{O00FF

w~P00FF00

{6 {6 |6 $*6 {6 {6 {uzP00FF00

{P00FF00

{6 z6 |6 {O00FF

uzP00FF00

{6 $)6 {6 {6 $(P00FF00

zS00FF00FF00FF

u~P00FF00

{6 |6 }P00FF00

zR00FF00FF00

zv$*6 {T00FF00FF00FF00

{P00FF00

}w{v}6 &Hx|uzZ00FF00FF00FF00FF00FF00FF00

|6 {6 {P00FF00

{P00FF00

$+6 {O00FF

xz6 }wOFF00

{6 {6 |6 $*6 {6 {6 {6 }xOFF00

~6 |6 {P00FF00

}6 {6 $)6 |u$*P00FF00

z6 {R00FF00FF00

}P00FF00

$(6 }P00FF00

z6 {6 }6 $)6 {6 {O00FF

xOFF00

zuOFF00

$)6 |6 &Hx|uYFF00FF00FF00FF00FF00FF00

z6 |6 {6 {P00FF00

{P00FF00

$+6 {P00FF00

~6 |6 {P00FF00

{6 {6 |6 $*6 {6 {6 {6 }6 }6 ~6 |6 {P00FF00

}6 zu$)6 ~6 $)P00FF00

z6 {P00FF00

z6 {v$)6 }P00FF00

z6 {6 }6 $)6 {6 {P00FF00

{P00FF00

{P00FF00

$)6 |6 &Hx|uzZ00FF00FF00FF00FF00FF00FF00

|6 {6 {P00FF00

zuOFF00

$+6 {P00FF00

{6 z6 |6 {P00FF00

zu{6 |6 z6 $'6 {6 {6 {6 }6 {P00FF00

{6 z6 zP00FF00

{P00FF00

~uOFF00

$)6 {6 {6 $)6 {6 {P00FF00

{6 {6 }6 |6 ~6 {6 {P00FF00

{6 $)6 {6 {P00FF00

{P00FF00

{P00FF00

}6 {6 |6 &Hx|uYFF00FF00FF00FF00FF00FF00

z6 |6 |v{uQFF00FF00

$,wzv{6 }wzuOFF00

zv|u$)wzvz6 ~v{v|u{vz6 $)6 $(v{v$*6 {6 {P00FF00

{6 $(v{v|6 {6 {6 zv$)vz6 {P00FF00

{6 zvzxzv{v&Hx|uzZ00FF00FF00FF00FF00FF00FF00

%A6 {6 $S6 $;x&qx|uYFF00FF00FF00FF00FF00FF00

z6 %Bv'gx|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

|6 '~%)x|uYFF00FF00FF00FF00FF00FF00

z6 {v$F6 $,u|u$Bu$'6 '~x|uzZ00FF00FF00FF00FF00FF00FF00

zP00FF00

$*6 $<6 $-6 }6 $C6 $'6 '~x|uYFF00FF00FF00FF00FF00FF00

z6 zP00FF00

$*6 $<6 $-6 }6 $C6 $'6 '~x|uzZ00FF00FF00FF00FF00FF00FF00

{v$(wz6 {O00FF

w{v$(O00FF

u{v|6 }6 |v$(6 {6 zvzO00FF

u|6 |w'~x|uYFF00FF00FF00FF00FF00FF00

z6 |P00FF00

$(6 |6 {P00FF00

{P00FF00

{6 $'uzP00FF00

{6 {6 }6 {6 {6 $'6 {P00FF00

{O00FF

uz6 {6 {6 {6 '~x|uzZ00FF00FF00FF00FF00FF00FF00

|P00FF00

$(6 |6 {P00FF00

{O00FF

x$'6 {O00FF

x{6 }6 {6 {6 $'T00FF00FF00FF00

{P00FF00

$'6 {6 {6 '~x|uYFF00FF00FF00FF00FF00FF00

z6 {v$)6 |6 zuOFF00

{P00FF00

$+6 {P00FF00

$'6 }6 {6 {6 $'T00FF00FF00FF00

{P00FF00

$'6 {6 {6 '~x|uzZ00FF00FF00FF00FF00FF00FF00

|6 $*6 z6 zuPFF00FF

wz6 {6 $'6 {P00FF00

{6 {6 }6 {6 {6 {6 {T00FF00FF00FF00

{P00FF00

$'6 {6 {6 '~x|uYFF00FF00FF00FF00FF00FF00

z6 $0u~P00FF00

~v$(6 {6 zv{v{v{v{v{P00FF00

{vz6 ~v{w'~x|uzZ00FF00FF00FF00FF00FF00FF00

$46 {P00FF00

$Q6 '~$@x|uYFF00FF00FF00FF00FF00FF00

z6 $5vz6 '~$rx|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

z6 {6 $(u|u$Bu$'6 {6 '~$Fx|uYFF00FF00FF00FF00FF00FF00

z6 z6 {6 $)6 }6 $C6 $'6 {6 '~$Fx|uzZ00FF00FF00FF00FF00FF00FF00

z6 {6 $)6 }6 $C6 $'6 {6 '~$Fx|uYFF00FF00FF00FF00FF00FF00

z6 z6 {6 zv|6 }6 |v$(6 {6 zvzO00FF

u|6 |w{6 '~$Fx|uzZ00FF00FF00FF00FF00FF00FF00

zxOFF00

{6 {6 }6 {6 {6 $'6 {P00FF00

{O00FF

uz6 {6 {6 {6 {6 '~$Fx|uYFF00FF00FF00FF00FF00FF00

z6 z6 {O00FF

x{6 }6 {6 {6 $'T00FF00FF00FF00

{P00FF00

$'6 {6 {6 {6 '~$Fx|uzZ00FF00FF00FF00FF00FF00FF00

z6 {P00FF00

$'6 }6 {6 {6 $'T00FF00FF00FF00

{P00FF00

$'6 {6 {6 {6 '~$Fx|uYFF00FF00FF00FF00FF00FF00

z6 z6 {P00FF00

{6 {6 }6 {6 {6 $'T00FF00FF00FF00

{P00FF00

$'6 {6 {6 '~$Jx|uzZ00FF00FF00FF00FF00FF00FF00

z6 {6 zv{v{v{v$)P00FF00

{vz6 ~v{w{6 '~$Fx|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

zxOFF00

$9u$)u$fv$)u$W6 $g6 $wu$)v~6 zv%5x|uYFF00FF00FF00FF00FF00FF00

z6 |6 {6 $'6 $06 z6 {6 }6 $B6 $,6 $56 {6 $)6 }6 $Q6 $g6 $@6 $16 ~6 $<6 z6 $)6 $'P00FF00

{6 %4x|uzZ00FF00FF00FF00FF00FF00FF00

|6 {6 $86 $,6 $B6 $B6 {6 $)6 $W6 $g6 $@6 $16 $C6 $,6 ~6 z6 {6 %4x|uYFF00FF00FF00FF00FF00FF00

z6 |6 {O00FF

u{u|v$)6 }u}6 |v$)v{vzO00FF

uzw{v{u{O00FF

u{v$(6 {6 $)6 |u{O00FF

u{v{v$/vzO00FF

u{w$(v{vzO00FF

uz6 {6 zv{v$)v{v$)wzvzuOFF00

{vzO00FF

u{vzwzO00FF

u{vzw{u|vzO00FF

u$)v{6 $,6 ~6 z6 {6 %4x|uzZ00FF00FF00FF00FF00FF00FF00

|6 {uz6 {6 {6 {6 $'w|6 }6 {6 {6 $'6 {P00FF00

{O00FF

uz6 z6 $(6 {6 {uzP00FF00

{6 $(w$)6 }6 {uzP00FF00

{P00FF00

{6 $1O00FF

uzP00FF00

{6 $'6 {P00FF00

{O00FF

uzP00FF00

{P00FF00

{P00FF00

{6 $+P00FF00

{6 $'6 {P00FF00

{V00FF00FF00FF00FF00

{O00FF

uzP00FF00

{6 z6 |uz6 }6 z6 ~6 {6 {O00FF

uz6 $'6 {O00FF

w$*6 }6 {6 {6 %4x|uYFF00FF00FF00FF00FF00FF00

z6 |6 {6 {6 {6 |u$*6 ~6 }6 {x$'6 }6 {P00FF00

{6 z6 }w{6 {6 {6 zu$-6 $)6 }6 {6 {O00FF

xzu$0wOFF00

{P00FF00

{6 $(u{xOFF00

}6 {O00FF

xzu$*wzu$)6 {O00FF

xUFF00FF00FF00FF00

{P00FF00

{6 zu|6 |6 ~wz6 ~6 {6 {P00FF00

{6 $'6 {6 z6 $,6 |6 |6 {6 %4x|uzZ00FF00FF00FF00FF00FF00FF00

|6 {6 {6 {6 ~6 $)6 ~6 }6 {6 $+6 }6 {P00FF00

{6 z6 |6 {6 {6 {6 {6 |6 $,6 $)6 }6 {6 {P00FF00

$(6 $.6 {P00FF00

{P00FF00

{6 $*6 z6 }6 ~P00FF00

z6 $(6 $(6 {6 |6 $(6 {P00FF00

}T00FF00FF00FF00

{P00FF00

{6 |6 {6 |6 }6 {6 z6 ~6 {6 {P00FF00

{6 $'6 {6 z6 $,6 |6 |6 {6 %4x|uYFF00FF00FF00FF00FF00FF00

z6 |6 {6 {6 {6 {6 {6 $(6 ~6 }6 {6 {6 $'6 {P00FF00

{P00FF00

{6 z6 zP00FF00

{6 {6 {6 {P00FF00

{6 $'6 {6 $)6 }6 {6 {P00FF00

{P00FF00

{6 {u$(6 {P00FF00

{P00FF00

{6 $'6 {P00FF00

{P00FF00

~P00FF00

z6 {P00FF00

{6 $'6 {P00FF00

{6 $'6 {P00FF00

{V00FF00FF00FF00FF00

{P00FF00

{P00FF00

{6 z6 zP00FF00

}6 {6 z6 z6 {6 {6 {P00FF00

{6 $'6 {6 z6 $,6 {6 }6 {6 %4x|uzZ00FF00FF00FF00FF00FF00FF00

|6 {6 {6 zv{v$)6 }v{v{v$)v{vz6 {6 {u{wzvz6 {6 zv$)v$)v{vz6 {6 zv{v|6 $*wOFF00

{6 zw$(v{vz6 $'6 |v{v$)wzv$)wzvz6 {6 zvz6 {6 zv|uz6 ~w{u{v{vz6 {6 $(v{6 $+vz6 ~v%5x|uYFF00FF00FF00FF00FF00FF00

z6 %`6 'Kx|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 $@6 $2v~6 zv$d6 $76 {P00FF00

{6 zv$)v$.6 {6 $-6 $7xOFF00

%#6 zxOFF00

{O00FF

wzxz6 %1x|uzZ00FF00FF00FF00FF00FF00FF00

$*6 $06 |6 $36 $'P00FF00

{6 $Y6 |6 |6 $'6 $/6 {P00FF00

{P00FF00

{6 $'6 {6 $-6 {6 $-6 $96 {6 %"6 }6 {6 {P00FF00

{P00FF00

$'6 %0x|uYFF00FF00FF00FF00FF00FF00

z6 $;6 |6 $36 ~6 z6 {6 $^6 |6 $76 {O00FF

u8AuOFF00

$+6 {6 $-u8Au$-6 $96 {6 %"6 }6 |P00FF00

z6 {P00FF00

$'6 %0x|uzZ00FF00FF00FF00FF00FF00FF00

z6 {6 zu|v$(wzO00FF

u{v$*6 ~6 z6 {6 $(v{vzO00FF

uz6 {6 zvzO00FF

u$(6 {6 zu{wzO00FF

u{u{O00FF

u$(6 {V00FF00FF00FF00FF00

$+6 {Q00FF00FF

u$(R00FF00FF00

zv{vzO00FF

u$66 {O00FF

u{v$(6 {6 zv{vzO00FF

u$(wzO00FF

u{v{vzO00FF

u{vzuOFF00

$)6 ~6 |P00FF00

z6 {P00FF00

$(6 %/x|uYFF00FF00FF00FF00FF00FF00

z6 z6 {6 {6 $'6 $(6 |uzP00FF00

{6 $)6 }6 {6 {6 $'6 {P00FF00

{O00FF

uzP00FF00

{P00FF00

{O00FF

uz6 $'6 {6 {6 |6 |uz6 {6 {uz6 $(P00FF00

zR00FF00FF00

zvzxOFF00

{O00FF

uzO00FF

xSFF00FF00FF00

}P00FF00

{O00FF

uz6 $56 {uzP00FF00

{6 $'6 {P00FF00

{P00FF00

{O00FF

uz6 $'6 {O00FF

uzP00FF00

{P00FF00

{O00FF

uz6 }T00FF00FF00FF00

$(6 ~6 }6 {wzw}6 %/x|uzZ00FF00FF00FF00FF00FF00FF00

z6 {6 {6 |w$(6 |6 {O00FF

x$)6 |6 |6 {6 $(u{xOFF00

}6 {O00FF

xOFF00

$+R00FF00FF00

{6 |6 |6 {6 {6 {6 {6 $(P00FF00

z6 {6 }6 $'6 {P00FF00

{6 $'6 {6 zwOFF00

}6 {6 $56 {6 {O00FF

x$'6 {6 zu{xOFF00

$+6 {P00FF00

}6 {P00FF00

{P00FF00

~wSFF00FF00FF00

$(6 ~6 }6 {6 }6 $(6 %/x|uYFF00FF00FF00FF00FF00FF00

z6 {P00FF00

|6 {6 {6 $(6 |6 {P00FF00

$-6 |6 |6 {6 $*6 z6 }6 ~P00FF00

z6 }6 $+R00FF00FF00

{6 |6 |6 {6 {6 {6 {6 $(P00FF00

z6 {6 }6 $'6 {P00FF00

{6 $'6 {P00FF00

{P00FF00

}6 {6 $56 {6 {P00FF00

$+6 {6 |6 z6 }6 $+6 {P00FF00

}6 {P00FF00

{P00FF00

}6 {T00FF00FF00FF00

$)6 }6 }6 {6 }6 $'6 %0x|uzZ00FF00FF00FF00FF00FF00FF00

{P00FF00

|6 {6 {6 $(6 zP00FF00

{P00FF00

{6 $)6 {6 }6 {6 $'6 {P00FF00

{P00FF00

~P00FF00

z6 {P00FF00

$+R00FF00FF00

{6 |6 zP00FF00

{6 {6 {6 {6 $)6 {6 {P00FF00

{6 $'6 {P00FF00

{6 $'6 {P00FF00

{P00FF00

{P00FF00

{6 {6 $16 {6 {P00FF00

{6 $'6 zuOFF00

{P00FF00

{P00FF00

$+wz6 }6 {6 zwOFF00

}6 {T00FF00FF00FF00

$)6 }6 }6 {6 }6 $'6 %0x|uYFF00FF00FF00FF00FF00FF00

z6 |6 |v{w$)uz6 {6 zv$)vz6 ~v$)v{vz6 $'6 |vz6 $,P00FF00

{v|uz6 {6 zvz6 {6 $)6 {6 {6 zv$)vz6 {6 $'6 {6 zwzvz6 {6 zv$06 {6 {6 zv$)uOFF00

zv{vz6 $+6 }6 ~v~P00FF00

~wOFF00

{6 $*6 |6 }6 {6 }xz6 %1x|uzZ00FF00FF00FF00FF00FF00FF00

&D6 $e6 $16 {6 %jx|uYFF00FF00FF00FF00FF00FF00

z6 '+6 $2v%kx|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

$J6 $?6 $9u$)u$i6 $*6 {u$66 %16 $1wz6 {6 zv%5x|uYFF00FF00FF00FF00FF00FF00

z6 |6 $E6 {6 $66 |6 $'6 $06 z6 {6 }6 $i6 $)6 }6 }6 $16 $06 $76 ~6 $C6 $66 |6 $16 {P00FF00

{P00FF00

{6 %4x|uzZ00FF00FF00FF00FF00FF00FF00

$J6 $:6 |6 $86 $,6 $i6 $)6 }6 $76 $06 $76 $a6 |6 $16 {O00FF

u8AuOFF00

%8x|uYFF00FF00FF00FF00FF00FF00

z6 {u|v$(O00FF

u{v{v{wzu{O00FF

u{v$(wzO00FF

u{u|v$)6 }u}6 |v$)vzO00FF

u{v$(O00FF

u{v{v{vzO00FF

u{w$(6 ~6 |u{O00FF

u{v}6 $)vzw$)v$(w{u{uOFF00

{v$(6 {6 zv{u{O00FF

u{v$(wzO00FF

u{v$(6 {V00FF00FF00FF00FF00

%8x|uzZ00FF00FF00FF00FF00FF00FF00

|6 {6 {6 $'uzP00FF00

{6 }P00FF00

{6 {6 {uzP00FF00

{6 $(6 |uz6 {6 {6 {6 $'w|6 }6 {6 {6 $'6 {O00FF

uzP00FF00

{6 $'uzP00FF00

{P00FF00

{P00FF00

{O00FF

uzP00FF00

{6 $(6 ~6 }6 {uzP00FF00

{6 |6 $,6 z6 $.6 $(6 ~6 {T00FF00FF00FF00

{6 $'6 {P00FF00

{6 {6 {uzP00FF00

{6 $(6 |uzP00FF00

{6 $'wzR00FF00FF00

zv%5x|uYFF00FF00FF00FF00FF00FF00

z6 |6 |u$)6 }xzwOFF00

{6 {6 {6 {P00FF00

{6 $(6 |6 {6 {6 |u$*6 ~6 }6 {x$'6 {P00FF00

{O00FF

x$'6 }xOFF00

}6 {P00FF00

}6 {6 $(6 ~6 }6 {6 {O00FF

x|6 $)wz6 $+w$(6 ~6 {S00FF00FF00FF

x$'6 {6 zu}6 {6 {P00FF00

{6 $(6 |6 {O00FF

x$'P00FF00

{6 {6 }6 %4x|uzZ00FF00FF00FF00FF00FF00FF00

|6 ~6 $(6 }6 }6 {P00FF00

{6 {6 {6 {P00FF00

{6 $(6 |6 {6 {6 ~6 $)6 ~6 }6 {6 $+6 {P00FF00

{P00FF00

$+6 }6 }6 }6 {P00FF00

}6 {6 $)6 }6 }6 {6 {P00FF00

$'6 $)6 {6 z6 $*6 {6 $(6 ~6 {T00FF00FF00FF00

$+6 {6 |6 |6 {6 {P00FF00

{6 $(6 |6 {P00FF00

$+6 z6 z6 {6 }6 %4x|uYFF00FF00FF00FF00FF00FF00

z6 |6 {6 {6 $'6 }6 {P00FF00

{P00FF00

{6 {6 {6 {6 zw$(6 zP00FF00

{6 {6 {6 {6 $(6 ~6 }6 {6 {6 $'6 {P00FF00

{P00FF00

{6 $'6 }6 {P00FF00

{P00FF00

{P00FF00

}6 {6 $)6 }6 }6 {6 {P00FF00

{6 {6 $)6 {6 z6 z6 $'6 {6 $(6 z6 {6 {T00FF00FF00FF00

{6 $'6 zuOFF00

{6 {6 {6 {6 zw$(6 zP00FF00

{P00FF00

{6 $'6 {P00FF00

{P00FF00

{6 %4x|uzZ00FF00FF00FF00FF00FF00FF00

{v{v$(6 ~v{wzwzvz6 {6 }6 $)uz6 {6 zv{v$)6 }v{v{v$)vz6 {6 zv$(6 ~v{v{vz6 ~w$*6 {v{vz6 {6 zv{6 $+w{u$)w$)u{vz6 {6 zv$)uOFF00

zv{vz6 {6 }6 $)uz6 {6 zv$(6 {P00FF00

{6 zv%5x|uYFF00FF00FF00FF00FF00FF00

z6 $X6 {6 &e6 {6 %dx|uzZ00FF00FF00FF00FF00FF00FF00

$Yv&gv%ex|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

|6 '~%)x|uYFF00FF00FF00FF00FF00FF00

z6 {v{vzx8Ax%/v$X6 $Wu$>6 $?6 $\u%0x|uzZ00FF00FF00FF00FF00FF00FF00

zP00FF00

{6 {P00FF00

$'6 $<6 $P6 $A6 {6 $(6 $16 $,6 $/6 $-6 $H6 z6 $=6 $(6 $16 |6 $26 $86 $16 %0x|uYFF00FF00FF00FF00FF00FF00

z6 zP00FF00

{6 }6 $'6 $<6 $r6 {6 $(6 $16 $<6 $V6 $@6 $(6 $16 |6 $26 $J6 %0x|uzZ00FF00FF00FF00FF00FF00FF00

{vz6 }6 $'6 $*vz6 {6 zvzw{vzuOFF00

$)v{vzO00FF

uz6 {6 zu|v{v$46 {P00FF00

{O00FF

wzwz6 {O00FF

w$)u|v$(w{v{u{O00FF

u{v$(w{vzO00FF

u{6 }vzO00FF

uzuOFF00

{v{w$'w{v$(wzO00FF

u{v$(w{vzO00FF

uzuOFF00

{u{O00FF

u{v|6 %0x|uYFF00FF00FF00FF00FF00FF00

z6 |R00FF00FF00

}w|6 $)6 {P00FF00

{P00FF00

{6 z6 |6 {T00FF00FF00FF00

$'6 {P00FF00

{O00FF

uzP00FF00

{6 {6 {6 {P00FF00

{6 $36 {P00FF00

{6 z6 |6 {P00FF00

{6 z6 $,6 {6 {6 $'6 {P00FF00

{6 {6 {uzP00FF00

{6 $'6 {P00FF00

{O00FF

uzO00FF

wz6 {O00FF

uzV00FF00FF00FF00FF00

{P00FF00

{6 $(6 |6 {6 $(6 |uzP00FF00

{6 $(6 |6 {O00FF

uzT00FF00FF00FF00

{6 {uz6 }6 {6 %0x|uzZ00FF00FF00FF00FF00FF00FF00

|R00FF00FF00

zuOFF00

$'6 $*u{6 {6 zu|6 |xSFF00FF00FF00

$(u{xOFF00

}6 {6 {6 {6 }x$36 {P00FF00

{6 z6 |6 {P00FF00

{6 z6 $,6 |u$)6 {O00FF

x{6 {6 {P00FF00

{6 $'6 {O00FF

xOFF00

~6 |6 {P00FF00

}S00FF00FF00FF

xOFF00

{6 $(6 |6 {6 $(6 |6 {O00FF

x$(6 |xOFF00

}R00FF00FF00

{6 {6 {6 zw{6 %0x|uYFF00FF00FF00FF00FF00FF00

z6 {vz6 {P00FF00

$'6 $,6 z6 zu|6 {6 |6 }R00FF00FF00

$*6 z6 }6 ~P00FF00

|6 {6 }6 $76 {P00FF00

{6 z6 |6 {P00FF00

{6 z6 $,6 ~6 $(6 {P00FF00

$'6 {6 {P00FF00

{6 $'6 {P00FF00

}6 ~6 |6 {P00FF00

}T00FF00FF00FF00

}6 {6 $(6 |6 {6 $(6 |6 {P00FF00

$,6 |6 }6 }R00FF00FF00

{6 {6 {P00FF00

{6 {6 %0x|uzZ00FF00FF00FF00FF00FF00FF00

|6 {6 {P00FF00

$'6 $)6 {6 zuQFF00FF00

{6 z6 zP00FF00

{T00FF00FF00FF00

$'6 {P00FF00

{P00FF00

~P00FF00

|6 {6 {P00FF00

{6 {6 $/6 {P00FF00

zuz6 zO00FF

wz6 zuz6 z6 $)6 {6 {6 $'6 {P00FF00

{6 {6 {6 {6 zw$'wz6 {P00FF00

~6 |6 {P00FF00

}T00FF00FF00FF00

{P00FF00

{6 $(6 zP00FF00

{6 $(6 zP00FF00

{P00FF00

{6 $(6 zP00FF00

{P00FF00

}R00FF00FF00

{6 {6 {P00FF00

{6 {6 %0x|uYFF00FF00FF00FF00FF00FF00

z6 $)vzx{6 $*v~6 zv|u{vz6 {6 $(v{vz6 $'6 |v{v{v{v$/v{uOFF00

{uz6 ~uOFF00

{u$)v{v$(w{v{vz6 {6 }6 $'6 ~vz6 ~6 }vz6 }6 {6 zv{w$)u{v$*uz6 {6 zv$*u{vz6 }6 {6 zvz6 {6 zwzv%/x|uzZ00FF00FF00FF00FF00FF00FF00

$F6 {6 $k6 $A6 $a6 {6 $'6 &cx|uYFF00FF00FF00FF00FF00FF00

z6 $Gv%/6 $bv$(6 &cx|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 &D6 &gx|uzZ00FF00FF00FF00FF00FF00FF00

z6 $76 $2v~6 zv%Mwz6 {6 zv$)vzwz6 {O00FF

x%/u|u%<x|uYFF00FF00FF00FF00FF00FF00

z6 z6 $26 |6 $36 $'P00FF00

{6 $S6 $f6 $06 {P00FF00

{P00FF00

{6 $'P00FF00

{6 {P00FF00

{6 {6 $<6 $P6 $C6 }6 %<x|uzZ00FF00FF00FF00FF00FF00FF00

z6 $26 |6 $36 ~6 z6 {6 %;6 $06 {O00FF

u8AuOFF00

$+P00FF00

{6 {P00FF00

{6 {6 $<6 $t6 }6 %<x|uYFF00FF00FF00FF00FF00FF00

z6 zwz6 {6 $'wzO00FF

u{v$*6 ~6 z6 {6 $(v{vzO00FF

uz6 {6 zvzO00FF

u$)u{O00FF

u$(O00FF

u{v{vzw{vzO00FF

u{v{v$(w{v$(6 {V00FF00FF00FF00FF00

$,vz6 {P00FF00

{6 {6 $*vz6 {6 zvzw{vzuOFF00

$)v{vzO00FF

uz6 {6 zu|v{v$)v{v|6 }6 |v%5x|uzZ00FF00FF00FF00FF00FF00FF00

z6 {P00FF00

{6 $(6 |uzP00FF00

{6 $)6 }6 {6 {6 $'6 {P00FF00

{O00FF

uzP00FF00

{P00FF00

{O00FF

uz6 $)6 {uz6 $'uzP00FF00

{P00FF00

{P00FF00

{P00FF00

{O00FF

uzP00FF00

{P00FF00

{6 $(6 |6 {6 $'wzR00FF00FF00

zv$*Q00FF00FF

wz6 {6 {6 $)6 {P00FF00

{P00FF00

{6 z6 |6 {T00FF00FF00FF00

$'6 {P00FF00

{O00FF

uzP00FF00

{6 {6 {6 {P00FF00

{6 $'6 {6 }6 {6 }6 {6 {6 %4x|uYFF00FF00FF00FF00FF00FF00

z6 z6 {P00FF00

{6 $(6 |6 {O00FF

x$)6 |6 |6 {6 $(u{xOFF00

}6 {O00FF

xOFF00

$-6 {6 {6 $'6 }xzu{6 {P00FF00

{P00FF00

{6 zu{x$(6 |6 {6 $'P00FF00

{6 {6 }6 $)R00FF00FF00

}6 {6 {6 $*u{6 {6 zu|6 |xSFF00FF00FF00

$(u{xOFF00

}6 {6 {6 {6 }x$'6 ~w{6 }6 |u%6x|uzZ00FF00FF00FF00FF00FF00FF00

z6 {P00FF00

zu$(6 |6 {P00FF00

$-6 |6 |6 {6 $*6 z6 }6 ~P00FF00

z6 }6 $-6 {6 {6 $'6 }6 $(6 z6 {P00FF00

{P00FF00

{6 |6 z6 $,6 |6 {6 $'6 z6 z6 {6 }6 $(vz6 }6 {6 {6 $,6 z6 zu|6 {6 |6 }R00FF00FF00

$*6 z6 }6 ~P00FF00

|6 {6 }6 $+6 }6 {6 {6 }6 ~6 %5x|uYFF00FF00FF00FF00FF00FF00

z6 z6 {6 zuOFF00

$(6 zP00FF00

{P00FF00

{6 $)6 {6 }6 {6 $'6 {P00FF00

{P00FF00

~P00FF00

z6 {P00FF00

$-6 {6 {6 $'6 }6 {P00FF00

{O00FF

wz6 {P00FF00

{P00FF00

{P00FF00

{6 $(6 zP00FF00

{6 $'6 {P00FF00

{P00FF00

{6 $)6 {6 }6 {6 {6 $)6 {6 zuQFF00FF00

{6 z6 zP00FF00

{T00FF00FF00FF00

$'6 {P00FF00

{P00FF00

~P00FF00

|6 {6 {P00FF00

{6 $'6 {P00FF00

{6 {6 }6 {6 {6 {6 %0x|uzZ00FF00FF00FF00FF00FF00FF00

zw~6 $)uz6 {6 zv$)vz6 ~v$)v{vz6 $'6 |vz6 $,vz6 {6 $'6 ~v{vz6 ~vz6 {6 zv{v$*u{v$(6 {P00FF00

{6 zv$.6 ~v|6 $*v~6 zv|u{vz6 {6 $(v{vz6 $'6 |v{v{v$)v{wzv{v{v{v%/x|uYFF00FF00FF00FF00FF00FF00

z6 $(6 {6 %F6 %26 {6 %06 %0x|uzZ00FF00FF00FF00FF00FF00FF00

$)v%G6 %3v&Bx|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

z6 $>u$Cu$(6 $,u|u$Bu$'6 $)u$)u'Dx|uYFF00FF00FF00FF00FF00FF00

z6 z6 $26 $,6 }6 $<6 z6 $'6 $-6 }6 $C6 $'6 $(6 z6 {6 }6 'Dx|uzZ00FF00FF00FF00FF00FF00FF00

z6 $26 $,6 $B6 $*6 $-6 }6 $C6 $'6 $(6 $,6 'Dx|uYFF00FF00FF00FF00FF00FF00

z6 z6 ~v{vzw$*6 |u{O00FF

u{v$)v{6 $*O00FF

u{v|6 }6 |v$(6 {6 zvzO00FF

u|6 |w$(6 }u}6 |v'=x|uzZ00FF00FF00FF00FF00FF00FF00

z6 $)P00FF00

{6 z6 $,6 }6 {uzP00FF00

{6 $'6 {O00FF

w$(uzP00FF00

{6 {6 }6 {6 {6 $'6 {P00FF00

{O00FF

uz6 {6 {6 {6 $'w|6 }6 {6 {6 '<x|uYFF00FF00FF00FF00FF00FF00

z6 z6 ~wzu|6 $,6 }6 {6 {O00FF

x$'6 {6 z6 $*6 {O00FF

x{6 }6 {6 {6 $'T00FF00FF00FF00

{P00FF00

$'6 {6 {6 $(6 ~6 }6 {x'<x|uzZ00FF00FF00FF00FF00FF00FF00

z6 }6 {6 |6 {6 $,6 }6 {6 {P00FF00

$+6 {6 z6 $*6 {P00FF00

$'6 }6 {6 {6 $'T00FF00FF00FF00

{P00FF00

$'6 {6 {6 $(6 ~6 }6 {6 '@x|uYFF00FF00FF00FF00FF00FF00

z6 z6 }6 {P00FF00

{6 z6 z6 $)6 }6 {6 {P00FF00

{6 $'6 {6 z6 $*6 {P00FF00

{6 {6 }6 {6 {6 {6 {T00FF00FF00FF00

{P00FF00

$'6 {6 {6 $(6 ~6 }6 {6 {6 '<x|uzZ00FF00FF00FF00FF00FF00FF00

zxzwzv|u$)v{vz6 {6 zv$)v{6 $*6 {6 zv{v{v{v{v{P00FF00

{vz6 ~v{w$(6 }v{v{v'=x|uYFF00FF00FF00FF00FF00FF00

z6 %16 'zx|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

|6 '~%)x|uYFF00FF00FF00FF00FF00FF00

z6 {v$26 $36 $,u|u$Bu$'6 '~x|uzZ00FF00FF00FF00FF00FF00FF00

zP00FF00

$36 {6 |6 $*6 $-6 }6 $C6 $'6 '~x|uYFF00FF00FF00FF00FF00FF00

z6 zP00FF00

$36 $(6 $*6 $-6 }6 $C6 $'6 '~x|uzZ00FF00FF00FF00FF00FF00FF00

{v$)v{wzu{w$(O00FF

u{v|6 }6 |v$(6 {6 zvzO00FF

u|6 |w'~x|uYFF00FF00FF00FF00FF00FF00

z6 |P00FF00

$'6 {P00FF00

{6 {6 |6 $*uzP00FF00

{6 {6 }6 {6 {6 $'6 {P00FF00

{O00FF

uz6 {6 {6 {6 '~x|uzZ00FF00FF00FF00FF00FF00FF00

|P00FF00

$'xOFF00

{6 {6 |6 $*6 {O00FF

x{6 }6 {6 {6 $'T00FF00FF00FF00

{P00FF00

$'6 {6 {6 '~x|uYFF00FF00FF00FF00FF00FF00

z6 {v$(6 }6 {6 {6 |6 $*6 {P00FF00

$'6 }6 {6 {6 $'T00FF00FF00FF00

{P00FF00

$'6 {6 {6 '~x|uzZ00FF00FF00FF00FF00FF00FF00

|6 $)6 {P00FF00

{6 {6 |6 z6 $'6 {P00FF00

{6 {6 }6 {6 {6 {6 {T00FF00FF00FF00

{P00FF00

$'6 {6 {6 '~x|uYFF00FF00FF00FF00FF00FF00

z6 $/v{wzv|u$(6 {6 zv{v{v{v{v{P00FF00

{vz6 ~v{w'~x|uzZ00FF00FF00FF00FF00FF00FF00

$l6 '~$@x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

$<6 $M6 {6 $(u|u$Bu$'6 {6 '\x|uYFF00FF00FF00FF00FF00FF00

z6 $;u$M6 {6 $)6 }6 $C6 $'6 {6 '\x|uzZ00FF00FF00FF00FF00FF00FF00

$:P00FF00

$M6 {6 $)6 }6 $C6 $'6 {6 '\x|uYFF00FF00FF00FF00FF00FF00

z6 $<6 $M6 {6 zv|6 }6 |v$(6 {6 zvzO00FF

u|6 |w{6 '\x|uzZ00FF00FF00FF00FF00FF00FF00

$<6 $MxOFF00

{6 {6 }6 {6 {6 $'6 {P00FF00

{O00FF

uz6 {6 {6 {6 {6 '\x|uYFF00FF00FF00FF00FF00FF00

z6 $<6 $M6 {O00FF

x{6 }6 {6 {6 $'T00FF00FF00FF00

{P00FF00

$'6 {6 {6 {6 '\x|uzZ00FF00FF00FF00FF00FF00FF00

$<6 $M6 {P00FF00

$'6 }6 {6 {6 $'T00FF00FF00FF00

{P00FF00

$'6 {6 {6 {6 '\x|uYFF00FF00FF00FF00FF00FF00

z6 $<6 $M6 {P00FF00

{6 {6 }6 {6 {6 $'T00FF00FF00FF00

{P00FF00

$'6 {6 {6 '`x|uzZ00FF00FF00FF00FF00FF00FF00

$:x$K6 {6 zv{v{v{v$)P00FF00

{vz6 ~v{w{6 '\x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

$26 $4u$'6 }P00FF00

{6 zvzxOFF00

{6 zvz6 {6 }6 '~$,x|uYFF00FF00FF00FF00FF00FF00

z6 |6 $-6 $56 $'6 }P00FF00

{P00FF00

{P00FF00

}uz6 {6 {6 {6 }6 '~$,x|uzZ00FF00FF00FF00FF00FF00FF00

zR00FF00FF00

$*6 $66 $'6 |6 z6 {P00FF00

}6 }uz6 {6 |P00FF00

}6 '~$-x|uYFF00FF00FF00FF00FF00FF00

z6 zxzv}6 z6 {6 zvzO00FF

u|6 |w|6 z6 {P00FF00

}6 }R00FF00FF00

{6 |P00FF00

}6 '~$-x|uzZ00FF00FF00FF00FF00FF00FF00

{vz6 {6 {6 {6 {P00FF00

{O00FF

uz6 {6 {6 {6 {6 {6 {6 zvzwzR00FF00FF00

{6 }6 }6 '~$.x|uYFF00FF00FF00FF00FF00FF00

z6 zxzu|6 |T00FF00FF00FF00

{P00FF00

$'6 {6 {6 z6 |6 {6 }P00FF00

}6 zu{6 |P00FF00

{6 '~$/x|uzZ00FF00FF00FF00FF00FF00FF00

zR00FF00FF00

|6 {6 |T00FF00FF00FF00

{P00FF00

$'6 {6 {6 z6 |6 {6 }P00FF00

}6 zu{6 |P00FF00

{6 '~$/x|uYFF00FF00FF00FF00FF00FF00

z6 |6 {6 {P00FF00

}T00FF00FF00FF00

{P00FF00

$'6 {6 {P00FF00

}6 {P00FF00

{P00FF00

}6 {6 {6 {6 {P00FF00

'~$0x|uzZ00FF00FF00FF00FF00FF00FF00

$)vz6 ~P00FF00

{vz6 ~v{wOFF00

~v{vzxOFF00

{6 zvz6 {P00FF00

'~$0x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 $<6 $M6 {6 $(u|u$/6 {6 zvzxOFF00

{6 zvz6 {6 {6 'Vx|uzZ00FF00FF00FF00FF00FF00FF00

$;u$M6 {6 $)6 }6 $/6 {P00FF00

{P00FF00

}uz6 {6 {6 {6 {6 'Vx|uYFF00FF00FF00FF00FF00FF00

z6 $:P00FF00

$M6 {6 $)6 }6 $/6 {P00FF00

}6 }uz6 {6 |P00FF00

|6 'Vx|uzZ00FF00FF00FF00FF00FF00FF00

$<6 $M6 {6 zv|6 }6 |v$(6 {P00FF00

}6 }R00FF00FF00

{6 |P00FF00

|6 'Vx|uYFF00FF00FF00FF00FF00FF00

z6 $<6 $MxOFF00

{6 {6 }6 {6 {6 $'6 {6 zvzwzR00FF00FF00

{6 }6 }6 'Vx|uzZ00FF00FF00FF00FF00FF00FF00

$<6 $M6 {O00FF

x{6 }6 {6 {6 $'6 {6 }P00FF00

}6 zu{6 |P00FF00

|6 'Vx|uYFF00FF00FF00FF00FF00FF00

z6 $<6 $M6 {P00FF00

$'6 }6 {6 {6 $'6 {6 }P00FF00

}6 zu{6 |P00FF00

|6 'Vx|uzZ00FF00FF00FF00FF00FF00FF00

$<6 $M6 {P00FF00

{6 {6 }6 {6 {6 $'6 {P00FF00

{P00FF00

}6 {6 {6 {6 {6 'Zx|uYFF00FF00FF00FF00FF00FF00

z6 $:x$K6 {6 zv{v{v{v$)v{vzxOFF00

{6 zvz6 {6 {6 'Vx|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

|6 $56 '~$rx|uYFF00FF00FF00FF00FF00FF00

z6 {u$56 $,6 ~6 |6 $+6 ~6 '~$Fx|uzZ00FF00FF00FF00FF00FF00FF00

zP00FF00

$56 $,6 $+6 $+6 '~$Mx|uYFF00FF00FF00FF00FF00FF00

z6 |6 $*vz6 {O00FF

w{vzw{u{wz6 {O00FF

w{u|vzO00FF

u'~$9x|uzZ00FF00FF00FF00FF00FF00FF00

|6 $)6 {P00FF00

{P00FF00

{P00FF00

{6 z6 ~6 |6 |6 {6 z6 ~6 {6 {O00FF

uz6 '~$8x|uYFF00FF00FF00FF00FF00FF00

z6 |6 $*u{6 {P00FF00

{6 zu|6 ~6 |6 |6 {6 z6 ~6 {6 {P00FF00

{6 '~$8x|uzZ00FF00FF00FF00FF00FF00FF00

|6 $,6 z6 {P00FF00

{6 |6 {6 ~6 |6 |6 {6 z6 ~6 {6 {P00FF00

{6 '~$8x|uYFF00FF00FF00FF00FF00FF00

z6 |6 $)6 {P00FF00

zuOFF00

{P00FF00

{6 z6 z6 {6 |6 zP00FF00

zuz6 z6 {6 {6 {P00FF00

{6 '~$8x|uzZ00FF00FF00FF00FF00FF00FF00

zx$(v{uPFF00FF

w{v|u{v|u{uOFF00

{u{v{vz6 {6 '~$8x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

$F6 $,u|u'~$Rx|uYFF00FF00FF00FF00FF00FF00

z6 |6 $16 |6 $*6 $-6 }6 $I6 '~$(x|uzZ00FF00FF00FF00FF00FF00FF00

zR00FF00FF00

$46 $*6 $-6 }6 '~$Rx|uYFF00FF00FF00FF00FF00FF00

z6 zxzvz6 {6 zu{w$(O00FF

u{v|6 }6 |v$(6 {6 zv{vzO00FF

u{u{6 {6 '~x|uzZ00FF00FF00FF00FF00FF00FF00

{vz6 {6 zP00FF00

|6 |6 $*uzP00FF00

{6 {6 }6 {6 {6 $'6 {P00FF00

{P00FF00

{O00FF

uz6 {6 |P00FF00

'~$!x|uYFF00FF00FF00FF00FF00FF00

z6 zx8Ax{6 }6 |6 $*6 {O00FF

x{6 }6 {6 {6 $'6 {6 zu{xOFF00

{6 {6 }6 '~zx|uzZ00FF00FF00FF00FF00FF00FF00

zT00FF00FF00FF00

$'6 }6 |6 $*6 {P00FF00

$'6 }6 {6 {6 $'6 {6 |6 z6 }6 {6 {6 }6 '~zx|uYFF00FF00FF00FF00FF00FF00

z6 |6 {6 {6 zP00FF00

|6 |6 z6 $'6 {P00FF00

{6 {6 }6 {6 {6 {6 {6 zuOFF00

{P00FF00

{P00FF00

{6 {6 |P00FF00

'~$!x|uzZ00FF00FF00FF00FF00FF00FF00

$)vz6 {6 zv|u$(6 {6 zv{v{v{v{v{uOFF00

zv{vz6 {6 zvz6 {6 '~x|uYFF00FF00FF00FF00FF00FF00

z6 $f6 '~$Fx|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 z6 {P00FF00

{P00FF00

{6 $(vz6 {P00FF00

{6 zv$)vz6 {6 {6 |vzxzv{vz6 {O00FF

xOFF00

}6 ~v$(6 {6 zvzxOFF00

{6 zvz6 {6 $(v$)u',x|uzZ00FF00FF00FF00FF00FF00FF00

z6 {P00FF00

{P00FF00

{6 $(6 |6 {P00FF00

{P00FF00

{6 $)6 {6 {6 zP00FF00

z6 {P00FF00

}6 {6 |6 z6 {P00FF00

}6 }6 }6 {6 $'6 {P00FF00

{P00FF00

}uz6 {6 {6 {6 $'6 {6 $)6 }6 '&x|uYFF00FF00FF00FF00FF00FF00

z6 z6 {O00FF

u8AuOFF00

z6 |6 |6 |6 {O00FF

u8AuOFF00

$-6 {u8AuOFF00

{P00FF00

}6 }6 $(6 z6 {P00FF00

}6 }6 }6 {6 $'6 {P00FF00

}6 }uz6 {6 |P00FF00

$(6 {6 $)6 ',x|uzZ00FF00FF00FF00FF00FF00FF00

z6 {X00FF00FF00FF00FF00FF00

|v{6 |6 {V00FF00FF00FF00FF00

$-6 {T00FF00FF00FF00

{P00FF00

}6 }6 $(6 z6 {P00FF00

}6 }6 }6 {6 $'6 {P00FF00

}6 }R00FF00FF00

{6 |P00FF00

$(6 {6 $)6 |u{O00FF

u{v{v&rx|uYFF00FF00FF00FF00FF00FF00

z6 {P00FF00

zS00FF00FF00FF

u~6 |6 }P00FF00

zR00FF00FF00

zv$*6 {T00FF00FF00FF00

{P00FF00

}w{v}6 zx8Awz6 }6 }6 {6 $'6 {6 zvzwzR00FF00FF00

{6 }6 $*w$)6 }6 {uzP00FF00

{P00FF00

{6 &qx|uzZ00FF00FF00FF00FF00FF00FF00

{P00FF00

z6 {R00FF00FF00

$*6 }P00FF00

z6 {6 }6 $)6 {6 {O00FF

xOFF00

zuOFF00

$)6 |6 z6 {P00FF00

}6 }6 }6 {6 $'6 {6 }P00FF00

}6 zu{6 |P00FF00

$,6 $)6 }6 {6 {O00FF

xzu&sx|uYFF00FF00FF00FF00FF00FF00

z6 {P00FF00

z6 {P00FF00

z6 $)6 }P00FF00

z6 {6 }6 $)6 {6 {P00FF00

{P00FF00

{P00FF00

$)6 |6 z6 {P00FF00

}6 }6 }6 {6 $'6 {6 }P00FF00

}6 zu{6 |P00FF00

$,6 $)6 }6 {6 {P00FF00

$(6 &rx|uzZ00FF00FF00FF00FF00FF00FF00

|6 {6 {P00FF00

{6 {6 |6 ~6 {6 {P00FF00

{6 $)6 {6 {P00FF00

{P00FF00

{P00FF00

}6 {6 |6 z6 {P00FF00

}6 }6 }6 {6 {6 {6 {P00FF00

{P00FF00

}6 {6 {6 {6 {6 $'6 {6 $)6 }6 {6 {P00FF00

{P00FF00

{6 &qx|uYFF00FF00FF00FF00FF00FF00

z6 |6 {6 {P00FF00

{6 zv{v|6 {6 {6 zv$)vz6 {P00FF00

{6 zvzxzv{vz6 {O00FF

x8Ax8Axzv{v{v{vzxOFF00

{6 zvz6 {6 $(v$)v{vz6 {6 zv{v&rx|uzZ00FF00FF00FF00FF00FF00FF00

$66 $;x$k6 'hx|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 |6 '~%)x|uzZ00FF00FF00FF00FF00FF00FF00

{v$,6 $)u|u$(6 $,u|u$Bu$'6 '~x|uYFF00FF00FF00FF00FF00FF00

z6 zP00FF00

$-6 {6 |6 z6 z6 z6 $'6 $-6 }6 $C6 $'6 $G6 'Vx|uzZ00FF00FF00FF00FF00FF00FF00

zP00FF00

$-6 $(6 }6 $*6 $-6 }6 $C6 $'6 '~x|uYFF00FF00FF00FF00FF00FF00

z6 {v$)wzu|6 }6 $*O00FF

u{v|6 }6 |v$(6 {6 zvzO00FF

u|6 |w$-6 {6 zv{vzO00FF

u{u{6 {6 'Nx|uzZ00FF00FF00FF00FF00FF00FF00

|P00FF00

$'6 {6 {6 {wzw$(uzP00FF00

{6 {6 }6 {6 {6 $'6 {P00FF00

{O00FF

uz6 {6 {6 {6 $-6 {P00FF00

{P00FF00

{O00FF

uz6 {6 |P00FF00

'Ox|uYFF00FF00FF00FF00FF00FF00

z6 |P00FF00

$'6 {6 {6 |6 }6 $*6 {O00FF

x{6 }6 {6 {6 $'T00FF00FF00FF00

{P00FF00

$'6 {6 {6 $-6 {6 zu{xOFF00

{6 {6 }6 'Px|uzZ00FF00FF00FF00FF00FF00FF00

{v$(6 {6 {6 |6 }6 $*6 {P00FF00

$'6 }6 {6 {6 $'T00FF00FF00FF00

{P00FF00

$'6 {6 {6 $-6 {6 |6 z6 }6 {6 {6 }6 'Px|uYFF00FF00FF00FF00FF00FF00

z6 |6 $)6 {6 {6 |6 }6 $*6 {P00FF00

{6 {6 }6 {6 {6 {6 {T00FF00FF00FF00

{P00FF00

$'6 {6 {6 $)6 {6 zuOFF00

{P00FF00

{P00FF00

{6 {6 |P00FF00

'Ox|uzZ00FF00FF00FF00FF00FF00FF00

$/wzv{6 }6 $*6 {6 zv{v{v{v{v{P00FF00

{vz6 ~v{w$(v{uOFF00

zv{vz6 {6 zvz6 {6 'Nx|uYFF00FF00FF00FF00FF00FF00

z6 $l6 $I6 'tx|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

$~6 '~$.x|uYFF00FF00FF00FF00FF00FF00

z6 {v$wv{vzx8Axzvz6 {P00FF00

{6 $Ru$K6 &ex|uzZ00FF00FF00FF00FF00FF00FF00

z6 {6 $.6 $P6 $5P00FF00

{6 {P00FF00

$'6 {6 {P00FF00

{O00FF

uz6 $46 $,6 $16 $<6 $.6 &ex|uYFF00FF00FF00FF00FF00FF00

z6 z6 $26 $fP00FF00

{6 }6 $'6 {6 }6 {O00FF

uz6 $46 $>6 $<6 $.6 &ex|uzZ00FF00FF00FF00FF00FF00FF00

z6 }6 {6 zvzw{vzuOFF00

$)v{vzO00FF

uz6 {6 zu|v{v$)vz6 }6 $'6 {6 }6 {T00FF00FF00FF00

$'O00FF

u{vzw$)u{uOFF00

zw|6 |vzuOFF00

{vzO00FF

uzw{v{w&ex|uYFF00FF00FF00FF00FF00FF00

z6 {vz6 {P00FF00

{6 z6 |6 {T00FF00FF00FF00

$'6 {P00FF00

{O00FF

uzP00FF00

{6 {6 {6 {P00FF00

{6 $)R00FF00FF00

}w|6 {6 }xSFF00FF00FF00

$'uzP00FF00

{6 z6 $,6 {T00FF00FF00FF00

{6 {6 {6 {V00FF00FF00FF00FF00

{O00FF

uz6 z6 |6 {P00FF00

{6 &ex|uzZ00FF00FF00FF00FF00FF00FF00

~P00FF00

{6 zu|6 |xSFF00FF00FF00

$(u{xOFF00

}6 {6 {6 {6 }x$)R00FF00FF00

zuOFF00

$'6 {6 }6 {P00FF00

zu$'6 {P00FF00

{6 z6 $,6 {T00FF00FF00FF00

{6 {6 {xTFF00FF00FF00FF

xOFF00

{6 z6 |xOFF00

{6 &ex|uYFF00FF00FF00FF00FF00FF00

z6 ~P00FF00

zu|6 {6 |6 }R00FF00FF00

$*6 z6 }6 ~P00FF00

|6 {6 }6 $,vz6 {P00FF00

$'6 {6 }6 {P00FF00

zu$'6 {P00FF00

{6 z6 $,6 {T00FF00FF00FF00

{6 {6 {6 }T00FF00FF00FF00

}6 {6 z6 |6 }6 {6 &ex|uzZ00FF00FF00FF00FF00FF00FF00

z6 {6 zuQFF00FF00

{6 z6 zP00FF00

{T00FF00FF00FF00

$'6 {P00FF00

{P00FF00

~P00FF00

|6 {6 {P00FF00

{6 $)6 {6 {P00FF00

$'6 {6 {P00FF00

{P00FF00

{6 $'6 {P00FF00

{6 z6 z6 $)6 {S00FF00FF00FF

w|6 {6 {V00FF00FF00FF00FF00

{P00FF00

{6 z6 zP00FF00

{P00FF00

{6 &ex|uYFF00FF00FF00FF00FF00FF00

z6 {v~6 zv|u{vz6 {6 $(v{vz6 $'6 |v{v{v$/vzx{6 |vz6 {P00FF00

{6 $'6 {6 zv|u$)vz6 {P00FF00

~v{vz6 {6 zvz6 {6 {u{v{w&ex|uzZ00FF00FF00FF00FF00FF00FF00

$(6 {6 %d6 ':x|uYFF00FF00FF00FF00FF00FF00

z6 $)v%e6 ':x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 |6 }6 }6 }6 }6 }6 }6 }6 }6 }6 }6 }6 '~$Fx|uzZ00FF00FF00FF00FF00FF00FF00

zt00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
mFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00

'~$Dx|uYFF00FF00FF00FF00FF00FF00

z6 zx8Ax8Ax8Ax8Ax8Ax8Ax8Ax8Ax8Ax8Ax8Ax'~$Dx|uzZ00FF00FF00FF00FF00FF00FF00

{v{v{v{v{v{v{v{v{v{v{v{v'~$Ex|uYFF00FF00FF00FF00FF00FF00

z6 zx8Ax8Ax8Ax8Ax8Ax8Ax8Ax8Ax8Ax8Ax8Ax'~$Dx|uzZ00FF00FF00FF00FF00FF00FF00

zt00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
mFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00

'~$Dx|uYFF00FF00FF00FF00FF00FF00

z6 |6 }6 }6 }6 }6 }6 }6 }6 }6 }6 }6 }6 '~$Fx|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 zx$(u$/6 {P00FF00

{P00FF00

{6 $(vz6 {P00FF00

{6 zv$)vz6 {6 {6 |vzxzv{vz6 {O00FF

xOFF00

}6 ~v$(6 {6 zvzwz6 }w'+x|uzZ00FF00FF00FF00FF00FF00FF00

z6 $'6 }6 $/6 {P00FF00

{P00FF00

{6 $(6 |6 {P00FF00

{P00FF00

{6 $)6 {6 {6 zP00FF00

z6 {P00FF00

}6 {6 |6 z6 {P00FF00

}6 }6 }6 {6 $'6 {P00FF00

{P00FF00

{P00FF00

~6 z6 '*x|uYFF00FF00FF00FF00FF00FF00

z6 z6 $-6 $/6 {O00FF

u8AuOFF00

z6 |6 |6 |6 {O00FF

u8AuOFF00

$-6 {u8AuOFF00

{P00FF00

}6 }6 $(6 z6 {P00FF00

}6 }6 }6 {6 $'6 {P00FF00

{P00FF00

{P00FF00

~6 z6 '*x|uzZ00FF00FF00FF00FF00FF00FF00

z6 ~u}6 |v$(6 {X00FF00FF00FF00FF00FF00

|v{6 |6 {V00FF00FF00FF00FF00

$-6 {T00FF00FF00FF00

{P00FF00

}6 }6 $(6 z6 {P00FF00

}6 }6 }6 {6 $'6 {P00FF00

{P00FF00

{P00FF00

~6 z6 '*x|uYFF00FF00FF00FF00FF00FF00

z6 zw|6 }6 {6 {6 $(P00FF00

zS00FF00FF00FF

u~6 |6 }P00FF00

zR00FF00FF00

zv$*6 {T00FF00FF00FF00

{P00FF00

}w{v}6 zx8Awz6 }6 }6 {6 $'T00FF00FF00FF00

{O00FF

wz6 ~6 z6 '*x|uzZ00FF00FF00FF00FF00FF00FF00

z6 $'6 }6 {x$(P00FF00

z6 {R00FF00FF00

$*6 }P00FF00

z6 {6 }6 $)6 {6 {O00FF

xOFF00

zuOFF00

$)6 |6 z6 {P00FF00

}6 }6 }6 {6 $'T00FF00FF00FF00

{R00FF00FF00

{6 ~6 z6 '*x|uYFF00FF00FF00FF00FF00FF00

z6 z6 $'6 }6 {6 $,P00FF00

z6 {P00FF00

z6 $)6 }P00FF00

z6 {6 }6 $)6 {6 {P00FF00

{P00FF00

{P00FF00

$)6 |6 z6 {P00FF00

}6 }6 }6 {6 $'T00FF00FF00FF00

{P00FF00

z6 z6 ~6 z6 '*x|uzZ00FF00FF00FF00FF00FF00FF00

z6 $'6 }6 {6 {6 $)6 {6 {P00FF00

{6 {6 |6 ~6 {6 {P00FF00

{6 $)6 {6 {P00FF00

{P00FF00

{P00FF00

}6 {6 |6 z6 {P00FF00

}6 }6 }6 {6 {6 {u8AuOFF00

{P00FF00

{P00FF00

~6 z6 '*x|uYFF00FF00FF00FF00FF00FF00

z6 z6 ~v{v{v$*6 {6 {P00FF00

{6 zv{v|6 {6 {6 zv$)vz6 {P00FF00

{6 zvzxzv{vz6 {O00FF

x8Ax8Axzv{vz6 {6 zvz6 {O00FF

x8Aw'+x|uzZ00FF00FF00FF00FF00FF00FF00

$T6 $;x$k6 'Jx|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

$<6 $56 {6 $(u|u$Bu$'6 {6 'tx|uYFF00FF00FF00FF00FF00FF00

z6 $;u$56 {6 $)6 }6 $C6 $'6 {6 'tx|uzZ00FF00FF00FF00FF00FF00FF00

$:P00FF00

$56 {6 $)6 }6 $C6 $'6 {6 'tx|uYFF00FF00FF00FF00FF00FF00

z6 $<6 $56 {6 zv|6 }6 |v$(6 {6 zvzO00FF

u|6 |w{6 'tx|uzZ00FF00FF00FF00FF00FF00FF00

$<6 $5xOFF00

{6 {6 }6 {6 {6 $'6 {P00FF00

{O00FF

uz6 {6 {6 {6 {6 'tx|uYFF00FF00FF00FF00FF00FF00

z6 $<6 $56 {O00FF

x{6 }6 {6 {6 $'T00FF00FF00FF00

{P00FF00

$'6 {6 {6 {6 'tx|uzZ00FF00FF00FF00FF00FF00FF00

$<6 $56 {P00FF00

$'6 }6 {6 {6 $'T00FF00FF00FF00

{P00FF00

$'6 {6 {6 {6 'tx|uYFF00FF00FF00FF00FF00FF00

z6 $<6 $56 {P00FF00

{6 {6 }6 {6 {6 $'T00FF00FF00FF00

{P00FF00

$'6 {6 {6 'xx|uzZ00FF00FF00FF00FF00FF00FF00

$:x$36 {6 zv{v{v{v$)P00FF00

{vz6 ~v{w{6 'tx|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 $;v'~$ox|uzZ00FF00FF00FF00FF00FF00FF00

$:6 {6 '~$nx|uYFF00FF00FF00FF00FF00FF00

z6 $:6 {6 '~$nx|uzZ00FF00FF00FF00FF00FF00FF00

$>6 '~$nx|uYFF00FF00FF00FF00FF00FF00

z6 $=6 '~$ox|uzZ00FF00FF00FF00FF00FF00FF00

$<6 '~$px|uYFF00FF00FF00FF00FF00FF00

z6 $;6 '~$qx|uzZ00FF00FF00FF00FF00FF00FF00

$:6 '~$rx|uYFF00FF00FF00FF00FF00FF00

z6 $:x'~$nx|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 |6 }6 }6 }6 }6 }6 '~$jx|uzZ00FF00FF00FF00FF00FF00FF00

zp00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00

'~$hx|uYFF00FF00FF00FF00FF00FF00

z6 zx8Ax8Ax8Ax8Ax8Ax'~$hx|uzZ00FF00FF00FF00FF00FF00FF00

{v{v{v{v{v{v'~$ix|uYFF00FF00FF00FF00FF00FF00

z6 zx8Ax8Ax8Ax8Ax8Ax'~$hx|uzZ00FF00FF00FF00FF00FF00FF00

zp00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00

'~$hx|uYFF00FF00FF00FF00FF00FF00

z6 |6 }6 }6 }6 }6 }6 '~$jx|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 zx$(u$/6 {P00FF00

{P00FF00

{6 $(vz6 {P00FF00

{6 zv$)vz6 {6 {6 |vzxzv{vz6 {O00FF

xOFF00

}6 ~v$(6 {6 zvzxOFF00

{6 zvz6 {6 '$x|uzZ00FF00FF00FF00FF00FF00FF00

z6 $'6 }6 $/6 {P00FF00

{P00FF00

{6 $(6 |6 {P00FF00

{P00FF00

{6 $)6 {6 {6 zP00FF00

z6 {P00FF00

}6 {6 |6 z6 {P00FF00

}6 }6 }6 {6 $'6 {P00FF00

{P00FF00

}uz6 {6 {6 {6 '$x|uYFF00FF00FF00FF00FF00FF00

z6 z6 $-6 $/6 {O00FF

u8AuOFF00

z6 |6 |6 |6 {O00FF

u8AuOFF00

$-6 {u8AuOFF00

{P00FF00

}6 }6 $(6 z6 {P00FF00

}6 }6 }6 {6 $'6 {P00FF00

}6 }uz6 {6 |P00FF00

'%x|uzZ00FF00FF00FF00FF00FF00FF00

z6 ~u}6 |v$(6 {X00FF00FF00FF00FF00FF00

|v{6 |6 {V00FF00FF00FF00FF00

$-6 {T00FF00FF00FF00

{P00FF00

}6 }6 $(6 z6 {P00FF00

}6 }6 }6 {6 $'6 {P00FF00

}6 }R00FF00FF00

{6 |P00FF00

'%x|uYFF00FF00FF00FF00FF00FF00

z6 zw|6 }6 {6 {6 $(P00FF00

zS00FF00FF00FF

u~6 |6 }P00FF00

zR00FF00FF00

zv$*6 {T00FF00FF00FF00

{P00FF00

}w{v}6 zx8Awz6 }6 }6 {6 $'6 {6 zvzwzR00FF00FF00

{6 }6 '&x|uzZ00FF00FF00FF00FF00FF00FF00

z6 $'6 }6 {x$(P00FF00

z6 {R00FF00FF00

$*6 }P00FF00

z6 {6 }6 $)6 {6 {O00FF

xOFF00

zuOFF00

$)6 |6 z6 {P00FF00

}6 }6 }6 {6 $'6 {6 }P00FF00

}6 zu{6 |P00FF00

'%x|uYFF00FF00FF00FF00FF00FF00

z6 z6 $'6 }6 {6 $,P00FF00

z6 {P00FF00

z6 $)6 }P00FF00

z6 {6 }6 $)6 {6 {P00FF00

{P00FF00

{P00FF00

$)6 |6 z6 {P00FF00

}6 }6 }6 {6 $'6 {6 }P00FF00

}6 zu{6 |P00FF00

'%x|uzZ00FF00FF00FF00FF00FF00FF00

z6 $'6 }6 {6 {6 $)6 {6 {P00FF00

{6 {6 |6 ~6 {6 {P00FF00

{6 $)6 {6 {P00FF00

{P00FF00

{P00FF00

}6 {6 |6 z6 {P00FF00

}6 }6 }6 {6 {6 {6 {P00FF00

{P00FF00

}6 {6 {6 {6 {6 '$x|uYFF00FF00FF00FF00FF00FF00

z6 z6 ~v{v{v$*6 {6 {P00FF00

{6 zv{v|6 {6 {6 zv$)vz6 {P00FF00

{6 zvzxzv{vz6 {O00FF

x8Ax8Axzv{v{v{vzxOFF00

{6 zvz6 {6 '$x|uzZ00FF00FF00FF00FF00FF00FF00

$T6 $;x$k6 'Jx|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

$<6 $56 {6 $(u|u$/6 {6 zvzxOFF00

{6 zvz6 {6 {6 'nx|uYFF00FF00FF00FF00FF00FF00

z6 $;u$56 {6 $)6 }6 $/6 {P00FF00

{P00FF00

}uz6 {6 {6 {6 {6 'nx|uzZ00FF00FF00FF00FF00FF00FF00

$:P00FF00

$56 {6 $)6 }6 $/6 {P00FF00

}6 }uz6 {6 |P00FF00

|6 'nx|uYFF00FF00FF00FF00FF00FF00

z6 $<6 $56 {6 zv|6 }6 |v$(6 {P00FF00

}6 }R00FF00FF00

{6 |P00FF00

|6 'nx|uzZ00FF00FF00FF00FF00FF00FF00

$<6 $5xOFF00

{6 {6 }6 {6 {6 $'6 {6 zvzwzR00FF00FF00

{6 }6 }6 'nx|uYFF00FF00FF00FF00FF00FF00

z6 $<6 $56 {O00FF

x{6 }6 {6 {6 $'6 {6 }P00FF00

}6 zu{6 |P00FF00

|6 'nx|uzZ00FF00FF00FF00FF00FF00FF00

$<6 $56 {P00FF00

$'6 }6 {6 {6 $'6 {6 }P00FF00

}6 zu{6 |P00FF00

|6 'nx|uYFF00FF00FF00FF00FF00FF00

z6 $<6 $56 {P00FF00

{6 {6 }6 {6 {6 $'6 {P00FF00

{P00FF00

}6 {6 {6 {6 {6 'rx|uzZ00FF00FF00FF00FF00FF00FF00

$:x$36 {6 zv{v{v{v$)v{vzxOFF00

{6 zvz6 {6 {6 'nx|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 $;v'~$ox|uzZ00FF00FF00FF00FF00FF00FF00

$:6 {6 '~$nx|uYFF00FF00FF00FF00FF00FF00

z6 $:6 {6 '~$nx|uzZ00FF00FF00FF00FF00FF00FF00

$>6 '~$nx|uYFF00FF00FF00FF00FF00FF00

z6 $=6 '~$ox|uzZ00FF00FF00FF00FF00FF00FF00

$<6 '~$px|uYFF00FF00FF00FF00FF00FF00

z6 $;6 '~$qx|uzZ00FF00FF00FF00FF00FF00FF00

$:6 '~$rx|uYFF00FF00FF00FF00FF00FF00

z6 $:x'~$nx|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 |6 }6 }6 }6 }6 }6 }6 }6 }6 }6 }6 }6 '~$Fx|uzZ00FF00FF00FF00FF00FF00FF00

zt00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
mFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00

'~$Dx|uYFF00FF00FF00FF00FF00FF00

z6 zx8Ax8Ax8Ax8Ax8Ax8Ax8Ax8Ax8Ax8Ax8Ax'~$Dx|uzZ00FF00FF00FF00FF00FF00FF00

{v{v{v{v{v{v{v{v{v{v{v{v'~$Ex|uYFF00FF00FF00FF00FF00FF00

z6 zx8Ax8Ax8Ax8Ax8Ax8Ax8Ax8Ax8Ax8Ax8Ax'~$Dx|uzZ00FF00FF00FF00FF00FF00FF00

zt00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00
mFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00

'~$Dx|uYFF00FF00FF00FF00FF00FF00

z6 |6 }6 }6 }6 }6 }6 }6 }6 }6 }6 }6 }6 '~$Fx|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

z6 {6 $-6 $?u$,6 $)u|u%%u$86 $/6 &gx|uYFF00FF00FF00FF00FF00FF00

z6 zuz6 $-6 $>6 z6 $+6 {6 |6 z6 z6 z6 $^6 ~6 $<6 z6 $76 $.u&gx|uzZ00FF00FF00FF00FF00FF00FF00

zuz6 $-6 $>6 $.6 $(6 }6 $a6 $C6 $:6 {6 $)P00FF00

&gx|uYFF00FF00FF00FF00FF00FF00

z6 zT00FF00FF00FF00

{O00FF

uOFF00

zw{vzO00FF

u$)v{6 $+wzu|6 }6 }vzO00FF

u{vzO00FF

u{v{v$)v{v{vzw{u|vzO00FF

u{v$)6 }vz6 {Q00FF00FF

u{wzv$*6 &gx|uzZ00FF00FF00FF00FF00FF00FF00

zT00FF00FF00FF00

{V00FF00FF00FF00FF00

{P00FF00

{O00FF

uz6 $'6 {O00FF

w$(6 {6 {6 {wzwz6 {O00FF

uzP00FF00

{O00FF

uzP00FF00

{P00FF00

{6 $'6 {P00FF00

{P00FF00

{6 z6 ~6 {6 {O00FF

uzP00FF00

{6 $'wz6 {P00FF00

{O00FF

uzP00FF00

{6 {6 $+6 &gx|uYFF00FF00FF00FF00FF00FF00

z6 z6 zuOFF00

{V00FF00FF00FF00FF00

{O00FF

xOFF00

$+6 {6 z6 $*6 {6 {6 |6 }6 |xOFF00

}xOFF00

{P00FF00

}x$(u{xOFF00

~6 ~6 {6 {P00FF00

{6 zu$*6 |6 {P00FF00

{P00FF00

{P00FF00

{6 $/6 &gx|uzZ00FF00FF00FF00FF00FF00FF00

z6 zuOFF00

{V00FF00FF00FF00FF00

{P00FF00

}6 $+6 {6 z6 $*6 {6 {6 |6 }6 |6 }6 }6 }6 {P00FF00

}6 $.6 z6 }6 ~6 ~6 {6 {P00FF00

{6 |6 $)6 |6 {P00FF00

{P00FF00

{P00FF00

{6 $/6 &gx|uYFF00FF00FF00FF00FF00FF00

z6 z6 {P00FF00

zuUFF00FF00FF00FF00

{P00FF00

{P00FF00

$+6 {6 z6 $*6 {6 {6 |6 }6 |6 {P00FF00

}6 {P00FF00

{P00FF00

{P00FF00

{6 $'6 {P00FF00

{P00FF00

{6 z6 z6 {6 {6 {P00FF00

{P00FF00

{6 $(6 |6 {P00FF00

zuOFF00

{P00FF00

{6 {6 $+6 &gx|uzZ00FF00FF00FF00FF00FF00FF00

z6 {6 zuQFF00FF00

{O00FF

w{vz6 $,v{6 $+wzv{6 }6 }vz6 ~vz6 {6 zv{v$)v{v{v|u{v{vz6 {6 zv$)6 }v{uQFF00FF00

{6 zwzv$(x&ex|uYFF00FF00FF00FF00FF00FF00

z6 &86 &sx|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 z6 {6 $-6 $?u$,6 $)u|u$n6 $/u$86 $/6 &mx|uzZ00FF00FF00FF00FF00FF00FF00

zuz6 $-6 $>6 z6 $+6 {6 |6 z6 z6 z6 $m6 $.6 z6 $76 $.u&mx|uYFF00FF00FF00FF00FF00FF00

z6 zuz6 $-6 $>6 $.6 $(6 }6 $p6 $.6 $:6 {6 $)P00FF00

&mx|uzZ00FF00FF00FF00FF00FF00FF00

zT00FF00FF00FF00

{O00FF

uOFF00

zw{vzO00FF

u$)v{6 $+wzu|6 }6 }vzO00FF

u{vzO00FF

u{v{v$(O00FF

u{v{v{vzO00FF

u{wzv$)6 }vz6 {Q00FF00FF

u{wzv$*6 &mx|uYFF00FF00FF00FF00FF00FF00

z6 zT00FF00FF00FF00

{V00FF00FF00FF00FF00

{P00FF00

{O00FF

uz6 $'6 {O00FF

w$(6 {6 {6 {wzwz6 {O00FF

uzP00FF00

{O00FF

uzP00FF00

{P00FF00

{6 $'uzP00FF00

{P00FF00

{P00FF00

{O00FF

uzP00FF00

{P00FF00

{6 $'wz6 {P00FF00

{O00FF

uzP00FF00

{6 {6 $+6 &mx|uzZ00FF00FF00FF00FF00FF00FF00

z6 zuOFF00

{V00FF00FF00FF00FF00

{O00FF

xOFF00

$+6 {6 z6 $*6 {6 {6 |6 }6 |xOFF00

}xOFF00

{P00FF00

}x$'6 }xOFF00

}6 {P00FF00

}6 {6 zu$*6 |6 {P00FF00

{P00FF00

{P00FF00

{6 $/6 &mx|uYFF00FF00FF00FF00FF00FF00

z6 z6 zuOFF00

{V00FF00FF00FF00FF00

{P00FF00

}6 $+6 {6 z6 $*6 {6 {6 |6 }6 |6 }6 }6 }6 {P00FF00

}6 $+6 }6 }6 }6 {P00FF00

}6 {6 |6 $)6 |6 {P00FF00

{P00FF00

{P00FF00

{6 $/6 &mx|uzZ00FF00FF00FF00FF00FF00FF00

z6 {P00FF00

zuUFF00FF00FF00FF00

{P00FF00

{P00FF00

$+6 {6 z6 $*6 {6 {6 |6 }6 |6 {P00FF00

}6 {P00FF00

{P00FF00

{P00FF00

{6 $'6 }6 {P00FF00

{P00FF00

{P00FF00

}6 {P00FF00

{6 $(6 |6 {P00FF00

zuOFF00

{P00FF00

{6 {6 $+6 &mx|uYFF00FF00FF00FF00FF00FF00

z6 z6 {6 zuQFF00FF00

{O00FF

w{vz6 $,v{6 $+wzv{6 }6 }vz6 ~vz6 {6 zv{v$(6 ~v{v{vz6 ~wzv$)6 }v{uQFF00FF00

{6 zwzv$(x&kx|uzZ00FF00FF00FF00FF00FF00FF00

&26 &yx|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 zw{vzx8Ax8Ax8AwzxOFF00

{6 zvzxzv$,6 zv{vz6 {6 zvzwzx$*6 {6 $(P00FF00

{O00FF

x8Aw{vzx8Aw$*6 '2x|uzZ00FF00FF00FF00FF00FF00FF00

{6 z6 {6 {6 }6 }6 }6 {P00FF00

}uzP00FF00

{P00FF00

}6 {6 $+6 {6 {6 {O00FF

uzP00FF00

{P00FF00

{P00FF00

$-6 }6 $'P00FF00

{P00FF00

}6 {P00FF00

{P00FF00

~6 z6 $(u'2x|uYFF00FF00FF00FF00FF00FF00

z6 {6 z6 {6 {6 }6 }6 }6 {P00FF00

}uzP00FF00

}6 }6 $.6 |6 {6 }uzP00FF00

{P00FF00

{P00FF00

$-6 }6 ~6 zu8AuOFF00

}6 {P00FF00

}6 ~6 z6 $'P00FF00

'2x|uzZ00FF00FF00FF00FF00FF00FF00

{6 z6 {6 {6 }6 }6 }6 {P00FF00

}T00FF00FF00FF00

}6 }6 $.6 |6 {6 }T00FF00FF00FF00

{P00FF00

{P00FF00

}xz6 $'6 }6 zT00FF00FF00FF00

}6 {P00FF00

}6 ~6 zO00FF

x{6 '2x|uYFF00FF00FF00FF00FF00FF00

z6 {6 z6 {6 {wzwzwzwzwzT00FF00FF00FF00

}w{v$*6 }6 {6 }T00FF00FF00FF00

{O00FF

wzw$)6 $'6 |6 {S00FF00FF00FF

wzwz6 }w{6 z6 $)6 {x'*x|uzZ00FF00FF00FF00FF00FF00FF00

{6 z6 {6 {6 }6 }6 }P00FF00

{6 }6 zuOFF00

}6 $)6 $(6 ~6 {6 zuOFF00

zuOFF00

{R00FF00FF00

{6 $,6 $'6 {6 |6 {P00FF00

}P00FF00

{6 zuOFF00

~6 z6 $)6 '2x|uYFF00FF00FF00FF00FF00FF00

z6 {6 z6 {6 {6 }6 }6 }6 z6 z6 }6 zuOFF00

}6 $)6 $(6 ~6 {6 {P00FF00

zuOFF00

{P00FF00

z6 z6 }x{6 }6 |6 |6 {P00FF00

}6 z6 z6 {P00FF00

~6 zO00FF

x{6 '2x|uzZ00FF00FF00FF00FF00FF00FF00

{6 z6 {6 {6 }6 }6 }6 {P00FF00

}6 {P00FF00

{P00FF00

}6 {6 $'6 $'6 {6 {P00FF00

{P00FF00

{P00FF00

{P00FF00

$-6 }6 {6 }6 {P00FF00

}6 {P00FF00

{P00FF00

~6 z6 $)6 '2x|uYFF00FF00FF00FF00FF00FF00

z6 zw{vz6 }6 }xOFF00

{O00FF

xOFF00

{6 zvzxzv$(6 ~v{vz6 {6 zvz6 {O00FF

x$*6 {6 |6 }6 {O00FF

xOFF00

{6 zvzx8Aw$(x'0x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

$:6 {P00FF00

{P00FF00

{6 $(vz6 {P00FF00

{6 zv$)vz6 {6 {6 |vzxzv{vz6 {O00FF

xOFF00

}6 ~v$(6 {6 zvzwz6 }w'1x|uYFF00FF00FF00FF00FF00FF00

z6 $:6 {P00FF00

{P00FF00

{6 $(6 |6 {P00FF00

{P00FF00

{6 $)6 {6 {6 zP00FF00

z6 {P00FF00

}6 {6 |6 z6 {P00FF00

}6 }6 }6 {6 $'6 {P00FF00

{P00FF00

{P00FF00

~6 z6 '0x|uzZ00FF00FF00FF00FF00FF00FF00

$:6 {O00FF

u8AuOFF00

z6 |6 |6 |6 {O00FF

u8AuOFF00

$-6 {u8AuOFF00

{P00FF00

}6 }6 $(6 z6 {P00FF00

}6 }6 }6 {6 $'6 {P00FF00

{P00FF00

{P00FF00

~6 z6 '0x|uYFF00FF00FF00FF00FF00FF00

z6 $:6 {X00FF00FF00FF00FF00FF00

|v{6 |6 {V00FF00FF00FF00FF00

$-6 {T00FF00FF00FF00

{P00FF00

}6 }6 $(6 z6 {P00FF00

}6 }6 }6 {6 $'6 {P00FF00

{P00FF00

{P00FF00

~6 z6 '0x|uzZ00FF00FF00FF00FF00FF00FF00

$;P00FF00

zS00FF00FF00FF

u~6 |6 }P00FF00

zR00FF00FF00

zv$*6 {T00FF00FF00FF00

{P00FF00

}w{v}6 zx8Awz6 }6 }6 {6 $'T00FF00FF00FF00

{O00FF

wz6 ~6 zO00FF

x'*x|uYFF00FF00FF00FF00FF00FF00

z6 $;P00FF00

z6 {R00FF00FF00

$*6 }P00FF00

z6 {6 }6 $)6 {6 {O00FF

xOFF00

zuOFF00

$)6 |6 z6 {P00FF00

}6 }6 }6 {6 $'T00FF00FF00FF00

{R00FF00FF00

{6 ~6 z6 '0x|uzZ00FF00FF00FF00FF00FF00FF00

$;P00FF00

z6 {P00FF00

z6 $)6 }P00FF00

z6 {6 }6 $)6 {6 {P00FF00

{P00FF00

{P00FF00

$)6 |6 z6 {P00FF00

}6 }6 }6 {6 $'T00FF00FF00FF00

{P00FF00

z6 z6 ~6 z6 '0x|uYFF00FF00FF00FF00FF00FF00

z6 $<6 {6 {P00FF00

{6 {6 |6 ~6 {6 {P00FF00

{6 $)6 {6 {P00FF00

{P00FF00

{P00FF00

}6 {6 |6 z6 {P00FF00

}6 }6 }6 {6 {6 {u8AuOFF00

{P00FF00

{P00FF00

~6 z6 '0x|uzZ00FF00FF00FF00FF00FF00FF00

$<6 {6 {P00FF00

{6 zv{v|6 {6 {6 zv$)vz6 {P00FF00

{6 zvzxzv{vz6 {O00FF

x8Ax8Axzv{vz6 {6 zvz6 {O00FF

x8Aw'1x|uYFF00FF00FF00FF00FF00FF00

z6 $N6 $;x$k6 'Px|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|uYFF00FF00FF00FF00FF00FF00

z6 $:6 {P00FF00

{P00FF00

{6 $(vz6 {P00FF00

{6 zv$)vz6 {6 {6 |vzxzv{vz6 {O00FF

xOFF00

}6 ~v$(6 {6 zvzxOFF00

{6 zvz6 {6 '*x|uzZ00FF00FF00FF00FF00FF00FF00

$:6 {P00FF00

{P00FF00

{6 $(6 |6 {P00FF00

{P00FF00

{6 $)6 {6 {6 zP00FF00

z6 {P00FF00

}6 {6 |6 z6 {P00FF00

}6 }6 }6 {6 $'6 {P00FF00

{P00FF00

}uz6 {6 {6 {6 '*x|uYFF00FF00FF00FF00FF00FF00

z6 $:6 {O00FF

u8AuOFF00

z6 |6 |6 |6 {O00FF

u8AuOFF00

$-6 {u8AuOFF00

{P00FF00

}6 }6 $(6 z6 {P00FF00

}6 }6 }6 {6 $'6 {P00FF00

}6 }uz6 {6 |P00FF00

'+x|uzZ00FF00FF00FF00FF00FF00FF00

$:6 {X00FF00FF00FF00FF00FF00

|v{6 |6 {V00FF00FF00FF00FF00

$-6 {T00FF00FF00FF00

{P00FF00

}6 }6 $(6 z6 {P00FF00

}6 }6 }6 {6 $'6 {P00FF00

}6 }R00FF00FF00

{6 |P00FF00

'+x|uYFF00FF00FF00FF00FF00FF00

z6 $;P00FF00

zS00FF00FF00FF

u~6 |6 }P00FF00

zR00FF00FF00

zv$*6 {T00FF00FF00FF00

{P00FF00

}w{v}6 zx8Awz6 }6 }6 {6 $'6 {6 zvzwzR00FF00FF00

{6 }6 ',x|uzZ00FF00FF00FF00FF00FF00FF00

$;P00FF00

z6 {R00FF00FF00

$*6 }P00FF00

z6 {6 }6 $)6 {6 {O00FF

xOFF00

zuOFF00

$)6 |6 z6 {P00FF00

}6 }6 }6 {6 $'6 {6 }P00FF00

}6 zu{6 |P00FF00

'+x|uYFF00FF00FF00FF00FF00FF00

z6 $;P00FF00

z6 {P00FF00

z6 $)6 }P00FF00

z6 {6 }6 $)6 {6 {P00FF00

{P00FF00

{P00FF00

$)6 |6 z6 {P00FF00

}6 }6 }6 {6 $'6 {6 }P00FF00

}6 zu{6 |P00FF00

'+x|uzZ00FF00FF00FF00FF00FF00FF00

$<6 {6 {P00FF00

{6 {6 |6 ~6 {6 {P00FF00

{6 $)6 {6 {P00FF00

{P00FF00

{P00FF00

}6 {6 |6 z6 {P00FF00

}6 }6 }6 {6 {6 {6 {P00FF00

{P00FF00

}6 {6 {6 {6 {6 '*x8AxYFF00FF00FF00FF00FF00FF00

z6 $<6 {6 {P00FF00

{6 zv{v|6 {6 {6 zv$)vz6 {P00FF00

{6 zvzxzv{vz6 {O00FF

x8Ax8Axzv{v{v{vzxOFF00

{6 zvz6 {6 '( '}6 zZ00FF00FF00FF00FF00FF00FF00

$N6 $;x$k6 'Qw|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

$.y'~$yx|uYFF00FF00FF00FF00FF00FF00

z6 |6 $)6 |6 '~$yx|uzZ00FF00FF00FF00FF00FF00FF00

{v$(6 |6 '~$yx|uYFF00FF00FF00FF00FF00FF00

z6 zP00FF00

$)6 |6 '~$yx|uzZ00FF00FF00FF00FF00FF00FF00

zP00FF00

$)6 |6 '~$yx|uYFF00FF00FF00FF00FF00FF00

z6 {v$(6 |6 '~$yx|uzZ00FF00FF00FF00FF00FF00FF00

|P00FF00

$'6 |6 '~$yx|uYFF00FF00FF00FF00FF00FF00

z6 |P00FF00

$'6 |6 '~$yx|uzZ00FF00FF00FF00FF00FF00FF00

{v$(6 |6 '~$yx|uYFF00FF00FF00FF00FF00FF00

z6 |6 $)6 |6 '~$yx|uzZ00FF00FF00FF00FF00FF00FF00

$.6 |6 '~$yx|uYFF00FF00FF00FF00FF00FF00

z6 $.6 |6 '~$yx|uzZ00FF00FF00FF00FF00FF00FF00

$.y'~$yx|uYFF00FF00FF00FF00FF00FF00

z6 '~%.x|uzZ00FF00FF00FF00FF00FF00FF00

'~%.x|u'~%=x|6 '~%>x$66 '~$u6 $5x$66 '~$u6 $5xz 58A#~ u8A 98A#~#~"l
end e


R


R
R

showpage
$P e

%%Page: 14 14
/$P a D
g N
0 79200 T
S
S
7200 -74700 T
N
0 G
23400 -1188 M
-7200 74700 T
R

R
S
9000 -6600 T
N
0 G
288 -1188 M
/Times-Bold-ISOLatin1 $
/Times-Bold & P
/Times-Bold-ISOLatin1 F 1200 o f
(4.1.1 ) h
2988 -1188 M
(Authentication) h
288 -3438 M
/Times-Roman-ISOLatin1 $
/Times-Roman & P
/Times-Roman-ISOLatin1 F 1000 o f
107.3 0 32 (We found it efficient to have VMS servers conduct authentication once for each client, and on success) W
288 -4638 M
50.2 0 32 (reward the client with the assignment of a server port.  Since Mach tasks cannot manipulate ports except) W
288 -5838 M
36.7 0 32 (via Mach kernel calls, we can be sure that all messages delivered through this port originate from the cli\255) W
288 -7038 M
35.1 0 32 (ent to which the port was assigned.  Furthermore, Mach developers pointed out that the port name can be) W
288 -8238 M
93.7 0 32 (set to a virtual memory address, and, since this name is supplied by the Mach kernel for received mes\255) W
288 -9438 M
33.6 0 32 (sages and cannot be forged, it can be used to point directly to the data structure element corresponding to) W
288 -10638 M
89.0 0 32 (the client to which the port was assigned.  This eliminates a number of checks that would otherwise be) W
288 -11838 M
54.0 0 32 (required.  Use of ports in this way means that for each class of service, where we would otherwise use a) W
288 -13038 M
64.9 0 32 (single service port, we now use one port for each client so that we can identify the client using the port. ) W
288 -14238 M
16.6 0 32 (The total number of ports required is therefore on the order of the number of service classes multiplied by) W
288 -15438 M
(the number of clients.  The resource implications of this require further study.) h
288 -18188 M
/Times-Bold-ISOLatin1 F 1200 o f
(4.1.2 ) h
2988 -18188 M
(VAX Access Modes) h
288 -20438 M
/Times-Roman-ISOLatin1 F 1000 o f
35.8 0 32 (The VAX architecture defines four access modes, which implement a protection\255ring scheme for limiting) W
288 -21638 M
52.1 0 32 (access to data residing in the virtual address space.  In place of rings superimposed on a common virtual) W
288 -22838 M
1.4 0 32 (address space, our model uses separate virtual address spaces in the form of separate Mach tasks, resulting) W
288 -24038 M
(in a more constrained strategy for data sharing.) h
288 -25638 M
112.6 0 32 (The VAX architecture allows the current VMS implementation to access data of less privileged modes) W
288 -26838 M
36.1 0 32 (using direct memory references.  With a client\255server model, access to this type of data typically requires) W
288 -28038 M
5.6 0 32 (one or two IPC messages.  Our model minimizes the need for these IPC messages by data partitioning and) W
288 -29238 M
103.9 0 32 (localized access.  We did not, however, encounter any difficulties in preventing access to data of more) W
288 -30438 M
(privileged access modes.) h
288 -33188 M
/Times-Bold-ISOLatin1 F 1200 o f
(4.1.3 ) h
2988 -33188 M
(Scheduling and Memory Management Policies) h
288 -35438 M
/Times-Roman-ISOLatin1 F 1000 o f
33.4 0 32 (It is not feasible to reproduce the VMS scheduling policies using Mach.  VMS decrements the size of the) W
288 -36638 M
60.5 0 32 (time quantum assigned to the currently executing thread each time the time quantum expires, and boosts) W
288 -37838 M
10.0 0 32 (the priority of the currently executing thread when involuntary waits occur.  While the exact VMS seman\255) W
288 -39038 M
58.1 0 32 (tics may not be possible, the Mach time sharing scheduling policy [2] does have the same basic goals as) W
288 -40238 M
112.5 0 32 (the VMS scheduling policy, namely to be responsive to interactive processing while preventing starva\255) W
288 -41438 M
114.0 0 32 (tion.  Therefore the difficulty in implementing the exact semantics of the VMS algorithm at the server) W
288 -42638 M
56.5 0 32 (level is not a major issue.  An exception to this occurs in the case of deadline scheduling, which may be) W
288 -43838 M
(needed for implementing network protocols.) h
288 -45438 M
41.0 0 32 (A similar situation exists with regard to memory management.  Mach does not use the same mechanisms) W
288 -46638 M
113.6 0 32 (as VMS to balance free\255page deficits.  Swapping, for example, is not used by Mach.  We also did not) W
288 -47838 M
126.2 0 32 (attempt to model VMS process working sets \(the process' virtual pages that are currently valid and in) W
288 -49038 M
14.3 0 32 (physical memory\).  The Mach kernel does not currently export an association of resident pages to tasks or) W
288 -50238 M
91.5 0 32 (allow externally influenced per\255task page replacement, both of which are needed to implement working) W
288 -51438 M
(sets.) h
288 -54188 M
/Times-Bold-ISOLatin1 F 1200 o f
(4.1.4 ) h
2988 -54188 M
(Kernel Resource Management) h
288 -56438 M
/Times-Roman-ISOLatin1 F 1000 o f
10.5 0 32 (Management of kernel resources is needed to isolate the ill effects of any one VMS user image from other) W
288 -57638 M
16.6 0 32 (VMS processes and servers, and indeed from future user images of the same VMS process.  Tasks that do) W
288 -58838 M
79.8 0 32 (not cooperate must not be able to interfere with each other by tying up resources.  Such management is) W
288 -60038 M
16.9 0 32 (performed within VMS by the use of quotas.  The Mach kernel does not supply any way to impose limits,) W
288 -61238 M
30.7 0 32 (such as quotas, on tasks.  In an implementation of a production operating system environment, a resource) W
288 -62438 M
(model is needed to control memory and processor usage on a task basis.) h
-9000 6600 T
R

showpage
$P e

%%Page: 15 15
/$P a D
g N
0 79200 T
S
S
7200 -74700 T
N
0 G
23400 -1188 M
-7200 74700 T
R

R
S
9000 -6600 T
N
0 G
288 -1188 M
/Times-Bold-ISOLatin1 $
/Times-Bold & P
/Times-Bold-ISOLatin1 F 1200 o f
(4.1.5 ) h
2988 -1188 M
(Device Drivers) h
288 -3438 M
/Times-Roman-ISOLatin1 $
/Times-Roman & P
/Times-Roman-ISOLatin1 F 1000 o f
51.1 0 32 (In the version of the Mach kernel used in our model, device drivers reside in the kernel.  While an inter\255) W
288 -4638 M
35.8 0 32 (rupt service routine needs to be located in the kernel, it should provide minimal function, relegating most) W
288 -5838 M
5.6 0 32 (of the work to a user\255level task.  Also, device drivers can be partitioned to reduce the amount of replicated) W
288 -7038 M
(code.  These modifications are being addressed by Mach developers at CMU [4].) h
288 -10088 M
/Times-Bold-ISOLatin1 F 1200 o f
(4.2 ) h
2088 -10088 M
(Future Directions) h
288 -12338 M
/Times-Roman-ISOLatin1 F 1000 o f
156.5 0 32 (We have not fully addressed a number of topics that we nevertheless feel are important to explore if) W
288 -13538 M
27.3 0 32 (VMS\255on\255Mach is to become a practical operating system environment.  These topics are described in this) W
288 -14738 M
(section.) h
288 -17488 M
/Times-Bold-ISOLatin1 F 1200 o f
(4.2.1 ) h
2988 -17488 M
(Performance Optimizations) h
288 -19738 M
/Times-Roman-ISOLatin1 F 1000 o f
131.6 0 32 (In order for VMS\255on\255Mach to be a viable alternative, it must have performance comparable to that of) W
288 -20938 M
50.2 0 32 (VAX/VMS.  Preliminary measurements indicate that unoptimized performance is likely to be unsatisfac\255) W
288 -22138 M
89.6 0 32 (tory, but large gains can probably be made through judicious optimizations that do not detract from the) W
288 -23338 M
91.5 0 32 (advantages of the multi\255server model.  In order to identify the needed optimizations, we must carry out) W
288 -24538 M
43.1 0 32 (carefully designed measurements.  Most of these measurements \(and therefore most of the resulting opti\255) W
288 -25738 M
238.4 0 32 (mizations\) can only be made after more of the VMS\255on\255Mach model has been implemented.  Our) W
288 -26938 M
(thoughts on possible optimizations are described here.) h
288 -29388 M
/Times-Bold-ISOLatin1 F 1200 o f
(4.2.1.1 ) h
3888 -29388 M
(Proxies) h
288 -31438 M
/Times-Roman-ISOLatin1 F 1000 o f
63.7 0 32 (A proxy [10] is a section of code and/or data resident in a client's address space, which acts as an agent) W
288 -32638 M
67.5 0 32 (for a server.  The client may be a user space task or a VMS server.  The proxy is considered part of the) W
288 -33838 M
16.4 0 32 (server and can be dynamically loaded into the client by the server.  The advantage of using a proxy is that) W
288 -35038 M
48.1 0 32 (a client's address space can be accessed directly.  Invoking a proxy incurs only the cost of a local proce\255) W
288 -36238 M
(dure call instead of the cost of an RPC to the server.) h
288 -37838 M
4.2 0 32 (One of the primary uses of a proxy is to provide a client\255side access window to information maintained by) W
288 -39038 M
38.2 0 32 (a server.  Proxy use can considerably reduce client\255server communication, thereby reducing the overhead) W
288 -40238 M
(and latency of accessing the data.) h
288 -41838 M
53.5 0 32 (Currently we have not identified any specific use of proxies, but we believe the concept would be useful) W
288 -43038 M
28.7 0 32 (in a full operating system implementation using our approach.  For instance, one possible use might be in) W
288 -44238 M
(implementing I/O read buffering.) h
288 -46688 M
/Times-Bold-ISOLatin1 F 1200 o f
(4.2.1.2 ) h
3888 -46688 M
(Distributed Data) h
288 -48738 M
/Times-Roman-ISOLatin1 F 1000 o f
42.0 0 32 (Strictly speaking, the client\255server paradigm used in our model dictates that a single server is responsible) W
288 -49938 M
103.6 0 32 (for managing a specific piece of data, and that all references to the data are performed by RPCs to the) W
288 -51138 M
92.9 0 32 (managing server.  This philosophy makes updates cheap but references expensive, and is inefficient for) W
288 -52338 M
88.1 0 32 (data that is frequently referenced but seldom modified.  For this reason, we envision relaxing this para\255) W
288 -53538 M
0.9 0 32 (digm to allow copies of selected data to reside in multiple servers, with an RPC being used to update these) W
288 -54738 M
(copies.  To date, however, we have not identified specific uses of this technique.) h
288 -57188 M
/Times-Bold-ISOLatin1 F 1200 o f
(4.2.1.3 ) h
3888 -57188 M
(Message Transport Independent of User Interface) h
288 -59238 M
/Times-Roman-ISOLatin1 F 1000 o f
121.7 0 32 (The Mach kernel provides in\255line and out\255of\255line modes of message transport.  With in\255line mode, the) W
288 -60438 M
110.5 0 32 (data is sent along with the message; with out\255of\255line mode, the message specifies the data location but) W
288 -61638 M
30.8 0 32 (does not actually include the data.  In\255line mode is appropriate for short messages while out\255of\255line mode) W
288 -62838 M
66.5 0 32 (is preferable for long messages.  The choice of passing data in\255line or out\255of\255line is an optimization that) W
288 -64038 M
(should be made by the message subsystem.  Software changes should not be required.) h
-9000 6600 T
R

showpage
$P e

%%Page: 16 16
/$P a D
g N
0 79200 T
S
S
7200 -74700 T
N
0 G
23400 -1188 M
-7200 74700 T
R

R
S
9000 -6600 T
N
0 G
288 -1038 M
/Times-Roman-ISOLatin1 $
/Times-Roman & P
/Times-Roman-ISOLatin1 F 1000 o f
39.2 0 32 (If two servers that send messages to each other are bundled into the same task, server code should not be) W
288 -2238 M
177.3 0 32 (required to optimize the transport mode used to send messages between these servers.  For instance,) W
288 -3438 M
(shared memory might be utilized as the basis for an optimized transport mode.) h
288 -5038 M
78.9 0 32 (To avoid intrusion of optimization decisions into the source code of VMS\255on\255Mach, we looked into de\255) W
288 -6238 M
44.5 0 32 (signing a mechanism in our model so that the message transport mode may be chosen automatically, and) W
288 -7438 M
(the user does not need to explicitly indicate the transport mode.) h
288 -10188 M
/Times-Bold-ISOLatin1 $
/Times-Bold & P
/Times-Bold-ISOLatin1 F 1200 o f
(4.2.2 ) h
2988 -10188 M
(Other Interesting Topics) h
288 -12438 M
/Times-Roman-ISOLatin1 F 1000 o f
44.7 0 32 (A number of important operating system features and subsystems were not examined in our effort so far. ) W
288 -13638 M
(These need to be incorporated into our model.) h
288 -15238 M
54.7 0 32 (VAXcluster technology provides users with an available and distributed computing environment.  Multi\255) W
288 -16438 M
36.7 0 32 (ple computing resources are used to create a cohesive environment that facilitates the dynamic sharing of) W
288 -17638 M
68.1 0 32 (devices and files.  The use of micro\255kernel and client\255server technologies provide us with additional op\255) W
288 -18838 M
37.5 0 32 (portunities for delivering distributed computing.  In light of this we need to examine how these technolo\255) W
288 -20038 M
(gies might be used to provide for, and enhance, the features of VAXcluster systems.) h
288 -21638 M
76.6 0 32 (We need to define the generic I/O, file system, and record management services that the I/O server, file) W
288 -22838 M
19.2 0 32 (system server, and record management server will provide, and identify the work that must be done in the) W
288 -24038 M
18.6 0 32 (user library to build an I/O subsystem for user images.  High performance of the I/O and file system serv\255) W
288 -25238 M
55.2 0 32 (ers is crucial to the success of our model.  This is achieved by ensuring that overhead\255inducing layers of) W
288 -26438 M
(software can be bypassed if their capabilities are not required.) h
288 -28038 M
46.3 0 32 (We are interested in exploring the issues related to orchestrating multiple operating system environments) W
288 -29238 M
63.6 0 32 (on the same kernel, as well as to cooperation among distributed \(multi\255\) computing systems.  For exam\255) W
288 -30438 M
71.7 0 32 (ple, a philosophy is needed to provide for management of underlying kernel resources and multiple per\255) W
288 -31638 M
(sonality environments.  In addition, thought needs to be given to the networking model for such a system.) h
288 -33238 M
18801 -35988 M
/Times-Bold-ISOLatin1 F 1200 o f
(References) h
288 -38638 M
/Times-Roman-ISOLatin1 F 1000 o f
([1]) h
2088 -38638 M
136.3 0 32 (Accetta, Mike, Baron, Robert, Golub, David, Rashid, Richard, Tevanian, Avadis, and Young, Mi\255) W
2088 -39838 M
51.0 0 32 (chael, ) W
/Times-Italic-ISOLatin1 $
/Times-Italic & P
/Times-Italic-ISOLatin1 F 1000 o f
51.0 0 32 (Mach: A New Kernel Foundation For UNIX Development) W
/Times-Roman-ISOLatin1 F 1000 o f
51.0 0 32 (, Technical Report, School of Com\255) W
2088 -41038 M
(puter Science, Carnegie Mellon University, August, 1986.) h
2088 -42238 M
288 -43838 M
([2]) h
2088 -43838 M
79.4 0 32 (Black, David L., "Scheduling Support for Concurrency and Parallelism in the Mach Operating Sys\255) W
2088 -45038 M
(tem", ) h
/Times-Italic-ISOLatin1 F 1000 o f
(Computer) h
/Times-Roman-ISOLatin1 F 1000 o f
(, vol. 23, no. 5, pp. 35\25543, May, 1990.) h
2088 -46238 M
288 -47838 M
([3]) h
2088 -47838 M
20.2 0 32 (Black, David L., Golub, David B., Hauth, Karl, Tevanian, Avadis, and Sanzi, Richard, ) W
/Times-Italic-ISOLatin1 F 1000 o f
20.2 0 32 (The Mach Ex\255) W
2088 -49038 M
400.6 0 32 (ception Handling Facility) W
/Times-Roman-ISOLatin1 F 1000 o f
400.6 0 32 (, Technical Report CMU\255CS\25588\255129, School of Computer Science,) W
2088 -50238 M
(Carnegie Mellon University, April, 1988.) h
2088 -51438 M
288 -53038 M
([4]) h
2088 -53038 M
16.8 0 32 (Forin, Alessandro, Golub, David, and Bershad, Brian, "An I/O System for Mach 3.0", ) W
/Times-Italic-ISOLatin1 F 1000 o f
16.8 0 32 (Proceedings of) W
2088 -54238 M
(the USENIX Mach Symposium) h
/Times-Roman-ISOLatin1 F 1000 o f
(, pp. 163\255176, November, 1991.) h
2088 -55438 M
288 -57038 M
([5]) h
2088 -57038 M
(Gien, Michel, "Micro\255kernel Design", ) h
/Times-Italic-ISOLatin1 F 1000 o f
(UNIX REVIEW) h
/Times-Roman-ISOLatin1 F 1000 o f
(, vol. 8, no. 11, pp. 58\25563, November, 1990.) h
2088 -58238 M
288 -59838 M
([6]) h
2088 -59838 M
17.5 0 32 (Golub, David, Dean, Randall, Forin, Alessandro, and Rashid, Richard, "UNIX as an Application Pro\255) W
2088 -61038 M
(gram", ) h
/Times-Italic-ISOLatin1 F 1000 o f
(USENIX Summer Conference Proceedings) h
/Times-Roman-ISOLatin1 F 1000 o f
(, pp. 87\25595, June, 1990.) h
2088 -62238 M
2088 -63438 M
-9000 6600 T
R

showpage
$P e

%%Page: 17 17
/$P a D
g N
0 79200 T
S
S
7200 -74700 T
N
0 G
23400 -1188 M
-7200 74700 T
R

R
S
9000 -6600 T
N
0 G
288 -1038 M
/Times-Roman-ISOLatin1 $
/Times-Roman & P
/Times-Roman-ISOLatin1 F 1000 o f
([7]) h
2088 -1038 M
40.3 0 32 (Goldenberg, Ruth E. and Kenah, Lawrence J., ) W
/Times-Italic-ISOLatin1 $
/Times-Italic & P
/Times-Italic-ISOLatin1 F 1000 o f
40.3 0 32 (VAX/VMS Internals and Data Structures, Version 5.2) W
/Times-Roman-ISOLatin1 F 1000 o f
40.3 0 32 (. ) W
2088 -2238 M
(Digital Equipment Corporation, Order No. EY\255C171E\255DP, 1991.) h
2088 -3438 M
288 -5038 M
([8]) h
2088 -5038 M
/Times-Italic-ISOLatin1 F 1000 o f
44.9 0 32 (IEEE Standard Portable Operating System Interface for Computer Environments, IEEE Std. 1003.1\255) W
2088 -6238 M
(1988) h
/Times-Roman-ISOLatin1 F 1000 o f
(, Institute of Electrical and Electronics Engineers, Inc., 1988.) h
2088 -7438 M
288 -9038 M
([9]) h
2088 -9038 M
2.1 0 32 (Loepere, Keith, ) W
/Times-Italic-ISOLatin1 F 1000 o f
2.1 0 32 (MACH 3 Kernel Principles) W
/Times-Roman-ISOLatin1 F 1000 o f
2.1 0 32 (, Open Software Foundation and Carnegie Mellon Univer\255) W
2088 -10238 M
(sity, 1991.) h
2088 -11438 M
288 -13038 M
([10]) h
2088 -13038 M
41.5 0 32 (Loepere, Keith, editor, ) W
/Times-Italic-ISOLatin1 F 1000 o f
41.5 0 32 (Server Writer's Guide) W
/Times-Roman-ISOLatin1 F 1000 o f
41.5 0 32 (, Open Software Foundation and Carnegie Mellon Uni\255) W
2088 -14238 M
(versity, 1990.) h
2088 -15438 M
288 -17038 M
([11]) h
2088 -17038 M
(Rashid, Richard, "A Catalyst for Open Systems", ) h
/Times-Italic-ISOLatin1 F 1000 o f
(Datamation) h
/Times-Roman-ISOLatin1 F 1000 o f
(, vol. 35, pp. 32\25533, May 15, 1989.) h
288 -18338 M
-9000 6600 T
R

showpage
$P e

%%Trailer
$D restore
end % DEC_WRITE_dict
%%Pages: 17
%%DocumentFonts: Times-Bold
%%+ Times-Italic
%%+ Times-Roman
%%+ Symbol
%%+ Helvetica
%%+ Helvetica-BoldOblique
%%+ Helvetica-Bold
